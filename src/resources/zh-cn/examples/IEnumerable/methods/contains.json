{
	"1.js": "let fruits = [ \"apple\", \"banana\", \"mango\", \"orange\", \"passionfruit\", \"grape\" ];\r\n\r\nlet fruit = \"mango\";\r\n\r\nlet hasMango = fruits.asEnumerable().contains(fruit);\r\n\r\nconsole.log(`The array ${ hasMango ? \"does\" : \"does not\" } contain '${ fruit }'.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// The array does contain 'mango'.",
	"2.js": "// Custom comparer for contains\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Fruits are equal if their names and product numbers are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits = [\r\n    { name: \"apple\", code: 9 },\r\n    { name: \"orange\", code: 4 },\r\n    { name: \"lemon\", code: 12 }\r\n];\r\n\r\nlet apple = { name: \"apple\", code: 9 };\r\nlet kiwi = { name: \"kiwi\", code: 8 };\r\n\r\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\r\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\r\n\r\nconsole.log(\"Apple? \" + hasApple);\r\nconsole.log(\"Kiwi? \" + hasKiwi);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Apple? true\r\n Kiwi? false\r\n */"
}
{
	"1.js": "let petOwners = [\r\n    { name: \"李小龙\", pets: [ \"小白\", \"旺财\" ] },\r\n    { name: \"成龙\", pets: [ \"大黄\", \"甜心\" ] },\r\n    { name: \"李连杰\", pets: [ \"花花\", \"狗带\" ] }\r\n];\r\n\r\n// 使用 selectMany() 查询。\r\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\r\n\r\nconsole.log(\"使用 selectMany()：\");\r\n\r\n// 只需要一个循环来遍历这个结果序列，\r\n// 因为它已经是一个一维序列了。\r\nfor (let pet of query1) {\r\n    console.log(pet);\r\n}\r\n\r\n// 下面的代码演示了如何使用 select()\r\n// 来代替 selectMany()。\r\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\r\n\r\nconsole.log(\"\\n使用 select()：\");\r\n\r\n// 需要两层循环来遍历结果序列，\r\n// 因为它是一个元素为序列的序列。\r\nfor (let petList of query2) {\r\n    for (let pet of petList) {\r\n        console.log(pet);\r\n    }\r\n    console.log();\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 使用 selectMany()：:\r\n 小白\r\n 旺财\r\n 大黄\r\n 甜心\r\n 花花\r\n 狗带\r\n\r\n 使用 select()：:\r\n 小白\r\n 旺财\r\n\r\n 大黄\r\n 甜心\r\n\r\n 花花\r\n 狗带\r\n\r\n*/",
	"2.js": "let petOwners = [\r\n    { name: \"李小龙\", pets: [ \"小白\", \"小石头\" ] },\r\n    { name: \"成龙\", pets: [ \"大黄\", \"小甜心\" ] },\r\n    { name: \"李连杰\", pets: [ \"小花\", \"狗带\" ] },\r\n    { name: \"甄子丹\", pets: [ \"斑点\" ] }\r\n];\r\n\r\n// 使用宠物列表中的宠物名字\r\n// 追加在宠物主人的序号后的方式\r\n// 投影序列中的元素。\r\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\r\n        petOwner.pets.asEnumerable().select(pet => index + pet));\r\n\r\nfor (let pet of query) {\r\n    console.log(pet);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 0小白\r\n// 0小石头\r\n// 1大黄\r\n// 1小甜心\r\n// 2小花\r\n// 2狗带\r\n// 3斑点",
	"3.js": "let petOwners = [\r\n    { name: \"李小龙\", pets: [ \"小白\", \"小石头\" ] },\r\n    { name: \"成龙\", pets: [ \"大黄\", \"小甜心\" ] },\r\n    { name: \"李连杰\", pets: [ \"小花\", \"狗带\" ] },\r\n    { name: \"甄子丹\", pets: [ \"斑点\" ] }\r\n];\r\n\r\n// 投影宠物主人的名称和宠物的名称。\r\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\r\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\"小\"))\r\n        .select(ownerAndPet => ({\r\n            owner: ownerAndPet.petOwner.name,\r\n            pet: ownerAndPet.petName\r\n        }));\r\n\r\n// 输出结果。\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// {\"owner\":\"李小龙\",\"pet\":\"小白\"}\r\n// {\"owner\":\"李小龙\",\"pet\":\"小石头\"}\r\n// {\"owner\":\"成龙\",\"pet\":\"小甜心\"}\r\n// {\"owner\":\"李连杰\",\"pet\":\"小花\"}"
}
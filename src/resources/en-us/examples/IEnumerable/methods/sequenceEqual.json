{
	"1.js": "let pet1 = { name: \"Turbo\", age: 2 };\r\nlet pet2 = { name: \"Peanut\", age: 8 };\r\n\r\n// Create two lists of pets.\r\nlet pets1 = [ pet1, pet2 ];\r\nlet pets2 = [ pet1, pet2 ];\r\n\r\nlet equal = pets1.asEnumerable().sequenceEqual(pets2);\r\n\r\nconsole.log(`The lists ${ equal ? \"are\" : \"are not\" } equal.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The lists are equal.\r\n*/",
	"2.js": "// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和数目相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet storeA = [\r\n    { name: \"apple\", code: 9 },\r\n    { name: \"orange\", code: 4 }\r\n];\r\n\r\nlet storeB = [\r\n    { name: \"apple\", code: 9 },\r\n    { name: \"orange\", code: 4 }\r\n];\r\n\r\nlet equalAB = storeA.asEnumerable().sequenceEqual(storeB, productComparer);\r\n\r\nconsole.log(\"Equal? \" + equalAB);\r\n\r\n/*\r\n    This code produces the following output:\r\n\r\n    Equal? True\r\n*/"
}
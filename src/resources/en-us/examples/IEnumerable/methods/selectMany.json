{
	"1.js": "let petOwners = [\r\n    { name: \"Higa, Sidney\", pets: [ \"Scruffy\", \"Sam\" ] },\r\n    { name: \"Ashkenazi, Ronen\", pets: [ \"Walker\", \"Sugar\" ] },\r\n    { name: \"Price, Vernette\", pets: [ \"Scratches\", \"Diesel\" ] }\r\n];\r\n\r\n// Query using selectMany().\r\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\r\n\r\nconsole.log(\"Using selectMany():\");\r\n\r\n// Only one foreach loop is required to iterate\r\n// through the results since it is a\r\n// one-dimensional collection.\r\nfor (let pet of query1) {\r\n    console.log(pet);\r\n}\r\n\r\n// This code shows how to use select()\r\n// instead of selectMany().\r\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\r\n\r\nconsole.log(\"\\nUsing select():\");\r\n\r\n// Notice that two foreach loops are required to\r\n// iterate through the results\r\n// because the query returns a collection of arrays.\r\nfor (let petList of query2) {\r\n    for (let pet of petList) {\r\n        console.log(pet);\r\n    }\r\n    console.log();\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Using selectMany():\r\n Scruffy\r\n Sam\r\n Walker\r\n Sugar\r\n Scratches\r\n Diesel\r\n\r\n Using select():\r\n Scruffy\r\n Sam\r\n\r\n Walker\r\n Sugar\r\n\r\n Scratches\r\n Diesel\r\n\r\n*/",
	"2.js": "let petOwners = [\r\n    { name: \"Higa, Sidney\", pets: [ \"Scruffy\", \"Sam\" ] },\r\n    { name: \"Ashkenazi, Ronen\", pets: [ \"Walker\", \"Sugar\" ] },\r\n    { name: \"Price, Vernette\", pets: [ \"Scratches\", \"Diesel\" ] },\r\n    { name: \"Hines, Patrick\", pets: [ \"Dusty\" ] }\r\n];\r\n\r\n// Project the items in the array by appending the index\r\n// of each PetOwner to each pet's name in that petOwner's\r\n// array of pets.\r\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\r\n        petOwner.pets.asEnumerable().select(pet => index + pet));\r\n\r\nfor (let pet of query) {\r\n    console.log(pet);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// 0Scruffy\r\n// 0Sam\r\n// 1Walker\r\n// 1Sugar\r\n// 2Scratches\r\n// 2Diesel\r\n// 3Dusty",
	"3.js": "let petOwners = [\r\n    { name: \"Higa, Sidney\", pets: [ \"Scruffy\", \"Sam\" ] },\r\n    { name: \"Ashkenazi, Ronen\", pets: [ \"Walker\", \"Sugar\" ] },\r\n    { name: \"Price, Vernette\", pets: [ \"Scratches\", \"Diesel\" ] },\r\n    { name: \"Hines, Patrick\", pets: [ \"Dusty\" ] }\r\n];\r\n\r\n// Project the pet owner's name and the pet's name.\r\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\r\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\"S\"))\r\n        .select(ownerAndPet => ({\r\n            owner: ownerAndPet.petOwner.name,\r\n            pet: ownerAndPet.petName\r\n        }));\r\n\r\n// Print the results.\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// {\"owner\":\"Higa\",\"pet\":\"Scruffy\"}\r\n// {\"owner\":\"Higa\",\"pet\":\"Sam\"}\r\n// {\"owner\":\"Ashkenazi\",\"pet\":\"Sugar\"}\r\n// {\"owner\":\"Price\",\"pet\":\"Scratches\"}"
}
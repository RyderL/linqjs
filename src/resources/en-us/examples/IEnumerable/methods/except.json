{
	"1.js": "let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\r\nlet numbers2 = [ 2.2 ];\r\n\r\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\r\n\r\nfor (let number of onlyInFirstSet) {\r\n    console.log(number);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 2\r\n 2.1\r\n 2.3\r\n 2.4\r\n 2.5\r\n */",
	"2.js": "// Custom comparer for distinct\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Check whether the products' properties are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits1 = [\r\n    { name: \"apple\", code: 9 },\r\n    { name: \"orange\", code: 4 },\r\n    { name: \"lemon\", code: 12 }\r\n];\r\n\r\nlet fruits2 = [ { name: \"apple\", code: 9 } ];\r\n\r\n//Get all the elements from the first array\r\n//except for the elements from the second array.\r\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\r\n\r\nfor (let product of except) {\r\n    console.log(product.name + \" \" + product.code);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n orange 4\r\n lemon 12\r\n */"
}
{
	"1.js": "let magnus = { name: \"Hedlund, Magnus\" };\r\nlet terry = { name: \"Adams, Terry\" };\r\nlet charlotte = { name: \"Weiss, Charlotte\" };\r\n\r\nlet barley = { name: \"Barley\", owner: terry };\r\nlet boots = { name: \"Boots\", owner: terry };\r\nlet whiskers = { name: \"Whiskers\", owner: charlotte };\r\nlet daisy = { name: \"Daisy\", owner: magnus };\r\n\r\nlet people = [ magnus, terry, charlotte ];\r\nlet pets = [ barley, boots, whiskers, daisy ];\r\n\r\n// Create a list where each element is an anonymous\r\n// type that contains a person's name and\r\n// a collection of names of the pets they own.\r\nlet query = people.asEnumerable().groupJoin(pets,\r\n    (person, petCollection) => ({\r\n        ownerName: person.name,\r\n        pets: petCollection.select(pet => pet.name)\r\n    }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    // Output the owner's name.\r\n    console.log(`${ obj.ownerName }:`);\r\n    // Output each of the owner's pet's names.\r\n    for (let pet of obj.pets) {\r\n        console.log(`  ${ pet }`);\r\n    }\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Hedlund, Magnus:\r\n   Daisy\r\n Adams, Terry:\r\n   Barley\r\n   Boots\r\n Weiss, Charlotte:\r\n   Whiskers\r\n */"
}
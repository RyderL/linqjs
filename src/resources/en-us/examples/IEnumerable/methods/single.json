{
	"1.js": "let fruits1 = [ \"orange\" ];\r\n\r\nlet fruit1 = fruits1.asEnumerable().single();\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n orange\r\n*/",
	"2.js": "let fruits2 = [ \"orange\", \"apple\" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits2.asEnumerable().single();\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log(\"The collection does not contain exactly one element.\");\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The collection does not contain exactly one element.\r\n*/\r\n",
	"3.js": "let fruits = [ \"apple\", \"banana\", \"mango\", \"orange\", \"passionfruit\", \"grape\" ];\r\n\r\nlet fruit1 = fruits.asEnumerable().single(fruit => fruit.length > 10);\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n passionfruit\r\n*/",
	"4.js": "let fruits = [ \"apple\", \"banana\", \"mango\", \"orange\", \"passionfruit\", \"grape\" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits.asEnumerable().single(fruit => fruit.length > 15);\r\n\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log(\"The collection does not contain exactly one element whose length is greater than 15.\");\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// The collection does not contain exactly one element whose length is greater than 15."
}
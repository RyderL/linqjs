{"version":3,"sources":["webpack:///0.js","webpack:///./src/resources ^\\.\\/.*\\.json$","webpack:///./src ^\\.\\/resources.*\\.json$","webpack:///./src/resources/en-us/apis/Enumerable.json","webpack:///./src/resources/en-us/apis/Enumerable/meta.json","webpack:///./src/resources/en-us/apis/Enumerable/methods/asEnumerable.json","webpack:///./src/resources/en-us/apis/Enumerable/methods/empty.json","webpack:///./src/resources/en-us/apis/Enumerable/properties/actions.json","webpack:///./src/resources/en-us/apis/Enumerable/properties/comparers.json","webpack:///./src/resources/en-us/apis/Enumerable/properties/config.json","webpack:///./src/resources/en-us/apis/Enumerable/properties/predicates.json","webpack:///./src/resources/en-us/apis/Enumerable/properties/selectors.json","webpack:///./src/resources/en-us/caption.json","webpack:///./src/resources/en-us/change.json","webpack:///./src/resources/en-us/directory.json","webpack:///./src/resources/en-us/directory.meta.json","webpack:///./src/resources/en-us/examples/IEnumerable.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/aggregate.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/all.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/any.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/average.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/concat.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/contains.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/count.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/distinct.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/elementAt.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/except.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/first.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/firstOrDefault.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/groupBy.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/groupJoin.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/intersect.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/join.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/max.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/min.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/ofType.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/orderBy.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/orderByDescending.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/select.json","webpack:///./src/resources/en-us/examples/IEnumerable/methods/selectMany.json","webpack:///./src/resources/en-us/examples/config.json","webpack:///./src/resources/en-us/examples/instance.json","webpack:///./src/resources/en-us/examples/selector.json","webpack:///./src/resources/en-us/examples/use.json","webpack:///./src/resources/en-us/guides/action.json","webpack:///./src/resources/en-us/guides/comparer.json","webpack:///./src/resources/en-us/guides/config.json","webpack:///./src/resources/en-us/guides/instance.json","webpack:///./src/resources/en-us/guides/predicate.json","webpack:///./src/resources/en-us/guides/selector.json","webpack:///./src/resources/en-us/guides/use.json","webpack:///./src/resources/en-us/install.json","webpack:///./src/resources/en-us/introduction.json","webpack:///./src/resources/en-us/meta.json","webpack:///./src/resources/zh-cn/about.json","webpack:///./src/resources/zh-cn/apis/Directory.json","webpack:///./src/resources/zh-cn/apis/Directory/meta.json","webpack:///./src/resources/zh-cn/apis/Directory/methods/delete.json","webpack:///./src/resources/zh-cn/apis/Directory/methods/get.json","webpack:///./src/resources/zh-cn/apis/Directory/methods/has.json","webpack:///./src/resources/zh-cn/apis/Directory/methods/set.json","webpack:///./src/resources/zh-cn/apis/Entry.json","webpack:///./src/resources/zh-cn/apis/Entry/meta.json","webpack:///./src/resources/zh-cn/apis/Entry/properties/key.json","webpack:///./src/resources/zh-cn/apis/Entry/properties/value.json","webpack:///./src/resources/zh-cn/apis/Enumerable.actions.json","webpack:///./src/resources/zh-cn/apis/Enumerable.actions/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable.actions/properties/default.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/methods/array.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/methods/greater.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/methods/less.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/properties/default.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/properties/equality.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/properties/same.json","webpack:///./src/resources/zh-cn/apis/Enumerable.comparers/properties/strict.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/properties/as.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/properties/extends.array.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/properties/extends.object.json","webpack:///./src/resources/zh-cn/apis/Enumerable.config/properties/extends.string.json","webpack:///./src/resources/zh-cn/apis/Enumerable.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/equality.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/not.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/properties.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/same.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/selector.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/methods/strict.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/properties/default.json","webpack:///./src/resources/zh-cn/apis/Enumerable.predicates/properties/exists.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/methods/property.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/children.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/default.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/join.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/key.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/parent.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/result.json","webpack:///./src/resources/zh-cn/apis/Enumerable.selectors/properties/value.json","webpack:///./src/resources/zh-cn/apis/Enumerable/meta.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/asEnumerable.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/between.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/empty.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/from.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/generate.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/noConflict.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/range.json","webpack:///./src/resources/zh-cn/apis/Enumerable/methods/repeat.json","webpack:///./src/resources/zh-cn/apis/Enumerable/properties/actions.json","webpack:///./src/resources/zh-cn/apis/Enumerable/properties/comparers.json","webpack:///./src/resources/zh-cn/apis/Enumerable/properties/config.json","webpack:///./src/resources/zh-cn/apis/Enumerable/properties/predicates.json","webpack:///./src/resources/zh-cn/apis/Enumerable/properties/selectors.json","webpack:///./src/resources/zh-cn/apis/IChunk.json","webpack:///./src/resources/zh-cn/apis/IChunk/meta.json","webpack:///./src/resources/zh-cn/apis/IChunk/properties/index.json","webpack:///./src/resources/zh-cn/apis/IEnumerable.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/meta.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/aggregate.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/all.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/any.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/average.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/chunk.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/combine.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/concat.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/contains.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/copyWithin.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/count.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/distinct.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/elementAt.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/every.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/except.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/fill.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/filter.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/find.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/findIndex.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/findLast.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/first.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/forEach.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/groupBy.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/groupJoin.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/includes.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/indexOf.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/innerJoin.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/intersect.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/join.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/last.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/leftJoin.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/leftPad.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/map.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/max.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/min.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/nearBy.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/ofType.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/orderBy.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/pop.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/product.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/push.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/rand.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/random.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/reduce.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/reduceRight.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/reverse.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/rightJoin.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/rightPad.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/select.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/selectMany.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/separate.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/shift.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/single.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/skip.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/skipWhile.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/slice.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/some.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/sort.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/splice.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/sum.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/take.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/takeWhile.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/toArray.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/toDirectory.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/toLookup.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/toObject.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/union.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/unshift.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/where.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/wipe.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/methods/zip.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/properties/length.json","webpack:///./src/resources/zh-cn/apis/IEnumerable/properties/size.json","webpack:///./src/resources/zh-cn/apis/IEnumerator.json","webpack:///./src/resources/zh-cn/apis/IEnumerator/meta.json","webpack:///./src/resources/zh-cn/apis/IEnumerator/methods/moveNext.json","webpack:///./src/resources/zh-cn/apis/IEnumerator/methods/reset.json","webpack:///./src/resources/zh-cn/apis/IEnumerator/properties/current.json","webpack:///./src/resources/zh-cn/apis/IGrouping.json","webpack:///./src/resources/zh-cn/apis/IGrouping/meta.json","webpack:///./src/resources/zh-cn/apis/IGrouping/properties/key.json","webpack:///./src/resources/zh-cn/apis/IMapEnumerable.json","webpack:///./src/resources/zh-cn/apis/IMapEnumerable/meta.json","webpack:///./src/resources/zh-cn/apis/IMapEnumerable/methods/forEach.json","webpack:///./src/resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json","webpack:///./src/resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json","webpack:///./src/resources/zh-cn/apis/IOrderedEnumerable.json","webpack:///./src/resources/zh-cn/apis/IOrderedEnumerable/meta.json","webpack:///./src/resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json","webpack:///./src/resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json","webpack:///./src/resources/zh-cn/apis/Lookup.json","webpack:///./src/resources/zh-cn/apis/Lookup/meta.json","webpack:///./src/resources/zh-cn/apis/Lookup/methods/get.json","webpack:///./src/resources/zh-cn/apis/Lookup/methods/set.json","webpack:///./src/resources/zh-cn/apis/Plugin.json","webpack:///./src/resources/zh-cn/apis/Plugin/meta.json","webpack:///./src/resources/zh-cn/caption.json","webpack:///./src/resources/zh-cn/change.json","webpack:///./src/resources/zh-cn/change/2.1.15.json","webpack:///./src/resources/zh-cn/change/2.1.16.json","webpack:///./src/resources/zh-cn/change/2.1.17.json","webpack:///./src/resources/zh-cn/change/2.1.18.json","webpack:///./src/resources/zh-cn/change/2.1.19.json","webpack:///./src/resources/zh-cn/change/2.1.20.pre.json","webpack:///./src/resources/zh-cn/directory.json","webpack:///./src/resources/zh-cn/directory.meta.json","webpack:///./src/resources/zh-cn/examples/IEnumerable.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/aggregate.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/all.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/any.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/average.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/chunk.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/concat.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/contains.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/copyWithin.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/count.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/distinct.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/elementAt.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/every.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/except.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/fill.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/filter.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/find.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/findIndex.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/findLast.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/first.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/forEach.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/groupBy.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/groupJoin.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/includes.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/indexOf.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/intersect.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/join.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/last.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/map.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/max.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/min.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/ofType.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/orderBy.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/pop.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/product.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/push.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/rand.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/reduce.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/reduceRight.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/reserver.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/reverse.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/rightJoin.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/rightPad.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/select.json","webpack:///./src/resources/zh-cn/examples/IEnumerable/methods/selectMany.json","webpack:///./src/resources/zh-cn/examples/config.json","webpack:///./src/resources/zh-cn/examples/instance.json","webpack:///./src/resources/zh-cn/examples/selector.json","webpack:///./src/resources/zh-cn/examples/use.json","webpack:///./src/resources/zh-cn/guides/action.json","webpack:///./src/resources/zh-cn/guides/comparer.json","webpack:///./src/resources/zh-cn/guides/config.json","webpack:///./src/resources/zh-cn/guides/enumerator.json","webpack:///./src/resources/zh-cn/guides/extend.json","webpack:///./src/resources/zh-cn/guides/instance.json","webpack:///./src/resources/zh-cn/guides/iterator.json","webpack:///./src/resources/zh-cn/guides/plugin.json","webpack:///./src/resources/zh-cn/guides/predicate.json","webpack:///./src/resources/zh-cn/guides/selector.json","webpack:///./src/resources/zh-cn/guides/use.json","webpack:///./src/resources/zh-cn/install.json","webpack:///./src/resources/zh-cn/introduction.json","webpack:///./src/resources/zh-cn/meta.json"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","webpackContext","req","webpackContextResolve","id","map","Error","./en-us/apis/Enumerable.json","./en-us/apis/Enumerable/meta.json","./en-us/apis/Enumerable/methods/asEnumerable.json","./en-us/apis/Enumerable/methods/empty.json","./en-us/apis/Enumerable/properties/actions.json","./en-us/apis/Enumerable/properties/comparers.json","./en-us/apis/Enumerable/properties/config.json","./en-us/apis/Enumerable/properties/predicates.json","./en-us/apis/Enumerable/properties/selectors.json","./en-us/caption.json","./en-us/change.json","./en-us/directory.json","./en-us/directory.meta.json","./en-us/examples/IEnumerable.json","./en-us/examples/IEnumerable/methods/aggregate.json","./en-us/examples/IEnumerable/methods/all.json","./en-us/examples/IEnumerable/methods/any.json","./en-us/examples/IEnumerable/methods/average.json","./en-us/examples/IEnumerable/methods/concat.json","./en-us/examples/IEnumerable/methods/contains.json","./en-us/examples/IEnumerable/methods/count.json","./en-us/examples/IEnumerable/methods/defaultIfEmpty.json","./en-us/examples/IEnumerable/methods/distinct.json","./en-us/examples/IEnumerable/methods/elementAt.json","./en-us/examples/IEnumerable/methods/elementAtOrDefault.json","./en-us/examples/IEnumerable/methods/except.json","./en-us/examples/IEnumerable/methods/first.json","./en-us/examples/IEnumerable/methods/firstOrDefault.json","./en-us/examples/IEnumerable/methods/groupBy.json","./en-us/examples/IEnumerable/methods/groupJoin.json","./en-us/examples/IEnumerable/methods/intersect.json","./en-us/examples/IEnumerable/methods/join.json","./en-us/examples/IEnumerable/methods/max.json","./en-us/examples/IEnumerable/methods/min.json","./en-us/examples/IEnumerable/methods/ofType.json","./en-us/examples/IEnumerable/methods/orderBy.json","./en-us/examples/IEnumerable/methods/orderByDescending.json","./en-us/examples/IEnumerable/methods/select.json","./en-us/examples/IEnumerable/methods/selectMany.json","./en-us/examples/config.json","./en-us/examples/instance.json","./en-us/examples/selector.json","./en-us/examples/use.json","./en-us/guides/action.json","./en-us/guides/comparer.json","./en-us/guides/config.json","./en-us/guides/instance.json","./en-us/guides/predicate.json","./en-us/guides/selector.json","./en-us/guides/use.json","./en-us/install.json","./en-us/introduction.json","./en-us/meta.json","./lang.json","./versions.json","./zh-cn/about.json","./zh-cn/apis/Directory.json","./zh-cn/apis/Directory/meta.json","./zh-cn/apis/Directory/methods/delete.json","./zh-cn/apis/Directory/methods/get.json","./zh-cn/apis/Directory/methods/has.json","./zh-cn/apis/Directory/methods/set.json","./zh-cn/apis/Entry.json","./zh-cn/apis/Entry/meta.json","./zh-cn/apis/Entry/properties/key.json","./zh-cn/apis/Entry/properties/value.json","./zh-cn/apis/Enumerable.actions.json","./zh-cn/apis/Enumerable.actions/meta.json","./zh-cn/apis/Enumerable.actions/properties/default.json","./zh-cn/apis/Enumerable.comparers.json","./zh-cn/apis/Enumerable.comparers/meta.json","./zh-cn/apis/Enumerable.comparers/methods/array.json","./zh-cn/apis/Enumerable.comparers/methods/greater.json","./zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json","./zh-cn/apis/Enumerable.comparers/methods/less.json","./zh-cn/apis/Enumerable.comparers/methods/predicate.json","./zh-cn/apis/Enumerable.comparers/properties/default.json","./zh-cn/apis/Enumerable.comparers/properties/equality.json","./zh-cn/apis/Enumerable.comparers/properties/same.json","./zh-cn/apis/Enumerable.comparers/properties/strict.json","./zh-cn/apis/Enumerable.config.json","./zh-cn/apis/Enumerable.config/meta.json","./zh-cn/apis/Enumerable.config/properties/as.json","./zh-cn/apis/Enumerable.config/properties/extends.array.json","./zh-cn/apis/Enumerable.config/properties/extends.lazy.json","./zh-cn/apis/Enumerable.config/properties/extends.object.json","./zh-cn/apis/Enumerable.config/properties/extends.string.json","./zh-cn/apis/Enumerable.json","./zh-cn/apis/Enumerable.predicates.json","./zh-cn/apis/Enumerable.predicates/meta.json","./zh-cn/apis/Enumerable.predicates/methods/equality.json","./zh-cn/apis/Enumerable.predicates/methods/not.json","./zh-cn/apis/Enumerable.predicates/methods/properties.json","./zh-cn/apis/Enumerable.predicates/methods/regexp.json","./zh-cn/apis/Enumerable.predicates/methods/same.json","./zh-cn/apis/Enumerable.predicates/methods/selector.json","./zh-cn/apis/Enumerable.predicates/methods/strict.json","./zh-cn/apis/Enumerable.predicates/properties/default.json","./zh-cn/apis/Enumerable.predicates/properties/exists.json","./zh-cn/apis/Enumerable.selectors.json","./zh-cn/apis/Enumerable.selectors/meta.json","./zh-cn/apis/Enumerable.selectors/methods/property.json","./zh-cn/apis/Enumerable.selectors/properties/children.json","./zh-cn/apis/Enumerable.selectors/properties/default.json","./zh-cn/apis/Enumerable.selectors/properties/join.json","./zh-cn/apis/Enumerable.selectors/properties/key.json","./zh-cn/apis/Enumerable.selectors/properties/parent.json","./zh-cn/apis/Enumerable.selectors/properties/result.json","./zh-cn/apis/Enumerable.selectors/properties/value.json","./zh-cn/apis/Enumerable/meta.json","./zh-cn/apis/Enumerable/methods/asEnumerable.json","./zh-cn/apis/Enumerable/methods/between.json","./zh-cn/apis/Enumerable/methods/empty.json","./zh-cn/apis/Enumerable/methods/from.json","./zh-cn/apis/Enumerable/methods/generate.json","./zh-cn/apis/Enumerable/methods/noConflict.json","./zh-cn/apis/Enumerable/methods/range.json","./zh-cn/apis/Enumerable/methods/repeat.json","./zh-cn/apis/Enumerable/properties/actions.json","./zh-cn/apis/Enumerable/properties/comparers.json","./zh-cn/apis/Enumerable/properties/config.json","./zh-cn/apis/Enumerable/properties/predicates.json","./zh-cn/apis/Enumerable/properties/selectors.json","./zh-cn/apis/IChunk.json","./zh-cn/apis/IChunk/meta.json","./zh-cn/apis/IChunk/properties/index.json","./zh-cn/apis/IEnumerable.json","./zh-cn/apis/IEnumerable/meta.json","./zh-cn/apis/IEnumerable/methods/aggregate.json","./zh-cn/apis/IEnumerable/methods/all.json","./zh-cn/apis/IEnumerable/methods/any.json","./zh-cn/apis/IEnumerable/methods/asEnumerable.json","./zh-cn/apis/IEnumerable/methods/average.json","./zh-cn/apis/IEnumerable/methods/chunk.json","./zh-cn/apis/IEnumerable/methods/combine.json","./zh-cn/apis/IEnumerable/methods/concat.json","./zh-cn/apis/IEnumerable/methods/contains.json","./zh-cn/apis/IEnumerable/methods/copyWithin.json","./zh-cn/apis/IEnumerable/methods/count.json","./zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json","./zh-cn/apis/IEnumerable/methods/distinct.json","./zh-cn/apis/IEnumerable/methods/elementAt.json","./zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json","./zh-cn/apis/IEnumerable/methods/every.json","./zh-cn/apis/IEnumerable/methods/except.json","./zh-cn/apis/IEnumerable/methods/fill.json","./zh-cn/apis/IEnumerable/methods/filter.json","./zh-cn/apis/IEnumerable/methods/find.json","./zh-cn/apis/IEnumerable/methods/findIndex.json","./zh-cn/apis/IEnumerable/methods/findLast.json","./zh-cn/apis/IEnumerable/methods/findLastIndex.json","./zh-cn/apis/IEnumerable/methods/first.json","./zh-cn/apis/IEnumerable/methods/firstOrDefault.json","./zh-cn/apis/IEnumerable/methods/forEach.json","./zh-cn/apis/IEnumerable/methods/getEnumerator.json","./zh-cn/apis/IEnumerable/methods/groupBy.json","./zh-cn/apis/IEnumerable/methods/groupJoin.json","./zh-cn/apis/IEnumerable/methods/includes.json","./zh-cn/apis/IEnumerable/methods/indexOf.json","./zh-cn/apis/IEnumerable/methods/innerJoin.json","./zh-cn/apis/IEnumerable/methods/intersect.json","./zh-cn/apis/IEnumerable/methods/join.json","./zh-cn/apis/IEnumerable/methods/last.json","./zh-cn/apis/IEnumerable/methods/lastIndexOf.json","./zh-cn/apis/IEnumerable/methods/lastOrDefault.json","./zh-cn/apis/IEnumerable/methods/leftJoin.json","./zh-cn/apis/IEnumerable/methods/leftPad.json","./zh-cn/apis/IEnumerable/methods/map.json","./zh-cn/apis/IEnumerable/methods/max.json","./zh-cn/apis/IEnumerable/methods/min.json","./zh-cn/apis/IEnumerable/methods/nearBy.json","./zh-cn/apis/IEnumerable/methods/ofType.json","./zh-cn/apis/IEnumerable/methods/orderBy.json","./zh-cn/apis/IEnumerable/methods/orderByDescending.json","./zh-cn/apis/IEnumerable/methods/pop.json","./zh-cn/apis/IEnumerable/methods/product.json","./zh-cn/apis/IEnumerable/methods/push.json","./zh-cn/apis/IEnumerable/methods/rand.json","./zh-cn/apis/IEnumerable/methods/random.json","./zh-cn/apis/IEnumerable/methods/randomOrDefault.json","./zh-cn/apis/IEnumerable/methods/reduce.json","./zh-cn/apis/IEnumerable/methods/reduceRight.json","./zh-cn/apis/IEnumerable/methods/reverse.json","./zh-cn/apis/IEnumerable/methods/rightJoin.json","./zh-cn/apis/IEnumerable/methods/rightPad.json","./zh-cn/apis/IEnumerable/methods/select.json","./zh-cn/apis/IEnumerable/methods/selectMany.json","./zh-cn/apis/IEnumerable/methods/separate.json","./zh-cn/apis/IEnumerable/methods/sequenceEqual.json","./zh-cn/apis/IEnumerable/methods/shift.json","./zh-cn/apis/IEnumerable/methods/single.json","./zh-cn/apis/IEnumerable/methods/singleOrDefault.json","./zh-cn/apis/IEnumerable/methods/skip.json","./zh-cn/apis/IEnumerable/methods/skipWhile.json","./zh-cn/apis/IEnumerable/methods/slice.json","./zh-cn/apis/IEnumerable/methods/some.json","./zh-cn/apis/IEnumerable/methods/sort.json","./zh-cn/apis/IEnumerable/methods/splice.json","./zh-cn/apis/IEnumerable/methods/sum.json","./zh-cn/apis/IEnumerable/methods/take.json","./zh-cn/apis/IEnumerable/methods/takeWhile.json","./zh-cn/apis/IEnumerable/methods/toArray.json","./zh-cn/apis/IEnumerable/methods/toDirectory.json","./zh-cn/apis/IEnumerable/methods/toLookup.json","./zh-cn/apis/IEnumerable/methods/toObject.json","./zh-cn/apis/IEnumerable/methods/union.json","./zh-cn/apis/IEnumerable/methods/unshift.json","./zh-cn/apis/IEnumerable/methods/where.json","./zh-cn/apis/IEnumerable/methods/wipe.json","./zh-cn/apis/IEnumerable/methods/zip.json","./zh-cn/apis/IEnumerable/properties/length.json","./zh-cn/apis/IEnumerable/properties/size.json","./zh-cn/apis/IEnumerator.json","./zh-cn/apis/IEnumerator/meta.json","./zh-cn/apis/IEnumerator/methods/moveNext.json","./zh-cn/apis/IEnumerator/methods/reset.json","./zh-cn/apis/IEnumerator/properties/current.json","./zh-cn/apis/IGrouping.json","./zh-cn/apis/IGrouping/meta.json","./zh-cn/apis/IGrouping/properties/key.json","./zh-cn/apis/IMapEnumerable.json","./zh-cn/apis/IMapEnumerable/meta.json","./zh-cn/apis/IMapEnumerable/methods/forEach.json","./zh-cn/apis/IMapEnumerable/methods/toDirectory.json","./zh-cn/apis/IMapEnumerable/methods/toLookup.json","./zh-cn/apis/IOrderedEnumerable.json","./zh-cn/apis/IOrderedEnumerable/meta.json","./zh-cn/apis/IOrderedEnumerable/methods/thenBy.json","./zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json","./zh-cn/apis/Lookup.json","./zh-cn/apis/Lookup/meta.json","./zh-cn/apis/Lookup/methods/get.json","./zh-cn/apis/Lookup/methods/set.json","./zh-cn/apis/Plugin.json","./zh-cn/apis/Plugin/meta.json","./zh-cn/caption.json","./zh-cn/change.json","./zh-cn/change/2.1.15.json","./zh-cn/change/2.1.16.json","./zh-cn/change/2.1.17.json","./zh-cn/change/2.1.18.json","./zh-cn/change/2.1.19.json","./zh-cn/change/2.1.20.pre.json","./zh-cn/directory.json","./zh-cn/directory.meta.json","./zh-cn/examples/IEnumerable.json","./zh-cn/examples/IEnumerable/methods/aggregate.json","./zh-cn/examples/IEnumerable/methods/all.json","./zh-cn/examples/IEnumerable/methods/any.json","./zh-cn/examples/IEnumerable/methods/asEnumerable.json","./zh-cn/examples/IEnumerable/methods/average.json","./zh-cn/examples/IEnumerable/methods/chunk.json","./zh-cn/examples/IEnumerable/methods/concat.json","./zh-cn/examples/IEnumerable/methods/contains.json","./zh-cn/examples/IEnumerable/methods/copyWithin.json","./zh-cn/examples/IEnumerable/methods/count.json","./zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json","./zh-cn/examples/IEnumerable/methods/distinct.json","./zh-cn/examples/IEnumerable/methods/elementAt.json","./zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json","./zh-cn/examples/IEnumerable/methods/every.json","./zh-cn/examples/IEnumerable/methods/except.json","./zh-cn/examples/IEnumerable/methods/fill.json","./zh-cn/examples/IEnumerable/methods/filter.json","./zh-cn/examples/IEnumerable/methods/find.json","./zh-cn/examples/IEnumerable/methods/findIndex.json","./zh-cn/examples/IEnumerable/methods/findLast.json","./zh-cn/examples/IEnumerable/methods/findLastIndex.json","./zh-cn/examples/IEnumerable/methods/first.json","./zh-cn/examples/IEnumerable/methods/firstOrDefault.json","./zh-cn/examples/IEnumerable/methods/forEach.json","./zh-cn/examples/IEnumerable/methods/getEnumerator.json","./zh-cn/examples/IEnumerable/methods/groupBy.json","./zh-cn/examples/IEnumerable/methods/groupJoin.json","./zh-cn/examples/IEnumerable/methods/includes.json","./zh-cn/examples/IEnumerable/methods/indexOf.json","./zh-cn/examples/IEnumerable/methods/intersect.json","./zh-cn/examples/IEnumerable/methods/join.json","./zh-cn/examples/IEnumerable/methods/last.json","./zh-cn/examples/IEnumerable/methods/lastIndexOf.json","./zh-cn/examples/IEnumerable/methods/lastOrDefault.json","./zh-cn/examples/IEnumerable/methods/map.json","./zh-cn/examples/IEnumerable/methods/max.json","./zh-cn/examples/IEnumerable/methods/min.json","./zh-cn/examples/IEnumerable/methods/ofType.json","./zh-cn/examples/IEnumerable/methods/orderBy.json","./zh-cn/examples/IEnumerable/methods/orderByDescending.json","./zh-cn/examples/IEnumerable/methods/pop.json","./zh-cn/examples/IEnumerable/methods/product.json","./zh-cn/examples/IEnumerable/methods/push.json","./zh-cn/examples/IEnumerable/methods/rand.json","./zh-cn/examples/IEnumerable/methods/reduce.json","./zh-cn/examples/IEnumerable/methods/reduceRight.json","./zh-cn/examples/IEnumerable/methods/reserver.json","./zh-cn/examples/IEnumerable/methods/reverse.json","./zh-cn/examples/IEnumerable/methods/rightJoin.json","./zh-cn/examples/IEnumerable/methods/rightPad.json","./zh-cn/examples/IEnumerable/methods/select.json","./zh-cn/examples/IEnumerable/methods/selectMany.json","./zh-cn/examples/config.json","./zh-cn/examples/instance.json","./zh-cn/examples/selector.json","./zh-cn/examples/use.json","./zh-cn/guides/action.json","./zh-cn/guides/comparer.json","./zh-cn/guides/config.json","./zh-cn/guides/enumerator.json","./zh-cn/guides/extend.json","./zh-cn/guides/instance.json","./zh-cn/guides/iterator.json","./zh-cn/guides/plugin.json","./zh-cn/guides/predicate.json","./zh-cn/guides/selector.json","./zh-cn/guides/use.json","./zh-cn/install.json","./zh-cn/introduction.json","./zh-cn/meta.json","keys","Object","resolve","./resources/en-us/apis/Enumerable.json","./resources/en-us/apis/Enumerable/meta.json","./resources/en-us/apis/Enumerable/methods/asEnumerable.json","./resources/en-us/apis/Enumerable/methods/empty.json","./resources/en-us/apis/Enumerable/properties/actions.json","./resources/en-us/apis/Enumerable/properties/comparers.json","./resources/en-us/apis/Enumerable/properties/config.json","./resources/en-us/apis/Enumerable/properties/predicates.json","./resources/en-us/apis/Enumerable/properties/selectors.json","./resources/en-us/caption.json","./resources/en-us/change.json","./resources/en-us/directory.json","./resources/en-us/directory.meta.json","./resources/en-us/examples/IEnumerable.json","./resources/en-us/examples/IEnumerable/methods/aggregate.json","./resources/en-us/examples/IEnumerable/methods/all.json","./resources/en-us/examples/IEnumerable/methods/any.json","./resources/en-us/examples/IEnumerable/methods/average.json","./resources/en-us/examples/IEnumerable/methods/concat.json","./resources/en-us/examples/IEnumerable/methods/contains.json","./resources/en-us/examples/IEnumerable/methods/count.json","./resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json","./resources/en-us/examples/IEnumerable/methods/distinct.json","./resources/en-us/examples/IEnumerable/methods/elementAt.json","./resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json","./resources/en-us/examples/IEnumerable/methods/except.json","./resources/en-us/examples/IEnumerable/methods/first.json","./resources/en-us/examples/IEnumerable/methods/firstOrDefault.json","./resources/en-us/examples/IEnumerable/methods/groupBy.json","./resources/en-us/examples/IEnumerable/methods/groupJoin.json","./resources/en-us/examples/IEnumerable/methods/intersect.json","./resources/en-us/examples/IEnumerable/methods/join.json","./resources/en-us/examples/IEnumerable/methods/max.json","./resources/en-us/examples/IEnumerable/methods/min.json","./resources/en-us/examples/IEnumerable/methods/ofType.json","./resources/en-us/examples/IEnumerable/methods/orderBy.json","./resources/en-us/examples/IEnumerable/methods/orderByDescending.json","./resources/en-us/examples/IEnumerable/methods/select.json","./resources/en-us/examples/IEnumerable/methods/selectMany.json","./resources/en-us/examples/config.json","./resources/en-us/examples/instance.json","./resources/en-us/examples/selector.json","./resources/en-us/examples/use.json","./resources/en-us/guides/action.json","./resources/en-us/guides/comparer.json","./resources/en-us/guides/config.json","./resources/en-us/guides/instance.json","./resources/en-us/guides/predicate.json","./resources/en-us/guides/selector.json","./resources/en-us/guides/use.json","./resources/en-us/install.json","./resources/en-us/introduction.json","./resources/en-us/meta.json","./resources/lang.json","./resources/versions.json","./resources/zh-cn/about.json","./resources/zh-cn/apis/Directory.json","./resources/zh-cn/apis/Directory/meta.json","./resources/zh-cn/apis/Directory/methods/delete.json","./resources/zh-cn/apis/Directory/methods/get.json","./resources/zh-cn/apis/Directory/methods/has.json","./resources/zh-cn/apis/Directory/methods/set.json","./resources/zh-cn/apis/Entry.json","./resources/zh-cn/apis/Entry/meta.json","./resources/zh-cn/apis/Entry/properties/key.json","./resources/zh-cn/apis/Entry/properties/value.json","./resources/zh-cn/apis/Enumerable.actions.json","./resources/zh-cn/apis/Enumerable.actions/meta.json","./resources/zh-cn/apis/Enumerable.actions/properties/default.json","./resources/zh-cn/apis/Enumerable.comparers.json","./resources/zh-cn/apis/Enumerable.comparers/meta.json","./resources/zh-cn/apis/Enumerable.comparers/methods/array.json","./resources/zh-cn/apis/Enumerable.comparers/methods/greater.json","./resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json","./resources/zh-cn/apis/Enumerable.comparers/methods/less.json","./resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json","./resources/zh-cn/apis/Enumerable.comparers/properties/default.json","./resources/zh-cn/apis/Enumerable.comparers/properties/equality.json","./resources/zh-cn/apis/Enumerable.comparers/properties/same.json","./resources/zh-cn/apis/Enumerable.comparers/properties/strict.json","./resources/zh-cn/apis/Enumerable.config.json","./resources/zh-cn/apis/Enumerable.config/meta.json","./resources/zh-cn/apis/Enumerable.config/properties/as.json","./resources/zh-cn/apis/Enumerable.config/properties/extends.array.json","./resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json","./resources/zh-cn/apis/Enumerable.config/properties/extends.object.json","./resources/zh-cn/apis/Enumerable.config/properties/extends.string.json","./resources/zh-cn/apis/Enumerable.json","./resources/zh-cn/apis/Enumerable.predicates.json","./resources/zh-cn/apis/Enumerable.predicates/meta.json","./resources/zh-cn/apis/Enumerable.predicates/methods/equality.json","./resources/zh-cn/apis/Enumerable.predicates/methods/not.json","./resources/zh-cn/apis/Enumerable.predicates/methods/properties.json","./resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json","./resources/zh-cn/apis/Enumerable.predicates/methods/same.json","./resources/zh-cn/apis/Enumerable.predicates/methods/selector.json","./resources/zh-cn/apis/Enumerable.predicates/methods/strict.json","./resources/zh-cn/apis/Enumerable.predicates/properties/default.json","./resources/zh-cn/apis/Enumerable.predicates/properties/exists.json","./resources/zh-cn/apis/Enumerable.selectors.json","./resources/zh-cn/apis/Enumerable.selectors/meta.json","./resources/zh-cn/apis/Enumerable.selectors/methods/property.json","./resources/zh-cn/apis/Enumerable.selectors/properties/children.json","./resources/zh-cn/apis/Enumerable.selectors/properties/default.json","./resources/zh-cn/apis/Enumerable.selectors/properties/join.json","./resources/zh-cn/apis/Enumerable.selectors/properties/key.json","./resources/zh-cn/apis/Enumerable.selectors/properties/parent.json","./resources/zh-cn/apis/Enumerable.selectors/properties/result.json","./resources/zh-cn/apis/Enumerable.selectors/properties/value.json","./resources/zh-cn/apis/Enumerable/meta.json","./resources/zh-cn/apis/Enumerable/methods/asEnumerable.json","./resources/zh-cn/apis/Enumerable/methods/between.json","./resources/zh-cn/apis/Enumerable/methods/empty.json","./resources/zh-cn/apis/Enumerable/methods/from.json","./resources/zh-cn/apis/Enumerable/methods/generate.json","./resources/zh-cn/apis/Enumerable/methods/noConflict.json","./resources/zh-cn/apis/Enumerable/methods/range.json","./resources/zh-cn/apis/Enumerable/methods/repeat.json","./resources/zh-cn/apis/Enumerable/properties/actions.json","./resources/zh-cn/apis/Enumerable/properties/comparers.json","./resources/zh-cn/apis/Enumerable/properties/config.json","./resources/zh-cn/apis/Enumerable/properties/predicates.json","./resources/zh-cn/apis/Enumerable/properties/selectors.json","./resources/zh-cn/apis/IChunk.json","./resources/zh-cn/apis/IChunk/meta.json","./resources/zh-cn/apis/IChunk/properties/index.json","./resources/zh-cn/apis/IEnumerable.json","./resources/zh-cn/apis/IEnumerable/meta.json","./resources/zh-cn/apis/IEnumerable/methods/aggregate.json","./resources/zh-cn/apis/IEnumerable/methods/all.json","./resources/zh-cn/apis/IEnumerable/methods/any.json","./resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json","./resources/zh-cn/apis/IEnumerable/methods/average.json","./resources/zh-cn/apis/IEnumerable/methods/chunk.json","./resources/zh-cn/apis/IEnumerable/methods/combine.json","./resources/zh-cn/apis/IEnumerable/methods/concat.json","./resources/zh-cn/apis/IEnumerable/methods/contains.json","./resources/zh-cn/apis/IEnumerable/methods/copyWithin.json","./resources/zh-cn/apis/IEnumerable/methods/count.json","./resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json","./resources/zh-cn/apis/IEnumerable/methods/distinct.json","./resources/zh-cn/apis/IEnumerable/methods/elementAt.json","./resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json","./resources/zh-cn/apis/IEnumerable/methods/every.json","./resources/zh-cn/apis/IEnumerable/methods/except.json","./resources/zh-cn/apis/IEnumerable/methods/fill.json","./resources/zh-cn/apis/IEnumerable/methods/filter.json","./resources/zh-cn/apis/IEnumerable/methods/find.json","./resources/zh-cn/apis/IEnumerable/methods/findIndex.json","./resources/zh-cn/apis/IEnumerable/methods/findLast.json","./resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json","./resources/zh-cn/apis/IEnumerable/methods/first.json","./resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json","./resources/zh-cn/apis/IEnumerable/methods/forEach.json","./resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json","./resources/zh-cn/apis/IEnumerable/methods/groupBy.json","./resources/zh-cn/apis/IEnumerable/methods/groupJoin.json","./resources/zh-cn/apis/IEnumerable/methods/includes.json","./resources/zh-cn/apis/IEnumerable/methods/indexOf.json","./resources/zh-cn/apis/IEnumerable/methods/innerJoin.json","./resources/zh-cn/apis/IEnumerable/methods/intersect.json","./resources/zh-cn/apis/IEnumerable/methods/join.json","./resources/zh-cn/apis/IEnumerable/methods/last.json","./resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json","./resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json","./resources/zh-cn/apis/IEnumerable/methods/leftJoin.json","./resources/zh-cn/apis/IEnumerable/methods/leftPad.json","./resources/zh-cn/apis/IEnumerable/methods/map.json","./resources/zh-cn/apis/IEnumerable/methods/max.json","./resources/zh-cn/apis/IEnumerable/methods/min.json","./resources/zh-cn/apis/IEnumerable/methods/nearBy.json","./resources/zh-cn/apis/IEnumerable/methods/ofType.json","./resources/zh-cn/apis/IEnumerable/methods/orderBy.json","./resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json","./resources/zh-cn/apis/IEnumerable/methods/pop.json","./resources/zh-cn/apis/IEnumerable/methods/product.json","./resources/zh-cn/apis/IEnumerable/methods/push.json","./resources/zh-cn/apis/IEnumerable/methods/rand.json","./resources/zh-cn/apis/IEnumerable/methods/random.json","./resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json","./resources/zh-cn/apis/IEnumerable/methods/reduce.json","./resources/zh-cn/apis/IEnumerable/methods/reduceRight.json","./resources/zh-cn/apis/IEnumerable/methods/reverse.json","./resources/zh-cn/apis/IEnumerable/methods/rightJoin.json","./resources/zh-cn/apis/IEnumerable/methods/rightPad.json","./resources/zh-cn/apis/IEnumerable/methods/select.json","./resources/zh-cn/apis/IEnumerable/methods/selectMany.json","./resources/zh-cn/apis/IEnumerable/methods/separate.json","./resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json","./resources/zh-cn/apis/IEnumerable/methods/shift.json","./resources/zh-cn/apis/IEnumerable/methods/single.json","./resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json","./resources/zh-cn/apis/IEnumerable/methods/skip.json","./resources/zh-cn/apis/IEnumerable/methods/skipWhile.json","./resources/zh-cn/apis/IEnumerable/methods/slice.json","./resources/zh-cn/apis/IEnumerable/methods/some.json","./resources/zh-cn/apis/IEnumerable/methods/sort.json","./resources/zh-cn/apis/IEnumerable/methods/splice.json","./resources/zh-cn/apis/IEnumerable/methods/sum.json","./resources/zh-cn/apis/IEnumerable/methods/take.json","./resources/zh-cn/apis/IEnumerable/methods/takeWhile.json","./resources/zh-cn/apis/IEnumerable/methods/toArray.json","./resources/zh-cn/apis/IEnumerable/methods/toDirectory.json","./resources/zh-cn/apis/IEnumerable/methods/toLookup.json","./resources/zh-cn/apis/IEnumerable/methods/toObject.json","./resources/zh-cn/apis/IEnumerable/methods/union.json","./resources/zh-cn/apis/IEnumerable/methods/unshift.json","./resources/zh-cn/apis/IEnumerable/methods/where.json","./resources/zh-cn/apis/IEnumerable/methods/wipe.json","./resources/zh-cn/apis/IEnumerable/methods/zip.json","./resources/zh-cn/apis/IEnumerable/properties/length.json","./resources/zh-cn/apis/IEnumerable/properties/size.json","./resources/zh-cn/apis/IEnumerator.json","./resources/zh-cn/apis/IEnumerator/meta.json","./resources/zh-cn/apis/IEnumerator/methods/moveNext.json","./resources/zh-cn/apis/IEnumerator/methods/reset.json","./resources/zh-cn/apis/IEnumerator/properties/current.json","./resources/zh-cn/apis/IGrouping.json","./resources/zh-cn/apis/IGrouping/meta.json","./resources/zh-cn/apis/IGrouping/properties/key.json","./resources/zh-cn/apis/IMapEnumerable.json","./resources/zh-cn/apis/IMapEnumerable/meta.json","./resources/zh-cn/apis/IMapEnumerable/methods/forEach.json","./resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json","./resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json","./resources/zh-cn/apis/IOrderedEnumerable.json","./resources/zh-cn/apis/IOrderedEnumerable/meta.json","./resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json","./resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json","./resources/zh-cn/apis/Lookup.json","./resources/zh-cn/apis/Lookup/meta.json","./resources/zh-cn/apis/Lookup/methods/get.json","./resources/zh-cn/apis/Lookup/methods/set.json","./resources/zh-cn/apis/Plugin.json","./resources/zh-cn/apis/Plugin/meta.json","./resources/zh-cn/caption.json","./resources/zh-cn/change.json","./resources/zh-cn/change/2.1.15.json","./resources/zh-cn/change/2.1.16.json","./resources/zh-cn/change/2.1.17.json","./resources/zh-cn/change/2.1.18.json","./resources/zh-cn/change/2.1.19.json","./resources/zh-cn/change/2.1.20.pre.json","./resources/zh-cn/directory.json","./resources/zh-cn/directory.meta.json","./resources/zh-cn/examples/IEnumerable.json","./resources/zh-cn/examples/IEnumerable/methods/aggregate.json","./resources/zh-cn/examples/IEnumerable/methods/all.json","./resources/zh-cn/examples/IEnumerable/methods/any.json","./resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json","./resources/zh-cn/examples/IEnumerable/methods/average.json","./resources/zh-cn/examples/IEnumerable/methods/chunk.json","./resources/zh-cn/examples/IEnumerable/methods/concat.json","./resources/zh-cn/examples/IEnumerable/methods/contains.json","./resources/zh-cn/examples/IEnumerable/methods/copyWithin.json","./resources/zh-cn/examples/IEnumerable/methods/count.json","./resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json","./resources/zh-cn/examples/IEnumerable/methods/distinct.json","./resources/zh-cn/examples/IEnumerable/methods/elementAt.json","./resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json","./resources/zh-cn/examples/IEnumerable/methods/every.json","./resources/zh-cn/examples/IEnumerable/methods/except.json","./resources/zh-cn/examples/IEnumerable/methods/fill.json","./resources/zh-cn/examples/IEnumerable/methods/filter.json","./resources/zh-cn/examples/IEnumerable/methods/find.json","./resources/zh-cn/examples/IEnumerable/methods/findIndex.json","./resources/zh-cn/examples/IEnumerable/methods/findLast.json","./resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json","./resources/zh-cn/examples/IEnumerable/methods/first.json","./resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json","./resources/zh-cn/examples/IEnumerable/methods/forEach.json","./resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json","./resources/zh-cn/examples/IEnumerable/methods/groupBy.json","./resources/zh-cn/examples/IEnumerable/methods/groupJoin.json","./resources/zh-cn/examples/IEnumerable/methods/includes.json","./resources/zh-cn/examples/IEnumerable/methods/indexOf.json","./resources/zh-cn/examples/IEnumerable/methods/intersect.json","./resources/zh-cn/examples/IEnumerable/methods/join.json","./resources/zh-cn/examples/IEnumerable/methods/last.json","./resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json","./resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json","./resources/zh-cn/examples/IEnumerable/methods/map.json","./resources/zh-cn/examples/IEnumerable/methods/max.json","./resources/zh-cn/examples/IEnumerable/methods/min.json","./resources/zh-cn/examples/IEnumerable/methods/ofType.json","./resources/zh-cn/examples/IEnumerable/methods/orderBy.json","./resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json","./resources/zh-cn/examples/IEnumerable/methods/pop.json","./resources/zh-cn/examples/IEnumerable/methods/product.json","./resources/zh-cn/examples/IEnumerable/methods/push.json","./resources/zh-cn/examples/IEnumerable/methods/rand.json","./resources/zh-cn/examples/IEnumerable/methods/reduce.json","./resources/zh-cn/examples/IEnumerable/methods/reduceRight.json","./resources/zh-cn/examples/IEnumerable/methods/reserver.json","./resources/zh-cn/examples/IEnumerable/methods/reverse.json","./resources/zh-cn/examples/IEnumerable/methods/rightJoin.json","./resources/zh-cn/examples/IEnumerable/methods/rightPad.json","./resources/zh-cn/examples/IEnumerable/methods/select.json","./resources/zh-cn/examples/IEnumerable/methods/selectMany.json","./resources/zh-cn/examples/config.json","./resources/zh-cn/examples/instance.json","./resources/zh-cn/examples/selector.json","./resources/zh-cn/examples/use.json","./resources/zh-cn/guides/action.json","./resources/zh-cn/guides/comparer.json","./resources/zh-cn/guides/config.json","./resources/zh-cn/guides/enumerator.json","./resources/zh-cn/guides/extend.json","./resources/zh-cn/guides/instance.json","./resources/zh-cn/guides/iterator.json","./resources/zh-cn/guides/plugin.json","./resources/zh-cn/guides/predicate.json","./resources/zh-cn/guides/selector.json","./resources/zh-cn/guides/use.json","./resources/zh-cn/install.json","./resources/zh-cn/introduction.json","./resources/zh-cn/meta.json","constructors","histroys","overloads","description","name","properties","deprecated","methods","class","interface","object","constructor","property","method","since","details","summary","warning","warnings","remark","remarks","example","examples","static","see","declare","parameters","parameter","returns","generics","apis","guide","publish","time","date","prepublish","version","author","email","project","default","value","defaultValue","readonly","lazy","try","run","clear","close","loadRuntime","executing","enableExtend","newInstance","only","both","cannot","contents","code","title","children","1.js","2.js","3.js","2-2.1.19.js","3-2.1.19.js","1.1.js","1-2.1.19.js","config.as.js","config.extends.js","asEnumerable.js","Enumerable.asEnumerable.js","Enumerable.js","1.try.js","descriptions","content","emails","projects","href","publishs","type","extends","implements","types","sees","ref","override","script","index","wheres","params","0.1.js","config.as.try.js","asEnumerable.try.js","Enumerable.asEnumerable.try.js","Enumerable.try.js","optional","tryHref","notTry","icon","runtime","scripts","shields","image"],"mappings":"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AC,MAAA,QACAC,QAAA,UACAC,KAAA,OACAC,KAAA,OACAC,WAAA,aACAC,QAAA,UACAC,OAAA,SACAC,MAAA,QACAC,QAAA,UACAC,QAAA,UACAC,MAAA,QACAC,aAAA,gBACAC,SAAA,WACAC,KAAA,qBACAC,IAAA,SACAC,IAAA,MACAC,MAAA,QACAC,MAAA,QACAC,YAAA,kBACAC,UAAA,YACAC,aAAA,0BACAC,aACAC,KAAA,4BACAC,KAAA,8BACAC,OAAA,8BZw6BM,SAAU7rB,EAAQC,Ga79BxBD,EAAAC,UAEAqqB,QAAA,aACAwB,UACA,YACA,2BACA,+CACA,oFACA,8CACA,iDACA,4CACA,gDACA,2GAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,iHACA,2HACA,yEACA,yDAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,iBACA,qCACA,kCACA,oDACA,qGACA,oDAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,yDACA,qCACA,gEACA,iDACA,6FACA,qDACA,0CACA,kCACA,uCACA,6CACA,4CACA,qEACA,mCACA,GACA,OACA,6CAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,WACA,4EACA,yDACA,gFACA,6CACA,GACA,oBACA,sBACA,8DACA,wFACA,sJACA,GACA,aACA,wDACA,uEACA,4DAEApB,QAAA,WAGAD,YAAA,EACAqB,UACA,WACA,gGACA,0DACA,4DACA,0CACA,kDACA,wCACA,4CACA,6FACA,GACA,oBACA,0CACA,6BACA,GACA,aACA,2DAEApB,QAAA,gBbq+BM,SAAU1qB,EAAQC,Gc3kCxBD,EAAAC,UAEA8rB,KAAA,eACAC,MAAA,iBAGAD,KAAA,UACAC,MAAA,YAGAD,KAAA,SACAC,MAAA,QACAC,WAEAF,KAAA,WACAC,MAAA,2BACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,MACAC,MAAA,YACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,SACAC,MAAA,gBACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,WACAC,MAAA,WACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,YACAC,MA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BD,EAAAC,SACAotB,KAAA,QACAjE,MAAA,SACAkE,WACAC,gB3Ou9jBM,SAAUvtB,EAAQC,G4O39jBxBD,EAAAC,SACA6oB,MAAA,IACAC,UAAA,KACAC,OAAA,KACAC,YAAA,OACAX,aAAA,OACAY,SAAA,KACAP,WAAA,KACAQ,OAAA,KACAN,QAAA,KACAO,MAAA,OACAR,WAAA,OACA+E,SAAA,KACAtE,QAAA,KACAZ,YAAA,KACAa,QAAA,KACAC,QAAA,KACAC,SAAA,KACAC,OAAA,KACAC,QAAA,KACAC,QAAA,KACAC,SAAA,KACAC,OAAA,MACAC,IAAA,KACAC,QAAA,KACAC,WAAA,KACAC,UAAA,KACAC,QAAA,MACAC,SAAA,OACAC,KAAA,QACAC,MAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,KACAC,WAAA,MACAC,QAAA,KACAC,OAAA,KACAC,MAAA,KACAC,QAAA,KACAC,QAAA,KACAC,MAAA,IACAC,aAAA,MACAC,SAAA,KACAC,KAAA,OACAC,IAAA,MACAC,IAAA,KACAC,MAAA,KACAC,MAAA,KACAC,YAAA,QACAC,UAAA,MACAC,aAAA,cACAC,aACAC,KAAA,aACAC,KAAA,qBACAC,OAAA,gB5Om+jBM,SAAU7rB,EAAQC,G6OzhkBxBD,EAAAC,UAEAqqB,QAAA,aACAwB,UACA,YACA,2BACA,+CACA,oFACA,8CACA,iDACA,4CACA,gDACA,2GAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,iHACA,2HACA,yEACA,yDAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,iBACA,qCACA,kCACA,oDACA,qGACA,oDAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,yDACA,qCACA,gEACA,iDACA,6FACA,qDACA,0CACA,kCACA,uCACA,6CACA,4CACA,qEACA,mCACA,GACA,OACA,6CAEApB,QAAA,WAGAJ,QAAA,aACAwB,UACA,WACA,4EACA,yDACA,gFACA,6CACA,GACA,oBACA,sBACA,8DACA,wFACA,sJACA,GACA,aACA,wDACA,uEACA,4DAEApB,QAAA,WAGAD,YAAA,EACAqB,UACA,WACA,gGACA,0DACA,4DACA,0CACA,kDACA,wCACA,4CACA,6FACA,GACA,oBACA,0CACA,6BACA,GACA,aACA,2DAEApB,QAAA,gB7OiikBM,SAAU1qB,EAAQC,G8OvokBxBD,EAAAC,SACAqqB,QAAA,aACAwB,UACA,YACA,2BACA,+CACA,oFACA,8CACA,iDACA,4CACA,gDACA,6G9O+okBM,SAAU9rB,EAAQC,G+O1pkBxBD,EAAAC,SACAqqB,QAAA,aACAwB,UACA,iHACA,2HACA,yEACA,2D/OkqkBM,SAAU9rB,EAAQC,GgPxqkBxBD,EAAAC,SACAqqB,QAAA,aACAwB,UACA,iBACA,qCACA,kCACA,oDACA,qGACA,sDhPgrkBM,SAAU9rB,EAAQC,GiPxrkBxBD,EAAAC,SACAqqB,QAAA,aACAwB,UACA,yDACA,qCACA,gEACA,iDACA,6FACA,qDACA,0CACA,kCACA,uCACA,6CACA,4CACA,qEACA,mCACA,GACA,OACA,+CjPgskBM,SAAU9rB,EAAQC,GkPltkBxBD,EAAAC,SACAqqB,QAAA,aACAwB,UACA,WACA,4EACA,yDACA,gFACA,6CACA,GACA,oBACA,sBACA,8DACA,wFACA,sJACA,GACA,aACA,wDACA,uEACA,8DlP0tkBM,SAAU9rB,EAAQC,GmP5ukBxBD,EAAAC,SACAwqB,YAAA,EACAqB,UACA,WACA,gGACA,0DACA,4DACA,0CACA,kDACA,wCACA,4CACA,6FACA,GACA,oBACA,0CACA,6BACA,GACA,aACA,6DnPovkBM,SAAU9rB,EAAQC,GoPtwkBxBD,EAAAC,UAEA8rB,KAAA,eACAC,MAAA,OAGAD,KAAA,UACAC,MAAA,OAGAD,KAAA,SACAC,MAAA,KACAC,WAEAF,KAAA,WACAC,MAAA,oBACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,MACAC,MAAA,OACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,SACAC,MAAA,KACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,WACAC,MAAA,MACA5C,MAAA,SACAR,WAAA,eAGAmD,KAAA,YACAC,MAAA,MACA5C,MAAA,SACAR,WAAA,eAGAmD,K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","file":"0.js","sourcesContent":["webpackJsonp([0],Array(18).concat([\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./en-us/apis/Enumerable.json\": 64,\n\t\"./en-us/apis/Enumerable/meta.json\": 65,\n\t\"./en-us/apis/Enumerable/methods/asEnumerable.json\": 66,\n\t\"./en-us/apis/Enumerable/methods/empty.json\": 67,\n\t\"./en-us/apis/Enumerable/properties/actions.json\": 68,\n\t\"./en-us/apis/Enumerable/properties/comparers.json\": 69,\n\t\"./en-us/apis/Enumerable/properties/config.json\": 70,\n\t\"./en-us/apis/Enumerable/properties/predicates.json\": 71,\n\t\"./en-us/apis/Enumerable/properties/selectors.json\": 72,\n\t\"./en-us/caption.json\": 73,\n\t\"./en-us/change.json\": 74,\n\t\"./en-us/directory.json\": 75,\n\t\"./en-us/directory.meta.json\": 76,\n\t\"./en-us/examples/IEnumerable.json\": 77,\n\t\"./en-us/examples/IEnumerable/methods/aggregate.json\": 78,\n\t\"./en-us/examples/IEnumerable/methods/all.json\": 79,\n\t\"./en-us/examples/IEnumerable/methods/any.json\": 80,\n\t\"./en-us/examples/IEnumerable/methods/average.json\": 81,\n\t\"./en-us/examples/IEnumerable/methods/concat.json\": 82,\n\t\"./en-us/examples/IEnumerable/methods/contains.json\": 83,\n\t\"./en-us/examples/IEnumerable/methods/count.json\": 84,\n\t\"./en-us/examples/IEnumerable/methods/defaultIfEmpty.json\": 85,\n\t\"./en-us/examples/IEnumerable/methods/distinct.json\": 86,\n\t\"./en-us/examples/IEnumerable/methods/elementAt.json\": 87,\n\t\"./en-us/examples/IEnumerable/methods/elementAtOrDefault.json\": 88,\n\t\"./en-us/examples/IEnumerable/methods/except.json\": 89,\n\t\"./en-us/examples/IEnumerable/methods/first.json\": 90,\n\t\"./en-us/examples/IEnumerable/methods/firstOrDefault.json\": 91,\n\t\"./en-us/examples/IEnumerable/methods/groupBy.json\": 92,\n\t\"./en-us/examples/IEnumerable/methods/groupJoin.json\": 93,\n\t\"./en-us/examples/IEnumerable/methods/intersect.json\": 94,\n\t\"./en-us/examples/IEnumerable/methods/join.json\": 95,\n\t\"./en-us/examples/IEnumerable/methods/max.json\": 96,\n\t\"./en-us/examples/IEnumerable/methods/min.json\": 97,\n\t\"./en-us/examples/IEnumerable/methods/ofType.json\": 98,\n\t\"./en-us/examples/IEnumerable/methods/orderBy.json\": 99,\n\t\"./en-us/examples/IEnumerable/methods/orderByDescending.json\": 100,\n\t\"./en-us/examples/IEnumerable/methods/select.json\": 101,\n\t\"./en-us/examples/IEnumerable/methods/selectMany.json\": 102,\n\t\"./en-us/examples/config.json\": 103,\n\t\"./en-us/examples/instance.json\": 104,\n\t\"./en-us/examples/selector.json\": 105,\n\t\"./en-us/examples/use.json\": 106,\n\t\"./en-us/guides/action.json\": 107,\n\t\"./en-us/guides/comparer.json\": 108,\n\t\"./en-us/guides/config.json\": 109,\n\t\"./en-us/guides/instance.json\": 110,\n\t\"./en-us/guides/predicate.json\": 111,\n\t\"./en-us/guides/selector.json\": 112,\n\t\"./en-us/guides/use.json\": 113,\n\t\"./en-us/install.json\": 114,\n\t\"./en-us/introduction.json\": 115,\n\t\"./en-us/meta.json\": 116,\n\t\"./lang.json\": 14,\n\t\"./versions.json\": 15,\n\t\"./zh-cn/about.json\": 117,\n\t\"./zh-cn/apis/Directory.json\": 118,\n\t\"./zh-cn/apis/Directory/meta.json\": 119,\n\t\"./zh-cn/apis/Directory/methods/delete.json\": 120,\n\t\"./zh-cn/apis/Directory/methods/get.json\": 121,\n\t\"./zh-cn/apis/Directory/methods/has.json\": 122,\n\t\"./zh-cn/apis/Directory/methods/set.json\": 123,\n\t\"./zh-cn/apis/Entry.json\": 124,\n\t\"./zh-cn/apis/Entry/meta.json\": 125,\n\t\"./zh-cn/apis/Entry/properties/key.json\": 126,\n\t\"./zh-cn/apis/Entry/properties/value.json\": 127,\n\t\"./zh-cn/apis/Enumerable.actions.json\": 128,\n\t\"./zh-cn/apis/Enumerable.actions/meta.json\": 129,\n\t\"./zh-cn/apis/Enumerable.actions/properties/default.json\": 130,\n\t\"./zh-cn/apis/Enumerable.comparers.json\": 131,\n\t\"./zh-cn/apis/Enumerable.comparers/meta.json\": 132,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/array.json\": 133,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/greater.json\": 134,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json\": 135,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/less.json\": 136,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/predicate.json\": 137,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/default.json\": 138,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/equality.json\": 139,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/same.json\": 140,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/strict.json\": 141,\n\t\"./zh-cn/apis/Enumerable.config.json\": 142,\n\t\"./zh-cn/apis/Enumerable.config/meta.json\": 143,\n\t\"./zh-cn/apis/Enumerable.config/properties/as.json\": 144,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.array.json\": 145,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.lazy.json\": 146,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.object.json\": 147,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.string.json\": 148,\n\t\"./zh-cn/apis/Enumerable.json\": 149,\n\t\"./zh-cn/apis/Enumerable.predicates.json\": 150,\n\t\"./zh-cn/apis/Enumerable.predicates/meta.json\": 151,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/equality.json\": 152,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/not.json\": 153,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/properties.json\": 154,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/regexp.json\": 155,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/same.json\": 156,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/selector.json\": 157,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/strict.json\": 158,\n\t\"./zh-cn/apis/Enumerable.predicates/properties/default.json\": 159,\n\t\"./zh-cn/apis/Enumerable.predicates/properties/exists.json\": 160,\n\t\"./zh-cn/apis/Enumerable.selectors.json\": 161,\n\t\"./zh-cn/apis/Enumerable.selectors/meta.json\": 162,\n\t\"./zh-cn/apis/Enumerable.selectors/methods/property.json\": 163,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/children.json\": 164,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/default.json\": 165,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/join.json\": 166,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/key.json\": 167,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/parent.json\": 168,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/result.json\": 169,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/value.json\": 170,\n\t\"./zh-cn/apis/Enumerable/meta.json\": 171,\n\t\"./zh-cn/apis/Enumerable/methods/asEnumerable.json\": 172,\n\t\"./zh-cn/apis/Enumerable/methods/between.json\": 173,\n\t\"./zh-cn/apis/Enumerable/methods/empty.json\": 174,\n\t\"./zh-cn/apis/Enumerable/methods/from.json\": 175,\n\t\"./zh-cn/apis/Enumerable/methods/generate.json\": 176,\n\t\"./zh-cn/apis/Enumerable/methods/noConflict.json\": 177,\n\t\"./zh-cn/apis/Enumerable/methods/range.json\": 178,\n\t\"./zh-cn/apis/Enumerable/methods/repeat.json\": 179,\n\t\"./zh-cn/apis/Enumerable/properties/actions.json\": 180,\n\t\"./zh-cn/apis/Enumerable/properties/comparers.json\": 181,\n\t\"./zh-cn/apis/Enumerable/properties/config.json\": 182,\n\t\"./zh-cn/apis/Enumerable/properties/predicates.json\": 183,\n\t\"./zh-cn/apis/Enumerable/properties/selectors.json\": 184,\n\t\"./zh-cn/apis/IChunk.json\": 185,\n\t\"./zh-cn/apis/IChunk/meta.json\": 186,\n\t\"./zh-cn/apis/IChunk/properties/index.json\": 187,\n\t\"./zh-cn/apis/IEnumerable.json\": 188,\n\t\"./zh-cn/apis/IEnumerable/meta.json\": 189,\n\t\"./zh-cn/apis/IEnumerable/methods/aggregate.json\": 190,\n\t\"./zh-cn/apis/IEnumerable/methods/all.json\": 191,\n\t\"./zh-cn/apis/IEnumerable/methods/any.json\": 192,\n\t\"./zh-cn/apis/IEnumerable/methods/asEnumerable.json\": 193,\n\t\"./zh-cn/apis/IEnumerable/methods/average.json\": 194,\n\t\"./zh-cn/apis/IEnumerable/methods/chunk.json\": 195,\n\t\"./zh-cn/apis/IEnumerable/methods/combine.json\": 196,\n\t\"./zh-cn/apis/IEnumerable/methods/concat.json\": 197,\n\t\"./zh-cn/apis/IEnumerable/methods/contains.json\": 198,\n\t\"./zh-cn/apis/IEnumerable/methods/copyWithin.json\": 199,\n\t\"./zh-cn/apis/IEnumerable/methods/count.json\": 200,\n\t\"./zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json\": 201,\n\t\"./zh-cn/apis/IEnumerable/methods/distinct.json\": 202,\n\t\"./zh-cn/apis/IEnumerable/methods/elementAt.json\": 203,\n\t\"./zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json\": 204,\n\t\"./zh-cn/apis/IEnumerable/methods/every.json\": 205,\n\t\"./zh-cn/apis/IEnumerable/methods/except.json\": 206,\n\t\"./zh-cn/apis/IEnumerable/methods/fill.json\": 207,\n\t\"./zh-cn/apis/IEnumerable/methods/filter.json\": 208,\n\t\"./zh-cn/apis/IEnumerable/methods/find.json\": 209,\n\t\"./zh-cn/apis/IEnumerable/methods/findIndex.json\": 210,\n\t\"./zh-cn/apis/IEnumerable/methods/findLast.json\": 211,\n\t\"./zh-cn/apis/IEnumerable/methods/findLastIndex.json\": 212,\n\t\"./zh-cn/apis/IEnumerable/methods/first.json\": 213,\n\t\"./zh-cn/apis/IEnumerable/methods/firstOrDefault.json\": 214,\n\t\"./zh-cn/apis/IEnumerable/methods/forEach.json\": 215,\n\t\"./zh-cn/apis/IEnumerable/methods/getEnumerator.json\": 216,\n\t\"./zh-cn/apis/IEnumerable/methods/groupBy.json\": 217,\n\t\"./zh-cn/apis/IEnumerable/methods/groupJoin.json\": 218,\n\t\"./zh-cn/apis/IEnumerable/methods/includes.json\": 219,\n\t\"./zh-cn/apis/IEnumerable/methods/indexOf.json\": 220,\n\t\"./zh-cn/apis/IEnumerable/methods/innerJoin.json\": 221,\n\t\"./zh-cn/apis/IEnumerable/methods/intersect.json\": 222,\n\t\"./zh-cn/apis/IEnumerable/methods/join.json\": 223,\n\t\"./zh-cn/apis/IEnumerable/methods/last.json\": 224,\n\t\"./zh-cn/apis/IEnumerable/methods/lastIndexOf.json\": 225,\n\t\"./zh-cn/apis/IEnumerable/methods/lastOrDefault.json\": 226,\n\t\"./zh-cn/apis/IEnumerable/methods/leftJoin.json\": 227,\n\t\"./zh-cn/apis/IEnumerable/methods/leftPad.json\": 228,\n\t\"./zh-cn/apis/IEnumerable/methods/map.json\": 229,\n\t\"./zh-cn/apis/IEnumerable/methods/max.json\": 230,\n\t\"./zh-cn/apis/IEnumerable/methods/min.json\": 231,\n\t\"./zh-cn/apis/IEnumerable/methods/nearBy.json\": 232,\n\t\"./zh-cn/apis/IEnumerable/methods/ofType.json\": 233,\n\t\"./zh-cn/apis/IEnumerable/methods/orderBy.json\": 234,\n\t\"./zh-cn/apis/IEnumerable/methods/orderByDescending.json\": 235,\n\t\"./zh-cn/apis/IEnumerable/methods/pop.json\": 236,\n\t\"./zh-cn/apis/IEnumerable/methods/product.json\": 237,\n\t\"./zh-cn/apis/IEnumerable/methods/push.json\": 238,\n\t\"./zh-cn/apis/IEnumerable/methods/rand.json\": 239,\n\t\"./zh-cn/apis/IEnumerable/methods/random.json\": 240,\n\t\"./zh-cn/apis/IEnumerable/methods/randomOrDefault.json\": 241,\n\t\"./zh-cn/apis/IEnumerable/methods/reduce.json\": 242,\n\t\"./zh-cn/apis/IEnumerable/methods/reduceRight.json\": 243,\n\t\"./zh-cn/apis/IEnumerable/methods/reverse.json\": 244,\n\t\"./zh-cn/apis/IEnumerable/methods/rightJoin.json\": 245,\n\t\"./zh-cn/apis/IEnumerable/methods/rightPad.json\": 246,\n\t\"./zh-cn/apis/IEnumerable/methods/select.json\": 247,\n\t\"./zh-cn/apis/IEnumerable/methods/selectMany.json\": 248,\n\t\"./zh-cn/apis/IEnumerable/methods/separate.json\": 249,\n\t\"./zh-cn/apis/IEnumerable/methods/sequenceEqual.json\": 250,\n\t\"./zh-cn/apis/IEnumerable/methods/shift.json\": 251,\n\t\"./zh-cn/apis/IEnumerable/methods/single.json\": 252,\n\t\"./zh-cn/apis/IEnumerable/methods/singleOrDefault.json\": 253,\n\t\"./zh-cn/apis/IEnumerable/methods/skip.json\": 254,\n\t\"./zh-cn/apis/IEnumerable/methods/skipWhile.json\": 255,\n\t\"./zh-cn/apis/IEnumerable/methods/slice.json\": 256,\n\t\"./zh-cn/apis/IEnumerable/methods/some.json\": 257,\n\t\"./zh-cn/apis/IEnumerable/methods/sort.json\": 258,\n\t\"./zh-cn/apis/IEnumerable/methods/splice.json\": 259,\n\t\"./zh-cn/apis/IEnumerable/methods/sum.json\": 260,\n\t\"./zh-cn/apis/IEnumerable/methods/take.json\": 261,\n\t\"./zh-cn/apis/IEnumerable/methods/takeWhile.json\": 262,\n\t\"./zh-cn/apis/IEnumerable/methods/toArray.json\": 263,\n\t\"./zh-cn/apis/IEnumerable/methods/toDirectory.json\": 264,\n\t\"./zh-cn/apis/IEnumerable/methods/toLookup.json\": 265,\n\t\"./zh-cn/apis/IEnumerable/methods/toObject.json\": 266,\n\t\"./zh-cn/apis/IEnumerable/methods/union.json\": 267,\n\t\"./zh-cn/apis/IEnumerable/methods/unshift.json\": 268,\n\t\"./zh-cn/apis/IEnumerable/methods/where.json\": 269,\n\t\"./zh-cn/apis/IEnumerable/methods/wipe.json\": 270,\n\t\"./zh-cn/apis/IEnumerable/methods/zip.json\": 271,\n\t\"./zh-cn/apis/IEnumerable/properties/length.json\": 272,\n\t\"./zh-cn/apis/IEnumerable/properties/size.json\": 273,\n\t\"./zh-cn/apis/IEnumerator.json\": 274,\n\t\"./zh-cn/apis/IEnumerator/meta.json\": 275,\n\t\"./zh-cn/apis/IEnumerator/methods/moveNext.json\": 276,\n\t\"./zh-cn/apis/IEnumerator/methods/reset.json\": 277,\n\t\"./zh-cn/apis/IEnumerator/properties/current.json\": 278,\n\t\"./zh-cn/apis/IGrouping.json\": 279,\n\t\"./zh-cn/apis/IGrouping/meta.json\": 280,\n\t\"./zh-cn/apis/IGrouping/properties/key.json\": 281,\n\t\"./zh-cn/apis/IMapEnumerable.json\": 282,\n\t\"./zh-cn/apis/IMapEnumerable/meta.json\": 283,\n\t\"./zh-cn/apis/IMapEnumerable/methods/forEach.json\": 284,\n\t\"./zh-cn/apis/IMapEnumerable/methods/toDirectory.json\": 285,\n\t\"./zh-cn/apis/IMapEnumerable/methods/toLookup.json\": 286,\n\t\"./zh-cn/apis/IOrderedEnumerable.json\": 287,\n\t\"./zh-cn/apis/IOrderedEnumerable/meta.json\": 288,\n\t\"./zh-cn/apis/IOrderedEnumerable/methods/thenBy.json\": 289,\n\t\"./zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json\": 290,\n\t\"./zh-cn/apis/Lookup.json\": 291,\n\t\"./zh-cn/apis/Lookup/meta.json\": 292,\n\t\"./zh-cn/apis/Lookup/methods/get.json\": 293,\n\t\"./zh-cn/apis/Lookup/methods/set.json\": 294,\n\t\"./zh-cn/apis/Plugin.json\": 295,\n\t\"./zh-cn/apis/Plugin/meta.json\": 296,\n\t\"./zh-cn/caption.json\": 297,\n\t\"./zh-cn/change.json\": 298,\n\t\"./zh-cn/change/2.1.15.json\": 299,\n\t\"./zh-cn/change/2.1.16.json\": 300,\n\t\"./zh-cn/change/2.1.17.json\": 301,\n\t\"./zh-cn/change/2.1.18.json\": 302,\n\t\"./zh-cn/change/2.1.19.json\": 303,\n\t\"./zh-cn/change/2.1.20.pre.json\": 304,\n\t\"./zh-cn/directory.json\": 305,\n\t\"./zh-cn/directory.meta.json\": 306,\n\t\"./zh-cn/examples/IEnumerable.json\": 307,\n\t\"./zh-cn/examples/IEnumerable/methods/aggregate.json\": 308,\n\t\"./zh-cn/examples/IEnumerable/methods/all.json\": 309,\n\t\"./zh-cn/examples/IEnumerable/methods/any.json\": 310,\n\t\"./zh-cn/examples/IEnumerable/methods/asEnumerable.json\": 311,\n\t\"./zh-cn/examples/IEnumerable/methods/average.json\": 312,\n\t\"./zh-cn/examples/IEnumerable/methods/chunk.json\": 313,\n\t\"./zh-cn/examples/IEnumerable/methods/concat.json\": 314,\n\t\"./zh-cn/examples/IEnumerable/methods/contains.json\": 315,\n\t\"./zh-cn/examples/IEnumerable/methods/copyWithin.json\": 316,\n\t\"./zh-cn/examples/IEnumerable/methods/count.json\": 317,\n\t\"./zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json\": 318,\n\t\"./zh-cn/examples/IEnumerable/methods/distinct.json\": 319,\n\t\"./zh-cn/examples/IEnumerable/methods/elementAt.json\": 320,\n\t\"./zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json\": 321,\n\t\"./zh-cn/examples/IEnumerable/methods/every.json\": 322,\n\t\"./zh-cn/examples/IEnumerable/methods/except.json\": 323,\n\t\"./zh-cn/examples/IEnumerable/methods/fill.json\": 324,\n\t\"./zh-cn/examples/IEnumerable/methods/filter.json\": 325,\n\t\"./zh-cn/examples/IEnumerable/methods/find.json\": 326,\n\t\"./zh-cn/examples/IEnumerable/methods/findIndex.json\": 327,\n\t\"./zh-cn/examples/IEnumerable/methods/findLast.json\": 328,\n\t\"./zh-cn/examples/IEnumerable/methods/findLastIndex.json\": 329,\n\t\"./zh-cn/examples/IEnumerable/methods/first.json\": 330,\n\t\"./zh-cn/examples/IEnumerable/methods/firstOrDefault.json\": 331,\n\t\"./zh-cn/examples/IEnumerable/methods/forEach.json\": 332,\n\t\"./zh-cn/examples/IEnumerable/methods/getEnumerator.json\": 333,\n\t\"./zh-cn/examples/IEnumerable/methods/groupBy.json\": 334,\n\t\"./zh-cn/examples/IEnumerable/methods/groupJoin.json\": 335,\n\t\"./zh-cn/examples/IEnumerable/methods/includes.json\": 336,\n\t\"./zh-cn/examples/IEnumerable/methods/indexOf.json\": 337,\n\t\"./zh-cn/examples/IEnumerable/methods/intersect.json\": 338,\n\t\"./zh-cn/examples/IEnumerable/methods/join.json\": 339,\n\t\"./zh-cn/examples/IEnumerable/methods/last.json\": 340,\n\t\"./zh-cn/examples/IEnumerable/methods/lastIndexOf.json\": 341,\n\t\"./zh-cn/examples/IEnumerable/methods/lastOrDefault.json\": 342,\n\t\"./zh-cn/examples/IEnumerable/methods/map.json\": 343,\n\t\"./zh-cn/examples/IEnumerable/methods/max.json\": 344,\n\t\"./zh-cn/examples/IEnumerable/methods/min.json\": 345,\n\t\"./zh-cn/examples/IEnumerable/methods/ofType.json\": 346,\n\t\"./zh-cn/examples/IEnumerable/methods/orderBy.json\": 347,\n\t\"./zh-cn/examples/IEnumerable/methods/orderByDescending.json\": 348,\n\t\"./zh-cn/examples/IEnumerable/methods/pop.json\": 349,\n\t\"./zh-cn/examples/IEnumerable/methods/product.json\": 350,\n\t\"./zh-cn/examples/IEnumerable/methods/push.json\": 351,\n\t\"./zh-cn/examples/IEnumerable/methods/rand.json\": 352,\n\t\"./zh-cn/examples/IEnumerable/methods/reduce.json\": 353,\n\t\"./zh-cn/examples/IEnumerable/methods/reduceRight.json\": 354,\n\t\"./zh-cn/examples/IEnumerable/methods/reserver.json\": 355,\n\t\"./zh-cn/examples/IEnumerable/methods/reverse.json\": 356,\n\t\"./zh-cn/examples/IEnumerable/methods/rightJoin.json\": 357,\n\t\"./zh-cn/examples/IEnumerable/methods/rightPad.json\": 358,\n\t\"./zh-cn/examples/IEnumerable/methods/select.json\": 359,\n\t\"./zh-cn/examples/IEnumerable/methods/selectMany.json\": 360,\n\t\"./zh-cn/examples/config.json\": 361,\n\t\"./zh-cn/examples/instance.json\": 362,\n\t\"./zh-cn/examples/selector.json\": 363,\n\t\"./zh-cn/examples/use.json\": 364,\n\t\"./zh-cn/guides/action.json\": 365,\n\t\"./zh-cn/guides/comparer.json\": 366,\n\t\"./zh-cn/guides/config.json\": 367,\n\t\"./zh-cn/guides/enumerator.json\": 368,\n\t\"./zh-cn/guides/extend.json\": 369,\n\t\"./zh-cn/guides/instance.json\": 370,\n\t\"./zh-cn/guides/iterator.json\": 371,\n\t\"./zh-cn/guides/plugin.json\": 372,\n\t\"./zh-cn/guides/predicate.json\": 373,\n\t\"./zh-cn/guides/selector.json\": 374,\n\t\"./zh-cn/guides/use.json\": 375,\n\t\"./zh-cn/install.json\": 376,\n\t\"./zh-cn/introduction.json\": 377,\n\t\"./zh-cn/meta.json\": 378\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;\n\n/***/ }),\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./resources/en-us/apis/Enumerable.json\": 64,\n\t\"./resources/en-us/apis/Enumerable/meta.json\": 65,\n\t\"./resources/en-us/apis/Enumerable/methods/asEnumerable.json\": 66,\n\t\"./resources/en-us/apis/Enumerable/methods/empty.json\": 67,\n\t\"./resources/en-us/apis/Enumerable/properties/actions.json\": 68,\n\t\"./resources/en-us/apis/Enumerable/properties/comparers.json\": 69,\n\t\"./resources/en-us/apis/Enumerable/properties/config.json\": 70,\n\t\"./resources/en-us/apis/Enumerable/properties/predicates.json\": 71,\n\t\"./resources/en-us/apis/Enumerable/properties/selectors.json\": 72,\n\t\"./resources/en-us/caption.json\": 73,\n\t\"./resources/en-us/change.json\": 74,\n\t\"./resources/en-us/directory.json\": 75,\n\t\"./resources/en-us/directory.meta.json\": 76,\n\t\"./resources/en-us/examples/IEnumerable.json\": 77,\n\t\"./resources/en-us/examples/IEnumerable/methods/aggregate.json\": 78,\n\t\"./resources/en-us/examples/IEnumerable/methods/all.json\": 79,\n\t\"./resources/en-us/examples/IEnumerable/methods/any.json\": 80,\n\t\"./resources/en-us/examples/IEnumerable/methods/average.json\": 81,\n\t\"./resources/en-us/examples/IEnumerable/methods/concat.json\": 82,\n\t\"./resources/en-us/examples/IEnumerable/methods/contains.json\": 83,\n\t\"./resources/en-us/examples/IEnumerable/methods/count.json\": 84,\n\t\"./resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json\": 85,\n\t\"./resources/en-us/examples/IEnumerable/methods/distinct.json\": 86,\n\t\"./resources/en-us/examples/IEnumerable/methods/elementAt.json\": 87,\n\t\"./resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json\": 88,\n\t\"./resources/en-us/examples/IEnumerable/methods/except.json\": 89,\n\t\"./resources/en-us/examples/IEnumerable/methods/first.json\": 90,\n\t\"./resources/en-us/examples/IEnumerable/methods/firstOrDefault.json\": 91,\n\t\"./resources/en-us/examples/IEnumerable/methods/groupBy.json\": 92,\n\t\"./resources/en-us/examples/IEnumerable/methods/groupJoin.json\": 93,\n\t\"./resources/en-us/examples/IEnumerable/methods/intersect.json\": 94,\n\t\"./resources/en-us/examples/IEnumerable/methods/join.json\": 95,\n\t\"./resources/en-us/examples/IEnumerable/methods/max.json\": 96,\n\t\"./resources/en-us/examples/IEnumerable/methods/min.json\": 97,\n\t\"./resources/en-us/examples/IEnumerable/methods/ofType.json\": 98,\n\t\"./resources/en-us/examples/IEnumerable/methods/orderBy.json\": 99,\n\t\"./resources/en-us/examples/IEnumerable/methods/orderByDescending.json\": 100,\n\t\"./resources/en-us/examples/IEnumerable/methods/select.json\": 101,\n\t\"./resources/en-us/examples/IEnumerable/methods/selectMany.json\": 102,\n\t\"./resources/en-us/examples/config.json\": 103,\n\t\"./resources/en-us/examples/instance.json\": 104,\n\t\"./resources/en-us/examples/selector.json\": 105,\n\t\"./resources/en-us/examples/use.json\": 106,\n\t\"./resources/en-us/guides/action.json\": 107,\n\t\"./resources/en-us/guides/comparer.json\": 108,\n\t\"./resources/en-us/guides/config.json\": 109,\n\t\"./resources/en-us/guides/instance.json\": 110,\n\t\"./resources/en-us/guides/predicate.json\": 111,\n\t\"./resources/en-us/guides/selector.json\": 112,\n\t\"./resources/en-us/guides/use.json\": 113,\n\t\"./resources/en-us/install.json\": 114,\n\t\"./resources/en-us/introduction.json\": 115,\n\t\"./resources/en-us/meta.json\": 116,\n\t\"./resources/lang.json\": 14,\n\t\"./resources/versions.json\": 15,\n\t\"./resources/zh-cn/about.json\": 117,\n\t\"./resources/zh-cn/apis/Directory.json\": 118,\n\t\"./resources/zh-cn/apis/Directory/meta.json\": 119,\n\t\"./resources/zh-cn/apis/Directory/methods/delete.json\": 120,\n\t\"./resources/zh-cn/apis/Directory/methods/get.json\": 121,\n\t\"./resources/zh-cn/apis/Directory/methods/has.json\": 122,\n\t\"./resources/zh-cn/apis/Directory/methods/set.json\": 123,\n\t\"./resources/zh-cn/apis/Entry.json\": 124,\n\t\"./resources/zh-cn/apis/Entry/meta.json\": 125,\n\t\"./resources/zh-cn/apis/Entry/properties/key.json\": 126,\n\t\"./resources/zh-cn/apis/Entry/properties/value.json\": 127,\n\t\"./resources/zh-cn/apis/Enumerable.actions.json\": 128,\n\t\"./resources/zh-cn/apis/Enumerable.actions/meta.json\": 129,\n\t\"./resources/zh-cn/apis/Enumerable.actions/properties/default.json\": 130,\n\t\"./resources/zh-cn/apis/Enumerable.comparers.json\": 131,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/meta.json\": 132,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/array.json\": 133,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/greater.json\": 134,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json\": 135,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/less.json\": 136,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json\": 137,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/default.json\": 138,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/equality.json\": 139,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/same.json\": 140,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/strict.json\": 141,\n\t\"./resources/zh-cn/apis/Enumerable.config.json\": 142,\n\t\"./resources/zh-cn/apis/Enumerable.config/meta.json\": 143,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/as.json\": 144,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.array.json\": 145,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json\": 146,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.object.json\": 147,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.string.json\": 148,\n\t\"./resources/zh-cn/apis/Enumerable.json\": 149,\n\t\"./resources/zh-cn/apis/Enumerable.predicates.json\": 150,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/meta.json\": 151,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/equality.json\": 152,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/not.json\": 153,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/properties.json\": 154,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json\": 155,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/same.json\": 156,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/selector.json\": 157,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/strict.json\": 158,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/properties/default.json\": 159,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/properties/exists.json\": 160,\n\t\"./resources/zh-cn/apis/Enumerable.selectors.json\": 161,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/meta.json\": 162,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/methods/property.json\": 163,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/children.json\": 164,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/default.json\": 165,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/join.json\": 166,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/key.json\": 167,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/parent.json\": 168,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/result.json\": 169,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/value.json\": 170,\n\t\"./resources/zh-cn/apis/Enumerable/meta.json\": 171,\n\t\"./resources/zh-cn/apis/Enumerable/methods/asEnumerable.json\": 172,\n\t\"./resources/zh-cn/apis/Enumerable/methods/between.json\": 173,\n\t\"./resources/zh-cn/apis/Enumerable/methods/empty.json\": 174,\n\t\"./resources/zh-cn/apis/Enumerable/methods/from.json\": 175,\n\t\"./resources/zh-cn/apis/Enumerable/methods/generate.json\": 176,\n\t\"./resources/zh-cn/apis/Enumerable/methods/noConflict.json\": 177,\n\t\"./resources/zh-cn/apis/Enumerable/methods/range.json\": 178,\n\t\"./resources/zh-cn/apis/Enumerable/methods/repeat.json\": 179,\n\t\"./resources/zh-cn/apis/Enumerable/properties/actions.json\": 180,\n\t\"./resources/zh-cn/apis/Enumerable/properties/comparers.json\": 181,\n\t\"./resources/zh-cn/apis/Enumerable/properties/config.json\": 182,\n\t\"./resources/zh-cn/apis/Enumerable/properties/predicates.json\": 183,\n\t\"./resources/zh-cn/apis/Enumerable/properties/selectors.json\": 184,\n\t\"./resources/zh-cn/apis/IChunk.json\": 185,\n\t\"./resources/zh-cn/apis/IChunk/meta.json\": 186,\n\t\"./resources/zh-cn/apis/IChunk/properties/index.json\": 187,\n\t\"./resources/zh-cn/apis/IEnumerable.json\": 188,\n\t\"./resources/zh-cn/apis/IEnumerable/meta.json\": 189,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/aggregate.json\": 190,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/all.json\": 191,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/any.json\": 192,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json\": 193,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/average.json\": 194,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/chunk.json\": 195,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/combine.json\": 196,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/concat.json\": 197,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/contains.json\": 198,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/copyWithin.json\": 199,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/count.json\": 200,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json\": 201,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/distinct.json\": 202,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/elementAt.json\": 203,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json\": 204,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/every.json\": 205,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/except.json\": 206,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/fill.json\": 207,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/filter.json\": 208,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/find.json\": 209,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findIndex.json\": 210,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findLast.json\": 211,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json\": 212,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/first.json\": 213,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json\": 214,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/forEach.json\": 215,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json\": 216,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/groupBy.json\": 217,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/groupJoin.json\": 218,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/includes.json\": 219,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/indexOf.json\": 220,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/innerJoin.json\": 221,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/intersect.json\": 222,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/join.json\": 223,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/last.json\": 224,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json\": 225,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json\": 226,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/leftJoin.json\": 227,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/leftPad.json\": 228,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/map.json\": 229,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/max.json\": 230,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/min.json\": 231,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/nearBy.json\": 232,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/ofType.json\": 233,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/orderBy.json\": 234,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json\": 235,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/pop.json\": 236,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/product.json\": 237,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/push.json\": 238,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rand.json\": 239,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/random.json\": 240,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json\": 241,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reduce.json\": 242,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reduceRight.json\": 243,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reverse.json\": 244,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rightJoin.json\": 245,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rightPad.json\": 246,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/select.json\": 247,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/selectMany.json\": 248,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/separate.json\": 249,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json\": 250,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/shift.json\": 251,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/single.json\": 252,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json\": 253,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/skip.json\": 254,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/skipWhile.json\": 255,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/slice.json\": 256,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/some.json\": 257,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sort.json\": 258,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/splice.json\": 259,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sum.json\": 260,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/take.json\": 261,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/takeWhile.json\": 262,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toArray.json\": 263,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toDirectory.json\": 264,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toLookup.json\": 265,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toObject.json\": 266,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/union.json\": 267,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/unshift.json\": 268,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/where.json\": 269,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/wipe.json\": 270,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/zip.json\": 271,\n\t\"./resources/zh-cn/apis/IEnumerable/properties/length.json\": 272,\n\t\"./resources/zh-cn/apis/IEnumerable/properties/size.json\": 273,\n\t\"./resources/zh-cn/apis/IEnumerator.json\": 274,\n\t\"./resources/zh-cn/apis/IEnumerator/meta.json\": 275,\n\t\"./resources/zh-cn/apis/IEnumerator/methods/moveNext.json\": 276,\n\t\"./resources/zh-cn/apis/IEnumerator/methods/reset.json\": 277,\n\t\"./resources/zh-cn/apis/IEnumerator/properties/current.json\": 278,\n\t\"./resources/zh-cn/apis/IGrouping.json\": 279,\n\t\"./resources/zh-cn/apis/IGrouping/meta.json\": 280,\n\t\"./resources/zh-cn/apis/IGrouping/properties/key.json\": 281,\n\t\"./resources/zh-cn/apis/IMapEnumerable.json\": 282,\n\t\"./resources/zh-cn/apis/IMapEnumerable/meta.json\": 283,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/forEach.json\": 284,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json\": 285,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json\": 286,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable.json\": 287,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/meta.json\": 288,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json\": 289,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json\": 290,\n\t\"./resources/zh-cn/apis/Lookup.json\": 291,\n\t\"./resources/zh-cn/apis/Lookup/meta.json\": 292,\n\t\"./resources/zh-cn/apis/Lookup/methods/get.json\": 293,\n\t\"./resources/zh-cn/apis/Lookup/methods/set.json\": 294,\n\t\"./resources/zh-cn/apis/Plugin.json\": 295,\n\t\"./resources/zh-cn/apis/Plugin/meta.json\": 296,\n\t\"./resources/zh-cn/caption.json\": 297,\n\t\"./resources/zh-cn/change.json\": 298,\n\t\"./resources/zh-cn/change/2.1.15.json\": 299,\n\t\"./resources/zh-cn/change/2.1.16.json\": 300,\n\t\"./resources/zh-cn/change/2.1.17.json\": 301,\n\t\"./resources/zh-cn/change/2.1.18.json\": 302,\n\t\"./resources/zh-cn/change/2.1.19.json\": 303,\n\t\"./resources/zh-cn/change/2.1.20.pre.json\": 304,\n\t\"./resources/zh-cn/directory.json\": 305,\n\t\"./resources/zh-cn/directory.meta.json\": 306,\n\t\"./resources/zh-cn/examples/IEnumerable.json\": 307,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/aggregate.json\": 308,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/all.json\": 309,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/any.json\": 310,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json\": 311,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/average.json\": 312,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/chunk.json\": 313,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/concat.json\": 314,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/contains.json\": 315,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/copyWithin.json\": 316,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/count.json\": 317,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json\": 318,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/distinct.json\": 319,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/elementAt.json\": 320,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json\": 321,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/every.json\": 322,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/except.json\": 323,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/fill.json\": 324,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/filter.json\": 325,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/find.json\": 326,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findIndex.json\": 327,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findLast.json\": 328,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json\": 329,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/first.json\": 330,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json\": 331,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/forEach.json\": 332,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json\": 333,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/groupBy.json\": 334,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/groupJoin.json\": 335,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/includes.json\": 336,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/indexOf.json\": 337,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/intersect.json\": 338,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/join.json\": 339,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/last.json\": 340,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json\": 341,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json\": 342,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/map.json\": 343,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/max.json\": 344,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/min.json\": 345,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/ofType.json\": 346,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/orderBy.json\": 347,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json\": 348,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/pop.json\": 349,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/product.json\": 350,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/push.json\": 351,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rand.json\": 352,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reduce.json\": 353,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reduceRight.json\": 354,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reserver.json\": 355,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reverse.json\": 356,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rightJoin.json\": 357,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rightPad.json\": 358,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/select.json\": 359,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/selectMany.json\": 360,\n\t\"./resources/zh-cn/examples/config.json\": 361,\n\t\"./resources/zh-cn/examples/instance.json\": 362,\n\t\"./resources/zh-cn/examples/selector.json\": 363,\n\t\"./resources/zh-cn/examples/use.json\": 364,\n\t\"./resources/zh-cn/guides/action.json\": 365,\n\t\"./resources/zh-cn/guides/comparer.json\": 366,\n\t\"./resources/zh-cn/guides/config.json\": 367,\n\t\"./resources/zh-cn/guides/enumerator.json\": 368,\n\t\"./resources/zh-cn/guides/extend.json\": 369,\n\t\"./resources/zh-cn/guides/instance.json\": 370,\n\t\"./resources/zh-cn/guides/iterator.json\": 371,\n\t\"./resources/zh-cn/guides/plugin.json\": 372,\n\t\"./resources/zh-cn/guides/predicate.json\": 373,\n\t\"./resources/zh-cn/guides/selector.json\": 374,\n\t\"./resources/zh-cn/guides/use.json\": 375,\n\t\"./resources/zh-cn/install.json\": 376,\n\t\"./resources/zh-cn/introduction.json\": 377,\n\t\"./resources/zh-cn/meta.json\": 378\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62;\n\n/***/ }),\n/* 63 */,\n/* 64 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"name\": \"Enumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"actions\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful actions\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"comparers\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful comparers\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"config\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"Global config\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicates\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful predicates\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectors\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful selectors\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"empty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"Create an empty IEnumerable object\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n};\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Create an empty IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful actions\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful comparers\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"Global config\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful predicates\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful selectors\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"class\": \"class\",\n\t\"interface\": \"interface\",\n\t\"object\": \"object\",\n\t\"constructor\": \"constructor\",\n\t\"constructors\": \"constructors\",\n\t\"property\": \"property\",\n\t\"properties\": \"properties\",\n\t\"method\": \"method\",\n\t\"methods\": \"methods\",\n\t\"since\": \"since\",\n\t\"deprecated\": \"deprecated\",\n\t\"details\": \"details\",\n\t\"description\": \"description\",\n\t\"summary\": \"summary\",\n\t\"warning\": \"warning\",\n\t\"warnings\": \"warnings\",\n\t\"remark\": \"remark\",\n\t\"remarks\": \"remarks\",\n\t\"example\": \"example\",\n\t\"examples\": \"examples\",\n\t\"static\": \"static\",\n\t\"see\": \"see\",\n\t\"declare\": \"declare\",\n\t\"parameters\": \"parameters\",\n\t\"parameter\": \"parameter\",\n\t\"returns\": \"return value\",\n\t\"generics\": \"type parameters\",\n\t\"apis\": \"APIs\",\n\t\"guide\": \"Guide\",\n\t\"publish\": \"publish\",\n\t\"time\": \"time\",\n\t\"date\": \"date\",\n\t\"prepublish\": \"prepublish\",\n\t\"version\": \"version\",\n\t\"author\": \"author\",\n\t\"email\": \"email\",\n\t\"project\": \"project\",\n\t\"default\": \"default\",\n\t\"value\": \"value\",\n\t\"defaultValue\": \"default value\",\n\t\"readonly\": \"readonly\",\n\t\"lazy\": \"deferred execution\",\n\t\"try\": \"try it\",\n\t\"run\": \"run\",\n\t\"clear\": \"clear\",\n\t\"close\": \"close\",\n\t\"loadRuntime\": \"loading runtime\",\n\t\"executing\": \"executing\",\n\t\"enableExtend\": \"enable extends of Array\",\n\t\"newInstance\": {\n\t\t\"only\": \"can only use new operator\",\n\t\t\"both\": \"can use new operator or not\",\n\t\t\"cannot\": \"can not use new operator\"\n\t}\n};\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"publish\": \"2017-03-27\",\n\t\t\"contents\": [\n\t\t\t\"优化了部分代码结构\",\n\t\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t\t],\n\t\t\"version\": \"2.1.15\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-05\",\n\t\t\"contents\": [\n\t\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t\t],\n\t\t\"version\": \"2.1.16\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-12\",\n\t\t\"contents\": [\n\t\t\t\"新增 findLast 方法\",\n\t\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t\t],\n\t\t\"version\": \"2.1.17\"\n\t},\n\t{\n\t\t\"publish\": \"2017-08-30\",\n\t\t\"contents\": [\n\t\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\t\"\",\n\t\t\t\"Bugs\",\n\t\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t\t],\n\t\t\"version\": \"2.1.18\"\n\t},\n\t{\n\t\t\"publish\": \"2017-09-08\",\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t\t],\n\t\t\"version\": \"2.1.19\"\n\t},\n\t{\n\t\t\"prepublish\": true,\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\t\"2. 优化 defaultValueSelector\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t\t],\n\t\t\"version\": \"2.1.20.pre\"\n\t}\n];\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"Introduction\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"Install\"\n\t},\n\t{\n\t\t\"code\": \"guides\",\n\t\t\"title\": \"Guide\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"instance\",\n\t\t\t\t\"title\": \"Get IEnumerable instance\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"use\",\n\t\t\t\t\"title\": \"Start use\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"config\",\n\t\t\t\t\"title\": \"Configuration\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"selector\",\n\t\t\t\t\"title\": \"Selector\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"predicate\",\n\t\t\t\t\"title\": \"Predicate\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"comparer\",\n\t\t\t\t\"title\": \"Comparer\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"action\",\n\t\t\t\t\"title\": \"Action\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"iterator\",\n\t\t\t\t\"title\": \"迭代器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"enumerator\",\n\t\t\t\t\"title\": \"枚举器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"extend\",\n\t\t\t\t\"title\": \"扩展\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"plugin\",\n\t\t\t\t\"title\": \"插件\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"apis\",\n\t\t\"title\": \"APIs\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"Directory\",\n\t\t\t\t\"title\": \"Directory Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Entry\",\n\t\t\t\t\"title\": \"Entry Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable\",\n\t\t\t\t\"title\": \"Enumerable Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.actions\",\n\t\t\t\t\"title\": \"Enumerable.actions Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.comparers\",\n\t\t\t\t\"title\": \"Enumerable.comparers Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.config\",\n\t\t\t\t\"title\": \"Enumerable.config Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.predicates\",\n\t\t\t\t\"title\": \"Enumerable.predicates Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.selectors\",\n\t\t\t\t\"title\": \"Enumerable.selectors Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IChunk\",\n\t\t\t\t\"title\": \"IChunk Interface\",\n\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerable\",\n\t\t\t\t\"title\": \"IEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerator\",\n\t\t\t\t\"title\": \"IEnumerator Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IGrouping\",\n\t\t\t\t\"title\": \"IGrouping Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IMapEnumerable\",\n\t\t\t\t\"title\": \"IMapEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IOrderedEnumerable\",\n\t\t\t\t\"title\": \"IOrderedEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Lookup\",\n\t\t\t\t\"title\": \"Lookup Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Plugin\",\n\t\t\t\t\"title\": \"Plugin Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"Change List\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"About\"\n\t}\n];\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"Introduction\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"Install\"\n\t},\n\t\"guides\",\n\t\"apis\",\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"Change List\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"About\"\n\t}\n];\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\n// Determine whether any string in the array is longer than \\\"banana\\\".\\r\\nlet longestName =\\r\\n    fruits.asEnumerable().aggregate(\\\"banana\\\",\\r\\n        (longest, next) =>\\r\\n            next.length > longest.length ? next : longest,\\r\\n        // Return the final result as an upper case string.\\r\\n        fruit => fruit.toUpperCase());\\r\\n\\r\\nconsole.log(`The fruit with the longest name is ${ longestName }`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The fruit with the longest name is PASSIONFRUIT.\"\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// Create an array of Pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 10 },\\r\\n    { name: \\\"Boots\\\", age: 14 },\\r\\n    { name: \\\"Whiskers\\\", age: 6 }\\r\\n];\\r\\n\\r\\n// Determine whether all pet names\\r\\n// in the array start with 'B'.\\r\\nlet allStartWithB = pets.asEnumerable().all(pet => pet.name.startsWith(\\\"B\\\"));\\r\\n\\r\\nconsole.log(`${ allStartWithB ? \\\"All\\\" : \\\"Not all\\\" } pet names start with 'B'.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  Not all pet names start with 'B'.\",\n\t\"2.js\": \"let people = [\\r\\n    {\\r\\n        lastName: \\\"Haas\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Barley\\\", age: 10 },\\r\\n            { name: \\\"Boots\\\", age: 14 },\\r\\n            { name: \\\"Whiskers\\\", age: 6 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Fakhouri\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Snowball\\\", age: 1 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Antebi\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Belle\\\", age: 8 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Philips\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Sweetie\\\", age: 2 },\\r\\n            { name: \\\"Rover\\\", age: 13 }\\r\\n        ]\\r\\n    }\\r\\n];\\r\\n\\r\\n// Determine which people have pets that are all older than 5.\\r\\nlet names = people.asEnumerable().where(person => person.pets.all(pet => pet.age > 5)).select(person => person.lastName);\\r\\n\\r\\nfor (let name of names) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n/* This code produces the following output:\\r\\n *\\r\\n * Haas\\r\\n * Antebi\\r\\n */\"\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// Create an array of Pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 8, vaccinated: true },\\r\\n    { name: \\\"Boots\\\", age: 4, vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", age: 1, vaccinated: false }\\r\\n];\\r\\n\\r\\n// Determine whether any pets over age 1 are also unvaccinated.\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There ${ unvaccinated ? \\\"are\\\" : \\\"are not any\\\" } unvaccinated animals over age one.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  There are unvaccinated animals over age one.\"\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [ \\\"10007\\\", \\\"37\\\", 299846234235 ];\\r\\n\\r\\nlet average = numbers.asEnumerable().average();\\r\\n\\r\\nconsole.log(`The average is ${ average }.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The average is 99948748093.\"\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let cats = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet dogs = [\\r\\n    { name: \\\"Bounder\\\", age: 3 },\\r\\n    { name: \\\"Snoopy\\\", age: 14 },\\r\\n    { name: \\\"Fido\\\", age: 9 }\\r\\n];\\r\\n\\r\\nlet query = cats.asEnumerable().select(cat => cat.name)\\r\\n    .concat(dogs.asEnumerable().select(dog => dog.name));\\r\\n\\r\\nfor (let name of query) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Barley\\r\\n// Boots\\r\\n// Whiskers\\r\\n// Bounder\\r\\n// Snoopy\\r\\n// Fido\"\n};\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet fruit = \\\"mango\\\";\\r\\n\\r\\nlet hasMango = fruits.asEnumerable().contains(fruit);\\r\\n\\r\\nconsole.log(`The array ${ hasMango ? \\\"does\\\" : \\\"does not\\\" } contain '${ fruit }'.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The array does contain 'mango'.\",\n\t\"2.js\": \"// Custom comparer for contains\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Fruits are equal if their names and product numbers are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet apple = { name: \\\"apple\\\", code: 9 };\\r\\nlet kiwi = { name: \\\"kiwi\\\", code: 8 };\\r\\n\\r\\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\\r\\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\\r\\n\\r\\nconsole.log(\\\"Apple? \\\" + hasApple);\\r\\nconsole.log(\\\"Kiwi? \\\" + hasKiwi);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Apple? true\\r\\n Kiwi? false\\r\\n */\"\n};\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet numberOfFruits = fruits.asEnumerable().count();\\r\\n\\r\\nconsole.log(`There are ${ numberOfFruits } fruits in the collection.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 6 fruits in the collection.\\r\\n\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", vaccinated: true },\\r\\n    { name: \\\"Boots\\\", vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 2 unvaccinated animals.\",\n\t\"3.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", vaccinated: true },\\r\\n    { name: \\\"Boots\\\", vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\\r\\n\\r\\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 2 unvaccinated animals.\"\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let defaultPet = { name: \\\"Default Pet Name\\\", age: 0 };\\r\\n\\r\\nlet pets1 = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`Name: ${ pet.name }`);\\r\\n}\\r\\n\\r\\nconsole.log();\\r\\n\\r\\nlet pets2 = [];\\r\\n\\r\\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`Name: ${ pet.name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Name: Barley\\r\\n Name: Boots\\r\\n Name: Whiskers\\r\\n\\r\\n Name: Default Pet Name\\r\\n */\"\n};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\\r\\n\\r\\nlet distinctAges = ages.asEnumerable().distinct();\\r\\n\\r\\nconsole.log(\\\"Distinct ages:\\\");\\r\\n\\r\\nfor (let age of distinctAges) {\\r\\n    console.log(age);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Distinct ages:\\r\\n 21\\r\\n 46\\r\\n 55\\r\\n 17\\r\\n */\\r\\n\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet products = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// Exclude duplicates.\\r\\nlet noduplicates = products.distinct(productComparer);\\r\\n\\r\\nfor (let product of noduplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n apple 9\\r\\n orange 4\\r\\n lemon 12\\r\\n */\"\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\", \\\"Andersen, Henriette Thaulow\\\", \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet name = names.asEnumerable().elementAt(4);\\r\\n\\r\\nconsole.log(`The name is '${ name }'.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The name is 'Ito, Shu'.\\r\\n */\"\n};\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\", \\\"Andersen, Henriette Thaulow\\\", \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet index = 20;\\r\\n\\r\\nlet name = names.asEnumerable().elementAtOrDefault(index, \\\"[no name at this index]\\\");\\r\\n\\r\\nconsole.log(`The name chosen at index ${ index } is '${ name }'.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The name chosen at index 20 is '[no name at this index]'.\\r\\n */\"\n};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\\r\\nlet numbers2 = [ 2.2 ];\\r\\n\\r\\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\\r\\n\\r\\nfor (let number of onlyInFirstSet) {\\r\\n    console.log(number);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 2\\r\\n 2.1\\r\\n 2.3\\r\\n 2.4\\r\\n 2.5\\r\\n */\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits1 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet fruits2 = [ { name: \\\"apple\\\", code: 9 } ];\\r\\n\\r\\n//Get all the elements from the first array\\r\\n//except for the elements from the second array.\\r\\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\\r\\n\\r\\nfor (let product of except) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n orange 4\\r\\n lemon 12\\r\\n */\"\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first();\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 9\\r\\n */\",\n\t\"2.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first(number => number > 80);\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 92\\r\\n */\"\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [];\\r\\nlet first = numbers.asEnumerable().firstOrDefault(0);\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 0\\r\\n */\",\n\t\"2.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\",\\r\\n    \\\"Andersen, Henriette Thaulow\\\",\\r\\n    \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet firstLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 20);\\r\\n\\r\\nconsole.log(`The first long name is ${ firstLongName }.`);\\r\\n\\r\\nlet firstVeryLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 30);\\r\\n\\r\\nconsole.log(`There is ${ firstVeryLongName === \\\"\\\" ? \\\"not a\\\" : \\\"a\\\" } name longer than 30 characters.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The first long name is 'Andersen, Henriette Thaulow'.\\r\\n There is not a name longer than 30 characters.\\r\\n */\"\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// Create a list of pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 },\\r\\n    { name: \\\"Daisy\\\", age: 4 }\\r\\n];\\r\\n\\r\\n// Group the pets using Age as the key value\\r\\n// and selecting only the pet's Name for each value.\\r\\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\\r\\n\\r\\n// Iterate over each IGrouping in the collection.\\r\\nfor (let petGroup of query) {\\r\\n    // Print the key value of the IGrouping.\\r\\n    console.log(petGroup.key);\\r\\n    // Iterate over each value in the\\r\\n    // IGrouping and print the value.\\r\\n    for (let name of petGroup)\\r\\n        console.log(`  ${ name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 8\\r\\n   Barley\\r\\n 4\\r\\n   Boots\\r\\n   Daisy\\r\\n 1\\r\\n   Whiskers\\r\\n */\",\n\t\"2-2.1.19.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count(),\\r\\n        min: pets.min(pet => pet.age),\\r\\n        max: pets.max(pet => pet.age)\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n    console.log(\\\"Minimum age: \\\" + result.min);\\r\\n    console.log(\\\"Maximum age: \\\" + result.max);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 8.3\\r\\n Maximum age: 8.3\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n Minimum age: 4.3\\r\\n Maximum age: 4.9\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 1.5\\r\\n Maximum age: 1.5\\r\\n */\",\n\t\"2.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's elements.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n */\",\n\t\"3-2.1.19.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count(),\\r\\n        min: ages.min(),\\r\\n        max: ages.max()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n    console.log(\\\"Minimum age: \\\" + result.min);\\r\\n    console.log(\\\"Maximum age: \\\" + result.max);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 8.3\\r\\n Maximum age: 8.3\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n Minimum age: 4.3\\r\\n Maximum age: 4.9\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 1.5\\r\\n Maximum age: 1.5\\r\\n */\",\n\t\"3.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count)\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n */\"\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" };\\r\\nlet terry = { name: \\\"Adams, Terry\\\" };\\r\\nlet charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\n\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry };\\r\\nlet boots = { name: \\\"Boots\\\", owner: terry };\\r\\nlet whiskers = { name: \\\"Whiskers\\\", owner: charlotte };\\r\\nlet daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\n\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\n// Create a list where each element is an anonymous\\r\\n// type that contains a person's name and\\r\\n// a collection of names of the pets they own.\\r\\nlet query = people.asEnumerable().groupJoin(pets,\\r\\n    (person, petCollection) => ({\\r\\n        ownerName: person.name,\\r\\n        pets: petCollection.select(pet => pet.name)\\r\\n    }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    // Output the owner's name.\\r\\n    console.log(`${ obj.ownerName }:`);\\r\\n    // Output each of the owner's pet's names.\\r\\n    for (let pet of obj.pets) {\\r\\n        console.log(`  ${ pet }`);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus:\\r\\n   Daisy\\r\\n Adams, Terry:\\r\\n   Barley\\r\\n   Boots\\r\\n Weiss, Charlotte:\\r\\n   Whiskers\\r\\n */\"\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let id1 = [ 44, 26, 92, 30, 71, 38 ];\\r\\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\\r\\n\\r\\nlet both = id1.asEnumerable().intersect(id2);\\r\\n\\r\\nfor (let id of both) {\\r\\n    console.log(id);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 26\\r\\n 30\\r\\n */\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet store1 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 }\\r\\n];\\r\\nlet store2 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// Get the products from the first array\\r\\n// that have duplicates in the second array.\\r\\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\\r\\n\\r\\nfor (let product of duplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n apple 9\\r\\n */\"\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.1.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" };\\r\\nlet terry = { name: \\\"Adams, Terry\\\" };\\r\\nlet charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\n\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry };\\r\\nlet boots = { name: \\\"Boots\\\", owner: terry };\\r\\nlet whiskers = { name: \\\"Whiskers\\\", owner: charlotte };\\r\\nlet daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\n\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\n// Create a list of Person-Pet pairs where\\r\\n// each element is an anonymous type that contains a\\r\\n// Pet's name and the name of the Person that owns the Pet.\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus - Daisy\\r\\n Adams, Terry - Barley\\r\\n Adams, Terry - Boots\\r\\n Weiss, Charlotte - Whiskers\\r\\n */\"\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet max = longs.asEnumerable().max();\\r\\n\\r\\nconsole.log(`The largest number is ${ max }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The largest number is 4294967296.\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\\r\\n\\r\\nconsole.log(`The maximum pet age plus name length is ${ max }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The maximum pet age plus name length is 14.\\r\\n */\"\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet min = longs.asEnumerable().min();\\r\\n\\r\\nconsole.log(`The smallest number is ${ min }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The smallest number is 81125.\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet min = pets.asEnumerable().min(pet => pet.age);\\r\\n\\r\\nconsole.log(`The youngest animal is age ${ min }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The youngest animal is age 5.\\r\\n */\"\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1-2.1.19.js\": \"let fruits = [\\\"Mango\\\", \\\"Orange\\\", \\\"Apple\\\", 3.0, \\\"Banana\\\"];\\r\\n\\r\\n// Apply ofType() to the Array\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"Elements of type 'String' are:\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// The following query shows that the standard query operators such as\\r\\n// where() can be applied to the Array type after calling ofType().\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains(\\\"n\\\", Enumerable.comparers.ignoreCase()));\\r\\n\\r\\nconsole.log(\\\"\\\\nThe following strings contain 'n':\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Elements of type 'string' are:\\r\\n// Mango\\r\\n// Orange\\r\\n// Apple\\r\\n// Banana\\r\\n//\\r\\n// The following strings contain 'n':\\r\\n// Mango\\r\\n// Orange\\r\\n// Banana\",\n\t\"1.js\": \"let fruits = [\\\"Mango\\\", \\\"Orange\\\", \\\"Apple\\\", 3.0, \\\"Banana\\\"];\\r\\n\\r\\n// Apply ofType() to the Array\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"Elements of type 'String' are:\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// The following query shows that the standard query operators such as\\r\\n// where() can be applied to the Array type after calling ofType().\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains(\\\"n\\\"));\\r\\n\\r\\nconsole.log(\\\"\\\\nThe following strings contain 'n':\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Elements of type 'string' are:\\r\\n// Mango\\r\\n// Orange\\r\\n// Apple\\r\\n// Banana\\r\\n//\\r\\n// The following strings contain 'n':\\r\\n// Mango\\r\\n// Orange\\r\\n// Banana\"\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(`${ pet.name } - ${ pet.age }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Whiskers - 1\\r\\n Boots - 4\\r\\n Barley - 8\\r\\n*/\"\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"const specialComparer = (d1, d2) => {\\r\\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\\r\\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\\r\\n    if (f1 === f2) {\\r\\n        return d1 - d2;\\r\\n    } else if (f1 > f2) {\\r\\n        return 1;\\r\\n    } else {\\r\\n        return -1;\\r\\n    }\\r\\n};\\r\\n\\r\\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\\r\\n\\r\\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\\r\\n\\r\\nfor (let num of query) {\\r\\n    console.log(num);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 9.7\\r\\n 0.5\\r\\n 8.3\\r\\n 6.3\\r\\n 1.3\\r\\n 6.2\\r\\n*/\"\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let squares = Enumerable.range(1, 10).select(x => x * x);\\r\\n\\r\\nfor (let num of squares) {\\r\\n    console.log(num);\\r\\n}\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 1\\r\\n 4\\r\\n 9\\r\\n 16\\r\\n 25\\r\\n 36\\r\\n 49\\r\\n 64\\r\\n 81\\r\\n 100\\r\\n*/\",\n\t\"2.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n {\\\"index\\\":0,\\\"str\\\":\\\"\\\"}\\r\\n {\\\"index\\\":1,\\\"str\\\":\\\"b\\\"}\\r\\n {\\\"index\\\":2,\\\"str\\\":\\\"ma\\\"}\\r\\n {\\\"index\\\":3,\\\"str\\\":\\\"ora\\\"}\\r\\n {\\\"index\\\":4,\\\"str\\\":\\\"pass\\\"}\\r\\n {\\\"index\\\":5,\\\"str\\\":\\\"grape\\\"}\\r\\n*/\"\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] }\\r\\n];\\r\\n\\r\\n// Query using selectMany().\\r\\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"Using selectMany():\\\");\\r\\n\\r\\n// Only one foreach loop is required to iterate\\r\\n// through the results since it is a\\r\\n// one-dimensional collection.\\r\\nfor (let pet of query1) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// This code shows how to use select()\\r\\n// instead of selectMany().\\r\\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"\\\\nUsing select():\\\");\\r\\n\\r\\n// Notice that two foreach loops are required to\\r\\n// iterate through the results\\r\\n// because the query returns a collection of arrays.\\r\\nfor (let petList of query2) {\\r\\n    for (let pet of petList) {\\r\\n        console.log(pet);\\r\\n    }\\r\\n    console.log();\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Using selectMany():\\r\\n Scruffy\\r\\n Sam\\r\\n Walker\\r\\n Sugar\\r\\n Scratches\\r\\n Diesel\\r\\n\\r\\n Using select():\\r\\n Scruffy\\r\\n Sam\\r\\n\\r\\n Walker\\r\\n Sugar\\r\\n\\r\\n Scratches\\r\\n Diesel\\r\\n\\r\\n*/\",\n\t\"2.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] },\\r\\n    { name: \\\"Hines, Patrick\\\", pets: [ \\\"Dusty\\\" ] }\\r\\n];\\r\\n\\r\\n// Project the items in the array by appending the index\\r\\n// of each PetOwner to each pet's name in that petOwner's\\r\\n// array of pets.\\r\\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\\r\\n        petOwner.pets.asEnumerable().select(pet => index + pet));\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// 0Scruffy\\r\\n// 0Sam\\r\\n// 1Walker\\r\\n// 1Sugar\\r\\n// 2Scratches\\r\\n// 2Diesel\\r\\n// 3Dusty\",\n\t\"3.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] },\\r\\n    { name: \\\"Hines, Patrick\\\", pets: [ \\\"Dusty\\\" ] }\\r\\n];\\r\\n\\r\\n// Project the pet owner's name and the pet's name.\\r\\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\\r\\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\\\"S\\\"))\\r\\n        .select(ownerAndPet => ({\\r\\n            owner: ownerAndPet.petOwner.name,\\r\\n            pet: ownerAndPet.petName\\r\\n        }));\\r\\n\\r\\n// Print the results.\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// {\\\"owner\\\":\\\"Higa\\\",\\\"pet\\\":\\\"Scruffy\\\"}\\r\\n// {\\\"owner\\\":\\\"Higa\\\",\\\"pet\\\":\\\"Sam\\\"}\\r\\n// {\\\"owner\\\":\\\"Ashkenazi\\\",\\\"pet\\\":\\\"Sugar\\\"}\\r\\n// {\\\"owner\\\":\\\"Price\\\",\\\"pet\\\":\\\"Scratches\\\"}\"\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"config.as.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\",\n\t\"config.extends.js\": \"Enumerable.config.extends.array = true; //Open extends for Array. After open this, Array will have all the features of LINQ and you can use methods of LINQ for Array. (Suggest)\\r\\nEnumerable.config.extends.string = true; //Open extends for String. After open this, String will have all the features of LINQ and you can use methods of LINQ for String.(Not suggest)\\r\\nEnumerable.config.extends.object = true; //Open extends for Object. After open this, each object will have all the features of LINQ and you can use methods of LINQ for every object.(Not suggest)\"\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"asEnumerable.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nlet s = 'abc'.asEnumerable();\",\n\t\"Enumerable.asEnumerable.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\",\n\t\"Enumerable.js\": \"let enumerable = Enumerable([1, 2, 3]);\"\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"Boots\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"Whiskers\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\npets.asEnumerable().select(\\\"name\\\");\\r\\n//the above code and the following code are same feature.\\r\\npets.asEnumerable().select(pet => pet.name);\",\n\t\"1.try.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"Boots\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"Whiskers\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\nconsole.log(pets.asEnumerable().select(\\\"name\\\"));\\r\\n//the above code and the following code are same feature.\\r\\nconsole.log(pets.asEnumerable().select(pet => pet.name));\",\n\t\"2.js\": \"let arrays = [\\r\\n    [ 1, 2, 4, 8 ],\\r\\n    [ 1, 3, 9 ],\\r\\n    [ 1, 5 ]\\r\\n];\\r\\n\\r\\narrays.asEnumerable().select(1);\\r\\n//the above code and the following code are same feature.\\r\\narrays.asEnumerable().select(array => array[1]);\"\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [ { name: \\\"Barley\\\", age: 8, vaccinated: true }, { name: \\\"Boots\\\", age: 4, vaccinated: false }, { name: \\\"Whiskers\\\", age: 1, vaccinated: false } ];\\r\\n\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There ${ unvaccinated ? \\\"are\\\" : \\\"are not any\\\" } unvaccinated animals over age one.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  There are unvaccinated animals over age one.\",\n\t\"2.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" }, terry = { name: \\\"Adams, Terry\\\" }, charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry }, boots = { name: \\\"Boots\\\", owner: terry }, whiskers = { name: \\\"Whiskers\\\", owner: charlotte }, daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus - Daisy\\r\\n Adams, Terry - Barley\\r\\n Adams, Terry - Boots\\r\\n Weiss, Charlotte - Whiskers\\r\\n */\"\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Action\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"What's the Action\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"Action is a function which is only execute some calculation for the parameters\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The Action function accept one parameter, or accept another parameter which is the index of the first parameter in the enumerable as the second parameter, then execute some calculation but return nothing\"\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Comparer\"\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Configuration\"\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Get IEnumerable instance\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"Use constructor of Enumerable class\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"You can use constructor of Enumerable class for get an IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use Enumerable.asEnumerable method\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use asEnumerable method\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"After require linq-js, asEnumerable method war included by any object, you can use asEnumerable of any object for get an IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Predicate\"\n};\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Selector\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"What's the Selector\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The Selector is a function which mapping an input value to an output value.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The function accept one or more arguments, sometimes, it also accept index of the collection as argument.\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Unary Selector\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Binary Selector\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use string/number/symbol value to replace the Selector\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"You can use a string or a number or a symbol value to replace an Unary Selector, the examples following will show you how to use string or number value to replace the Selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Start use\"\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Install\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"Add to project\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Require\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"description:This module require ES6. I suggest you to use this with ES6. The following examples is already use ES6.\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"Introduction\",\n\t\"contents\": [\n\t\t\"use linq and lambda in javascript for es6\",\n\t\t\"&nbsp;\",\n\t\t\"\",\n\t\t\"Since 2.1.0, I rewrite all to use new features of ES6. The performance be better, memory is used less and using deferred execution.\",\n\t\t\"&nbsp;\",\n\t\t\"My English is poor!\"\n\t]\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"English\"\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"author\": \"散漫的水元素\",\n\t\"emails\": [\n\t\t\"491029934@qq.com\",\n\t\t\"wm123450405@hotmail.com\"\n\t],\n\t\"projects\": [\n\t\t{\n\t\t\t\"name\": \"github\",\n\t\t\t\"href\": \"https://github.com/wm123450405/linqjs\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"oschina\",\n\t\t\t\"href\": \"http://git.oschina.net/wm123450405/linqjs\"\n\t\t}\n\t],\n\t\"publishs\": [\n\t\t{\n\t\t\t\"name\": \"node\",\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"IMapEnumerable\"\n\t],\n\t\"name\": \"Directory\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"delete\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器从 Directory 中移除指定的键\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"has\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器判断 Directory 中是否包含指定的键\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"set\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"IMapEnumerable\"\n\t]\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回是否包含指定的键\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器从 Directory 中移除指定的键\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"键所对应的值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回是否包含指定的键\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器判断 Directory 中是否包含指定的键\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要设置的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回 Directory 对象本身\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"Entry\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"此entry的key\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"value\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"此entry的value\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此entry的key\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此entry的value\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.actions\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的执行器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的执行器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该执行器接受一个元素和该元素所在序列的索引作为参数, 但是不做任何处理, 通常表示为 defaultAction\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"action\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.comparers\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的大小比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"equality\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的相等比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"same\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的相同比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"strict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的全等比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"array\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"array\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"array\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"greater\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"greaterThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"greaterThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"ignoreCase\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"less\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"lessThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"lessThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicateArray\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"array\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"last\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"false\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该比较器按照指定的 array 值的循序(作为从小到大的方式)判别待比较的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"greaterThen\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 greaterThen 函数后返回 true 时该函数返回 1 表示传入的第一个参数值大于第二个参数值, 否则返回 -1 表示传入的第一个参数值小于第二个参数值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"method\": \"less\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"lessThen\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 lessThen 函数后返回 true 时该函数返回 -1 表示传入的第一个参数值小于第二个参数值, 否则返回 1 表示传入的第一个参数值大于第二个参数值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"method\": \"greater\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicateArray\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"last\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"false\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该比较器按照指定的 predicateArray 中的函数的匹配循序(作为从小到大的方式)判别待比较的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的大小比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该比较器是一个大小比较器, 它接受两个用于比较的元素作为参数, 返回一个number表示大小, 通常表示为 defaultComparer\",\n\t\t\t\t\"如果返回值大于0, 则表示第一个参数大于第二个参数. 如果返回值小于0, 则表示第一个参数小于第二个参数. 如果返回值等于0, 则表示两个参数相等\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的相等比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultEqualityComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的相同比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultSameComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的全等比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultStrictEqualityComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.config\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"as\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"设置 asEnumerable 方法的别名\",\n\t\t\t\t\t\"default\": \"asEnumerable\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.array\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 Array 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.lazy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭调用原生对象的原生方法时使用延迟执行功能\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.object\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 Object 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.string\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 String 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"string\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"设置 asEnumerable 方法的别名\",\n\t\t\t\"default\": \"asEnumerable\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"为所有对象的 asEnumerable 方法设置一个别名\"\n\t\t\t],\n\t\t\t\"warnings\": [\n\t\t\t\t\"设置此别名后 asEnumerable 方法依然有效\"\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 Array 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"description\": \"开启或关闭调用原生对象的原生方法时使用延迟执行功能\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 Object 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 String 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"newInstance\": \"cannot\",\n\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"name\": \"Enumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"actions\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用执行器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"comparers\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用比较器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"config\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"全局配置\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicates\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用筛选器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectors\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用选择器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.19\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"between\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"step\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"empty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成一个空序列\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"from\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"generate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"将使用生成器生成一个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"generate\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"noConflict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"释放当前的全局 Enumerable 对象, 解决冲突\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"range\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.19\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"step\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"repeat\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"将生成一个序列, 其中包含指定数量个重复的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.predicates\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的筛选器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"exists\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"非空筛选器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"equality\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"not\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"properties\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"properties\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"properties\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"regexp\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"regexp\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"regexp\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"same\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相同筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selector\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"strict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个全等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 通过指定的相等比较器比较参数是否与指定的值相等\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultExistsPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 如果 predicate 返回 true, 这该函数返回 false, 反之亦然\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"exists\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 该筛选器通过深度对比 properties 所描述的键值对关系来判断传入参数是否符合条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"regexp\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"RegExp\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较通过指定的 selector 映射传入的参数值后的值是否与匹配指定的正则表达式\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个相同筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较参数是否与指定的值相同\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultExistsPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 该筛选器通过判断由 selector 映射传入的参数值后的值是否符合指定的 predicate 条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"exists\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个全等筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较参数是否与指定的值全等\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的筛选器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该筛选器接受一个元素和该元素所在序列的索引作为参数, 在任何时候都返回 true, 表示满足条件, 通常表示为 defaultPredicate\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"非空筛选器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该筛选器接受一个元素和该元素所在序列的索引作为参数, 在参数值不为空( undefined, null )的时候返回 true, 表示满足条件, 通常表示为 defaultExistsPredicate\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.selectors\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"children\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的子节点集选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"join\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的联接选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的键选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"parent\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的父节点键选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"result\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的结果选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"value\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的值选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"property\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"property\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个一元选择器函数, 该选择器返回输入对象的指定属性值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的子节点集选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值包含 children 属性, 将返回输入值的 children 属性值, 否则返回输入的值本身. 通常表示为 defaultChildrenSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 并返回输入的值本身. 通常表示为 defaultSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的联接选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个二元选择器, 它接受两个输入值, 返回一个对象, 该对象的 outer 属性对应第一个参数值, inner 属性对应第二个参数值\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的键选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 key 属性值, 否则返回输入的值本身. 通常表示为 defaultKeySelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的父节点键选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 返回输入值的 parent 属性值. 通常表示为 defaultParentSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的结果选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个二元选择器, 它接受两个输入值, 并返回第二个参数值. 通常表示为 defaultResultSelector\",\n\t\t\t\t\"通常情况下, 此函数的第一个参数为源序列的元素, 第二个参数为需要与第一个序列关联操作的第二个序列的元素或者是一个通过计算得来的与第一个参数有一定联系的数值\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的值选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 value 属性值, 否则返回输入的值本身. 通常表示为 defaultValueSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"newInstance\": \"cannot\",\n\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n};\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\"method\": \"from\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中第一个整数的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中最后一个整数的最大值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"step\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 1,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"步长\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含范围内连续的整数序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"一般的, 生成的新序列中包含 start 与 end.\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个不包含任何元素的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成一个空序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"generate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于生成每个元素的函数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"在生成序列中元素的数目\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个使用指定的生成器生成了所有元素的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将使用生成器生成一个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": false,\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"class\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"class\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"释放当前的全局 Enumerable 对象, 解决冲突\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中第一个整数的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要生成的连续整数的数目\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含范围内连续的整数序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"step\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 1,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"步长\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要重复的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"在生成序列中重复该值的次数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含指定数量重复值的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将生成一个序列, 其中包含指定数量个重复的值\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用执行器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.actions\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用比较器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.comparers\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"全局配置\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.config\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用筛选器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.predicates\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用选择器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.selectors\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.18\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IChunk\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"index\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"description\": \"此分块的索引\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.18\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"description\": \"此分块的索引\"\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"array\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IEnumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"length\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"size\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"aggregate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"seed\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"func\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"seed\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"func\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"all\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"any\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"average\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"chunk\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"chunk\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"offset\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"combine\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"parentSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"concat\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"连接两个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"contains\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"copyWithin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"target\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"count\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"defaultIfEmpty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"distinct\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"elementAt\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"elementAtOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"every\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"except\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"fill\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个数组的所有元素从开始索引填充到具有静态值的结束索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"filter\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"find\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findIndex\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findLast\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findLastIndex\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"first\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"firstOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"forEach\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"action\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"getEnumerator\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取序列的枚举器\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"groupBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"groupJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.17\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"includes\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"用来判断当前数组是否包含某指定的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"indexOf\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"innerJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"intersect\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"join\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.17\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"last\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lastIndexOf\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lastOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"leftJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"leftPad\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"length\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"map\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"max\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"min\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"nearBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"ofType\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"orderBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"orderByDescending\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pop\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"从数组中删除最后一个元素, 并返回该元素的值\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"product\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"push\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的末尾, 并返回数组的新长度\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rand\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"随机获取序列中的指定数量的元素,组成新的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"random\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中随机的一个元素\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"randomOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reduce\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"initialValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reduceRight\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"initialValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reverse\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"反转序列中元素的顺序\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rightJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rightPad\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"length\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectMany\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.16\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"collectionSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"collectionSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"separate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将一个递归结构的序列的展开为一个一维解构的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"childrenSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sequenceEqual\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"shift\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"从数组中删除第一个元素, 并返回该元素的值\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"single\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"singleOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"skip\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过指定的数量的序列中的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"skipWhile\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"slice\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"some\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sort\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"splice\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过删除现有元素和/或添加新元素来更改数组的内容\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sum\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"take\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从序列的开头返回指定的数量的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"takeWhile\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toArray\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"使用源序列创建一个数组\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toDirectory\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toLookup\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toObject\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"union\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"unshift\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的开头, 并返回新数组的长度\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"where\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"wipe\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器剔除序列中满足条件的一定数量的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"zip\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过依次合并元素的方式合并两个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"array\"\n\t],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"累加器的初始值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"func\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要对每个元素调用的累加器函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"将累加器的最终值转换为结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"result\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"已转换的累加器最终值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法可以很容易地通过一系列值执行计算. 此方法的原理是使用 source 中的每一个元素依次调用一次 func, 每次 func 调用时此方法将传递聚合的值(作为第一个参数传递给 func)与该序列中的元素. 参数 seed 的值作为聚合的初始值来使用. func 执行的结果替换之前的聚合的值. 最后一次 func 执行的结果传递给 resultSelector 得到此方法要获取的最终结果。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"min\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"max\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"average\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548744(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 aggregate 应用累加器函数和结果选择器\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列中的每一个元素都在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"在循环过程中, 当可以确定的结果时, 循环就会立即停止。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法不会返回序列中任何元素, 它只会确认集合中的所有元素是否满足条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548541(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 all 以确定是否在序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列中的有任何元素能在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"在循环过程中, 当可以确定的结果时, 循环就会立即停止。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法不会返回序列中任何元素, 它只会确认集合中是否存在满足条件的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"all\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"contains\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534972(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 any 以确定在序列中是否存在满足条件的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个 IEnumerable 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"因为本身已经是 IEnumerable 对象, 所以此方法将返回对象本身\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的平均值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"aggregate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549067(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 average 计算平均值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"chunk\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于表示分块后每块的数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"offset\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于表示起始分块的位移\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"分块后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"由于受参数 offset 与原序列总长度的影响, 分块后的首个序列与末尾序列的长度可能不等于参数 chunk 的值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IChunk\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"parentSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的父节点键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultParentSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"聚合后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"所有父节点键未被匹配的元素将成为新序列的顶层元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"separate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"parent\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列连接的另一个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个将两个序列所有元素的串联产生的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"连接两个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"此方法不用 union 方法因为此方法返回输入序列中的所有原始元素, 而 union 方法只返回唯一元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb302894(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 concat 可串联两个序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要在序列中定位的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"一个对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列包含具有指定的值的元素, 则返回true, 否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"只要找到匹配的元素, 将停止循环比较的过程\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 contains 确定数组是否包含特定元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的示例演示如何实现可在 contains 方法中使用的相等比较器，与使用此比较器确定数组是否包含特定元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"target\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个数字，表示序列中满足函数条件的元素数量\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"property\": \"length\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"property\": \"size\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535181(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组中的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组中满足条件的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组与指定值相符的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列为空时要返回的序列所包含的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列为空, 返回包含单一 defaultValue 元素的新序列, 否则返回源序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"此方法可以用于与 groupJoin 方法结合使用, 生成一个左外部联接\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb355419(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 defaultIfEmpty 方法并指定默认值。 第一个序列不为空，且第二个序列为空。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含源序列中所有非重复元素的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法的结果可能是无序的\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb338049(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 distinct 要返回的整数序列中非重复元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 distinct 中可用的相等比较器，并在实现此比较器后对一系列数据使用 distinct 方法返回去除重复数据后的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要检索的从零开始的元素索引\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"源序列中指定位置处的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果 index 超出范围, 此方法将引发异常. 如果希望 index 超出范围时返回默认值, 请使用 elementAtOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"elementAtOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb299233(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 elementAt 以返回特定位置处的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要检索的从零开始的元素索引\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"如果 index 超出范围时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果索引超出源序列中的界限返回 defaultValue, 否则返回源序列中的指定位置处的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"elementAt\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb494386(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 elementAtOrDefault 获取一个索引超出数组界限的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/every\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要在返回序列中移除存在于源序列中的元素序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的差集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"intersect\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb336390(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 except 方法来比较两个数字序列并将其返回仅在第一个序列中出现的元素组成的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 except 中可用的相等比较器，并在实现此比较器后对连个序列中的元素使用此比较器比较后返回仅在第一个序列中出现的元素组成的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个数组的所有元素从开始索引填充到具有静态值的结束索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/find\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的第一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 firstOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"firstOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535050(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 first 返回数组的第一个元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 first 返回数组中满足条件的第一个元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的第一个元素. 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"first\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549039(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何对空数组使用 firstOrDefault 。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何通过传入一个筛选器使用 firstOrDefault 。 在第二个调用到方法中，在满足条件的数组中没有任何元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"action\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"循环的执行体\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultAction\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.actions\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerator\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取序列的枚举器\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerator\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"elementSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源元素映射到组中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个组中创建结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"对一组及其键的投影的结果的集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535049(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 对序列的元素进行分组。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 分组一系列元素并对结果进行映射。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 对要投影的一系列元素进行分组并对结果进行映射。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"2-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"3-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的元素和联接序列的匹配元素集合中创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行分组的联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupJoin 来对两个序列执行分组的联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"用来判断当前数组是否包含某指定的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultStrictEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"join\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 innerJoin 来执行基于对一个公共键的两个序列的内部联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要在返回序列中返回存在于源序列中的元素序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的交集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"except\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb355408(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 intersect 获取在两个整数的序列中都存在的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 intersect 中可用的相等比较器，并在实现此比较器后对两个序列使用 intersect 方法返回由每个原序列中都存在的元素组成新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"split\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/join\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"0.1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 join 来执行基于对一个公共键的两个序列的内部联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"innerJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"join\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的最后一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 lastOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"lastOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549138(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultStrictEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的最后一个元素, 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"last\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548915(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\",\n\t\t\t\t\t\t\t\t\"其中参数 other 的值可能为 undefined\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部左联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"length\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充后的总长度\",\n\t\t\t\t\t\t\t\t\"必须为正整数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充的元素\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"补充了指定内容后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightPad\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/map\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"generics\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"TResult\",\n\t\t\t\t\t\t\t\"wheres\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"IComparable\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于计算的最大值的可比较的结果类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"TResult\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于比较每个元素大小的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"TResult\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的最大值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"min\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548659(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 max 来确定序列中的最大值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 max 来确定序列中投影值的最大值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"generics\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"TResult\",\n\t\t\t\t\t\t\t\"wheres\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"IComparable\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于计算的最小值的可比较的结果类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"TResult\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于比较每个元素大小的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"TResult\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的最小值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"max\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548779(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 min 来确定序列中的最小值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 min 来确定序列中投影值的最小值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"elementSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源元素映射到组中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个组中创建结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"对一组及其键的投影的结果的集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"class\",\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"筛选序列元素所根据的类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中的元素类型为指定类型的所有元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb360913(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 ofType 来筛选序列中的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"1-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行升序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderByDescending\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IOrderedEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549422(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 orderBy 序列的元素进行排序。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行降序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IOrderedEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548916(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 orderByDescending 对序列中使用转换函数和自定义比较器按降序对元素进行排序。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从数组中删除最后一个元素, 并返回该元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的乘积\",\n\t\t\t\t\t\t\t\"如果值序列不包含任何元素,返回NaN\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的末尾, 并返回数组的新长度\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/push\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"新序列的长度\",\n\t\t\t\t\t\t\t\t\"必须是正整数\",\n\t\t\t\t\t\t\t\t\"为 0 时新序列包含原序列的全部元素\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"随机排序后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"随机获取序列中的指定数量的元素,组成新的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中随机的一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中随机的一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列不包含任何元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 randomOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"randomOrDefault\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中随机的一个元素. 如果未找到元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"random\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"initialValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"initialValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个序列，其元素以相反顺序对应于输入序列的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"反转序列中元素的顺序\",\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"如果开启对 Array 的扩展, 则 Array 对象原生的 reverse 方法也将返回 IEnumerable 对象, 而不只是 Array 对象\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358497(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\",\n\t\t\t\t\t\t\t\t\"其中参数 element 的值可能为 undefined\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部右联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"length\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充后的总长度\",\n\t\t\t\t\t\t\t\t\"必须为正整数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充的元素\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"补充了指定内容后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftPad\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个序列，其元素以相反顺序对应于输入序列的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534869(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 select 对序列中的每个元素进行投影。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 select 对一系列值进行投影，并使用每个元素的索引。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.16\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"collectionSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要应用于输入序列中的每个元素转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要应用于中间序列的每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"sourceElement\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"collectionElement\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一对多转换函数对输入序列中的每个元素调用的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"select\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534732(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并使用每个外部元素的索引。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并且使用结果选择器函数来保持结果元素与源序列的对应关系。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"childrenSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的子节点集合的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultChildrenSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源节点映射到结果序列中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"展开后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个递归结构的序列的展开为一个一维解构的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"combine\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"children\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果两个源序列的长度相等, 并且其相应元素根据 comparer 比较器比较的结果都为相等, 则返回true, 否则返回 false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb342073(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从数组中删除第一个元素, 并返回该元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的唯一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 singleOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"singleOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535118(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的唯一元素. 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"single\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549274(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"返回剩余元素前要跳过的元素数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中的指定索引后出现的所有元素的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"跳过指定的数量的序列中的元素，然后返回剩余元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中元素的个数少于count个, 则返回空序列\",\n\t\t\t\t\t\t\"如果count小于或等于0, 则返回包含全部源序列元素的新序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skipWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"take\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358985(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"跳过从源序列第一个元素开始, 连续的所有执行 predicate 检测返回 true 的元素, 后剩余的元素组成的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中所有元素执行 predicate 检测时都返回 true, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skip\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"takeWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549288(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/some\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过删除现有元素和/或添加新元素来更改数组的内容\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的和值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"average\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549046(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要返回的元素数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含从输入序列的起始位置开始, 指定的数量的连续元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从序列的开头返回指定的数量的连续元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中元素的个数少于count个, 则返回包含全部源序列元素的新序列\",\n\t\t\t\t\t\t\"如果count小于或等于0, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skip\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"takeWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb503062(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中出现检测不能够通过在元素之前的所有元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中第一个元素执行 predicate 检测时返回 false, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skipWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"take\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含输入序列中的所有元素的数组\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"使用源序列创建一个数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb298736(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Directory\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toObject\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Directory\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Lookup\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Lookup\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"提取出的 Object 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toDirectory\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"构成并集的第二个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的并集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"intersect\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358407(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的开头, 并返回新数组的长度\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中所有满足条件的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549418(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要剔除的数量, 默认全部剔除\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"剔除输入序列中满足条件的指定数量的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过筛选器剔除序列中满足条件的一定数量的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要合并的第二个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"一个指定如何合并来自两个序列的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含合并的两个输入序列的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过依次合并元素的方式合并两个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"override\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"property\": \"size\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"property\": \"length\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"IEnumerator\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"current\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"当前游标所指向的元素\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"moveNext\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将游标移动到下一个元素, 并返回状态\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reset\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"重置 IEnumerator 对象, 将游标重置为指向第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果游标成功移动至下一个元素, 则返回true, 否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将游标移动到下一个元素, 并返回状态\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"重置 IEnumerator 对象, 将游标重置为指向第一个元素\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"当前游标所指向的元素\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IGrouping\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"description\": \"此分组的key\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此分组的key\"\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IMapEnumerable\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"forEach\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"action\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toDirectory\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toLookup\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"action\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"循环的执行体\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultAction\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"forEach\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.actions\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Directory\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toDirectory\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Lookup\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toLookup\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IOrderedEnumerable\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"thenBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"thenByDescending\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行升序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534500(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行降序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderByDescending\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534489(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"Directory\"\n\t],\n\t\"name\": \"Lookup\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"set\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"Directory\"\n\t]\n};\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"键所对应的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的序列\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要设置的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回 Directory 对象本身\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的序列\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"Plugin\",\n\t\"properties\": [],\n\t\"methods\": []\n};\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"class\": \"类\",\n\t\"interface\": \"接口\",\n\t\"object\": \"对象\",\n\t\"constructor\": \"构造方法\",\n\t\"constructors\": \"构造方法\",\n\t\"property\": \"属性\",\n\t\"properties\": \"属性\",\n\t\"method\": \"方法\",\n\t\"methods\": \"方法\",\n\t\"since\": \"最低版本\",\n\t\"deprecated\": \"最高版本\",\n\t\"override\": \"重写\",\n\t\"details\": \"详情\",\n\t\"description\": \"描述\",\n\t\"summary\": \"摘要\",\n\t\"warning\": \"注意\",\n\t\"warnings\": \"注意\",\n\t\"remark\": \"备注\",\n\t\"remarks\": \"备注\",\n\t\"example\": \"示例\",\n\t\"examples\": \"示例\",\n\t\"static\": \"静态的\",\n\t\"see\": \"参考\",\n\t\"declare\": \"声明\",\n\t\"parameters\": \"参数\",\n\t\"parameter\": \"参数\",\n\t\"returns\": \"返回值\",\n\t\"generics\": \"类型参数\",\n\t\"apis\": \"API文档\",\n\t\"guide\": \"教程\",\n\t\"publish\": \"发布\",\n\t\"time\": \"时间\",\n\t\"date\": \"日期\",\n\t\"prepublish\": \"预发布\",\n\t\"version\": \"版本\",\n\t\"author\": \"作者\",\n\t\"email\": \"邮箱\",\n\t\"project\": \"项目\",\n\t\"default\": \"默认\",\n\t\"value\": \"值\",\n\t\"defaultValue\": \"默认值\",\n\t\"readonly\": \"只读\",\n\t\"lazy\": \"延迟执行\",\n\t\"try\": \"试一试\",\n\t\"run\": \"运行\",\n\t\"clear\": \"清空\",\n\t\"close\": \"收起\",\n\t\"loadRuntime\": \"载入运行时\",\n\t\"executing\": \"执行中\",\n\t\"enableExtend\": \"启用 Array 扩展\",\n\t\"newInstance\": {\n\t\t\"only\": \"只能使用new运算符\",\n\t\t\"both\": \"可以使用new运算符,也可以直接调用\",\n\t\t\"cannot\": \"不能使用new运算符\"\n\t}\n};\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"publish\": \"2017-03-27\",\n\t\t\"contents\": [\n\t\t\t\"优化了部分代码结构\",\n\t\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t\t],\n\t\t\"version\": \"2.1.15\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-05\",\n\t\t\"contents\": [\n\t\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t\t],\n\t\t\"version\": \"2.1.16\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-12\",\n\t\t\"contents\": [\n\t\t\t\"新增 findLast 方法\",\n\t\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t\t],\n\t\t\"version\": \"2.1.17\"\n\t},\n\t{\n\t\t\"publish\": \"2017-08-30\",\n\t\t\"contents\": [\n\t\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\t\"\",\n\t\t\t\"Bugs\",\n\t\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t\t],\n\t\t\"version\": \"2.1.18\"\n\t},\n\t{\n\t\t\"publish\": \"2017-09-08\",\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t\t],\n\t\t\"version\": \"2.1.19\"\n\t},\n\t{\n\t\t\"prepublish\": true,\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\t\"2. 优化 defaultValueSelector\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t\t],\n\t\t\"version\": \"2.1.20.pre\"\n\t}\n];\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"publish\": \"2017-03-27\",\n\t\"contents\": [\n\t\t\"优化了部分代码结构\",\n\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t]\n};\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"publish\": \"2017-04-05\",\n\t\"contents\": [\n\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t]\n};\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"publish\": \"2017-04-12\",\n\t\"contents\": [\n\t\t\"新增 findLast 方法\",\n\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t]\n};\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"publish\": \"2017-08-30\",\n\t\"contents\": [\n\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\"\",\n\t\t\"Bugs\",\n\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t]\n};\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"publish\": \"2017-09-08\",\n\t\"contents\": [\n\t\t\"新增(New):\",\n\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\"\",\n\t\t\"优化(Optimization):\",\n\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\"\",\n\t\t\"修复(Fixed):\",\n\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t]\n};\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"prepublish\": true,\n\t\"contents\": [\n\t\t\"新增(New):\",\n\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\"\",\n\t\t\"优化(Optimization):\",\n\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\"2. 优化 defaultValueSelector\",\n\t\t\"\",\n\t\t\"修复(Fixed):\",\n\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t]\n};\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"简介\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"安装\"\n\t},\n\t{\n\t\t\"code\": \"guides\",\n\t\t\"title\": \"教程\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"instance\",\n\t\t\t\t\"title\": \"获取 IEnumerable 实例\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"use\",\n\t\t\t\t\"title\": \"开始使用\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"config\",\n\t\t\t\t\"title\": \"配置\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"selector\",\n\t\t\t\t\"title\": \"选择器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"predicate\",\n\t\t\t\t\"title\": \"筛选器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"comparer\",\n\t\t\t\t\"title\": \"比较器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"action\",\n\t\t\t\t\"title\": \"执行器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"iterator\",\n\t\t\t\t\"title\": \"迭代器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"enumerator\",\n\t\t\t\t\"title\": \"枚举器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"extend\",\n\t\t\t\t\"title\": \"扩展\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"plugin\",\n\t\t\t\t\"title\": \"插件\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"apis\",\n\t\t\"title\": \"API文档\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"Directory\",\n\t\t\t\t\"title\": \"Directory 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Entry\",\n\t\t\t\t\"title\": \"Entry 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable\",\n\t\t\t\t\"title\": \"Enumerable 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.actions\",\n\t\t\t\t\"title\": \"Enumerable.actions 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.comparers\",\n\t\t\t\t\"title\": \"Enumerable.comparers 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.config\",\n\t\t\t\t\"title\": \"Enumerable.config 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.predicates\",\n\t\t\t\t\"title\": \"Enumerable.predicates 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.selectors\",\n\t\t\t\t\"title\": \"Enumerable.selectors 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IChunk\",\n\t\t\t\t\"title\": \"IChunk 接口\",\n\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerable\",\n\t\t\t\t\"title\": \"IEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerator\",\n\t\t\t\t\"title\": \"IEnumerator 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IGrouping\",\n\t\t\t\t\"title\": \"IGrouping 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IMapEnumerable\",\n\t\t\t\t\"title\": \"IMapEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IOrderedEnumerable\",\n\t\t\t\t\"title\": \"IOrderedEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Lookup\",\n\t\t\t\t\"title\": \"Lookup 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Plugin\",\n\t\t\t\t\"title\": \"Plugin 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"更新日志\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"关于\"\n\t}\n];\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports) {\n\nmodule.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"简介\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"安装\"\n\t},\n\t\"guides\",\n\t\"apis\",\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"更新日志\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"关于\"\n\t}\n];\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\n// 确定数组中比 “香蕉” 更长的字符串\\r\\nlet longestName = fruits.asEnumerable().aggregate(\\\"香蕉\\\",\\r\\n\\t\\t(longest, next) => next.length > longest.length ? next : longest,\\r\\n\\t\\t// 返回最终结果\\r\\n\\t\\tfruit => `水果 “${ fruit }”`);\\r\\n\\r\\nconsole.log(`最长的字符串是${ longestName }`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 最长的字符串是水果 “百香果”\"\n};\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// 创建一个宠物的数组。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 10 },\\r\\n    { name: \\\"小黑\\\", age: 14 },\\r\\n    { name: \\\"旺财\\\", age: 6 }\\r\\n];\\r\\n\\r\\n// 确实是否所有的宠物名称\\r\\n// 都是“小”字开头的。\\r\\nlet allStartWithXiao = pets.asEnumerable().all(pet => pet.name.startsWith(\\\"小\\\"));\\r\\n\\r\\nconsole.log(`${ allStartWithXiao ? \\\"所有\\\" : \\\"不是所有\\\" }宠物的名字都是以“小”字开头的。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  不是所有宠物的名字都是以“小”字开头的。\",\n\t\"2.js\": \"let people = [\\r\\n    {\\r\\n        lastName: \\\"老王\\\",\\r\\n        pets: [\\r\\n            { name: \\\"小白\\\", age: 10 },\\r\\n            { name: \\\"机器人\\\", age: 14 },\\r\\n            { name: \\\"旺财\\\", age: 6 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老郑\\\",\\r\\n        pets: [\\r\\n            { name: \\\"雪诺\\\", age: 1 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老吴\\\",\\r\\n        pets: [\\r\\n            { name: \\\"贝贝\\\", age: 8 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老周\\\",\\r\\n        pets: [\\r\\n            { name: \\\"甜心\\\", age: 2 },\\r\\n            { name: \\\"大河\\\", age: 13 }\\r\\n        ]\\r\\n    }\\r\\n];\\r\\n\\r\\n// 确定谁的宠物都是大于5岁的。\\r\\nlet names = people.asEnumerable()\\r\\n        .where(person => person.pets.all(pet => pet.age > 5))\\r\\n        .select(person => person.lastName);\\r\\n\\r\\nfor (let name of names) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n/* 这段代码的输出结果如下：\\r\\n *\\r\\n * 老王\\r\\n * 老吴\\r\\n */\"\n};\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// 创建一个宠物的数组。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 8, vaccinated: true },\\r\\n    { name: \\\"机器人\\\", age: 4, vaccinated: false },\\r\\n    { name: \\\"旺财\\\", age: 1, vaccinated: false }\\r\\n];\\r\\n\\r\\n// 确定是否存在年龄大于1岁且没有接种疫苗的宠物\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`${ unvaccinated ? \\\"有\\\" : \\\"没有\\\" }超过一岁未接种疫苗的动物。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  有超过一岁未接种疫苗的动物。\"\n};\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [ \\\"10007\\\", \\\"37\\\", 299846234235 ];\\r\\n\\r\\nlet average = numbers.asEnumerable().average();\\r\\n\\r\\nconsole.log(`平均数是${ average }。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 平均数是99948748093。\"\n};\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let cats = [\\r\\n    { name: \\\"花斑虎\\\", age: 3 },\\r\\n    { name: \\\"汤姆\\\", age: 14 },\\r\\n    { name: \\\"懒猫\\\", age: 9 }\\r\\n];\\r\\n\\r\\nlet dogs = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = cats.asEnumerable().select(cat => cat.name)\\r\\n        .concat(dogs.asEnumerable().select(dog => dog.name));\\r\\n\\r\\nfor (let name of query) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 花斑虎\\r\\n// 汤姆\\r\\n// 懒猫\\r\\n// 小白\\r\\n// 机器人\\r\\n// 旺财\"\n};\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"香蕉\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\nlet fruit = \\\"芒果\\\";\\r\\n\\r\\nlet hasMango = fruits.asEnumerable().contains(fruit);\\r\\n\\r\\nconsole.log(`数组中${ hasMango ? \\\"含\\\" : \\\"不含\\\" }有“${ fruit }”。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 数组中含有“芒果”。\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果水果的名称和数目相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet apple = { name: \\\"苹果\\\", code: 9 };\\r\\nlet kiwi = { name: \\\"奇异果\\\", code: 8 };\\r\\n\\r\\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\\r\\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\\r\\n\\r\\nconsole.log(\\\"苹果? \\\" + hasApple);\\r\\nconsole.log(\\\"奇异果? \\\" + hasKiwi);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果? true\\r\\n 奇异果? false\\r\\n */\"\n};\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"香蕉\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\nlet numberOfFruits = fruits.asEnumerable().count();\\r\\n\\r\\nconsole.log(`数组中有${ numberOfFruits }种水果。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 数组中有6种水果。\\r\\n\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", vaccinated: true },\\r\\n    { name: \\\"机器人\\\", vaccinated: false },\\r\\n    { name: \\\"旺财\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\\r\\n\\r\\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 有2个动物没有接种疫苗。\",\n\t\"3.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", vaccinated: true },\\r\\n    { name: \\\"机器人\\\", vaccinated: false },\\r\\n    { name: \\\"旺财\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\\r\\n\\r\\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 有2个动物没有接种疫苗。\"\n};\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let defaultPet = { name: \\\"默认宠物名称\\\", age: 0 };\\r\\n\\r\\nlet pets1 = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`宠物名称是：${ pet.name }`);\\r\\n}\\r\\n\\r\\nconsole.log();\\r\\n\\r\\nlet pets2 = [];\\r\\n\\r\\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`宠物名称是：${ pet.name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 宠物名称是：小白\\r\\n 宠物名称是：机器人\\r\\n 宠物名称是：旺财\\r\\n\\r\\n 宠物名称是：默认宠物名称\\r\\n */\"\n};\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\\r\\n\\r\\nlet distinctAges = ages.asEnumerable().distinct();\\r\\n\\r\\nconsole.log(\\\"不重复的年龄有：\\\");\\r\\n\\r\\nfor (let age of distinctAges) {\\r\\n    console.log(age);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 不重复的年龄有：\\r\\n 21\\r\\n 46\\r\\n 55\\r\\n 17\\r\\n */\\r\\n\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和编号相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet products = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// 去除重复\\r\\nlet noduplicates = products.asEnumerable().distinct(productComparer);\\r\\n\\r\\nfor (let product of noduplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果 9\\r\\n 橘子 4\\r\\n 柠檬 12\\r\\n */\"\n};\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet name = names.asEnumerable().elementAt(4);\\r\\n\\r\\nconsole.log(`名字是“${ name }”。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 名字是“洪金宝”。\\r\\n */\"\n};\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet index = 20;\\r\\n\\r\\nlet name = names.asEnumerable().elementAtOrDefault(index, \\\"【这个位置上没有人】\\\");\\r\\n\\r\\nconsole.log(`在位置${ index }上的名字是“${ name }”。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 在位置20上的名字是“【这个位置上没有人】”。\\r\\n */\"\n};\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\\r\\nlet numbers2 = [ 2.2 ];\\r\\n\\r\\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\\r\\n\\r\\nfor (let number of onlyInFirstSet) {\\r\\n    console.log(number);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 2\\r\\n 2.1\\r\\n 2.3\\r\\n 2.4\\r\\n 2.5\\r\\n */\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和数目相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits1 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet fruits2 = [ { name: \\\"苹果\\\", code: 9 } ];\\r\\n\\r\\n//获取第一个数组中的全部元素\\r\\n//除了出现在第二个数组中的元素。\\r\\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\\r\\n\\r\\nfor (let product of except) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 橘子 4\\r\\n 柠檬 12\\r\\n */\"\n};\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first();\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 9\\r\\n */\",\n\t\"2.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first(number => number > 80);\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 92\\r\\n */\"\n};\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let numbers = [];\\r\\nlet first = numbers.asEnumerable().firstOrDefault(0);\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 0\\r\\n */\",\n\t\"2.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"六小龄童\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet firstLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 3);\\r\\n\\r\\nconsole.log(`第一个最长的名字是：“${ firstLongName }”。`);\\r\\n\\r\\nlet firstVeryLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 4);\\r\\n\\r\\nconsole.log(`${ firstVeryLongName === \\\"\\\" ? \\\"没有\\\" : \\\"有\\\" }名字的长度多于4个字。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 第一个最长的名字是：“六小龄童”。\\r\\n 没有名字的长度多于4个字。\\r\\n */\"\n};\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"// 创建一个宠物的序列。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 },\\r\\n    { name: \\\"小黑\\\", age: 4 }\\r\\n];\\r\\n\\r\\n// 使用年龄作为分组的键同时\\r\\n// 使用宠物的名字作为每个分组中的元素。\\r\\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let petGroup of query) {\\r\\n    // 输出该组的键。\\r\\n    console.log(petGroup.key);\\r\\n    // 循环每个结果的内容。\\r\\n    for (let name of petGroup)\\r\\n        // 输出 IGrouping 中的值。\\r\\n        console.log(`  ${ name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 8\\r\\n   小白\\r\\n 4\\r\\n   机器人\\r\\n   小黑\\r\\n 1\\r\\n   旺财\\r\\n */\\r\\n\",\n\t\"2-2.1.19.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count(),\\r\\n        min: pets.min(pet => pet.age),\\r\\n        max: pets.max(pet => pet.age)\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n    console.log(\\\"该组的最小年龄：\\\" + result.min);\\r\\n    console.log(\\\"该组的最大年龄：\\\" + result.max);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：8.3\\r\\n 该组的最大年龄：8.3\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n 该组的最小年龄：4.3\\r\\n 该组的最大年龄：4.9\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：1.5\\r\\n 该组的最大年龄：1.5\\r\\n */\",\n\t\"2.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键与数量的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n */\",\n\t\"3-2.1.19.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count(),\\r\\n        min: ages.min(),\\r\\n        max: ages.max()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n    console.log(\\\"该组的最小年龄：\\\" + result.min);\\r\\n    console.log(\\\"该组的最大年龄：\\\" + result.max);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：8.3\\r\\n 该组的最大年龄：8.3\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n 该组的最小年龄：4.3\\r\\n 该组的最大年龄：4.9\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：1.5\\r\\n 该组的最大年龄：1.5\\r\\n */\",\n\t\"3.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n */\"\n};\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let xi = { name: \\\"习大大\\\" };\\r\\nlet wang = { name: \\\"王思聪\\\" };\\r\\nlet li = { name: \\\"李小龙\\\" };\\r\\n\\r\\nlet white = { name: \\\"小白\\\", owner: wang };\\r\\nlet boots = { name: \\\"机器人\\\", owner: wang };\\r\\nlet black = { name: \\\"黑蛋\\\", owner: li };\\r\\nlet cai = { name: \\\"旺财\\\", owner: xi };\\r\\n\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\n// 生成一个每个元素都包含\\r\\n// 主人名字和其所有宠物名字列表\\r\\n// 的新序列\\r\\nlet query = people.asEnumerable().groupJoin(pets,\\r\\n    (person, petCollection) => ({\\r\\n        ownerName: person.name,\\r\\n        pets: petCollection.select(pet => pet.name)\\r\\n    }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    // 输入该主人姓名。\\r\\n    console.log(`${ obj.ownerName }：`);\\r\\n    // 输入该主人所有宠物的名字。\\r\\n    for (let pet of obj.pets) {\\r\\n        console.log(`  ${ pet }`);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大：\\r\\n   旺财\\r\\n 王思聪：\\r\\n   小白\\r\\n   机器人\\r\\n 李小龙：\\r\\n   黑蛋\\r\\n */\"\n};\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let id1 = [ 44, 26, 92, 30, 71, 38 ];\\r\\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\\r\\n\\r\\nlet both = id1.asEnumerable().intersect(id2);\\r\\n\\r\\nfor (let id of both) {\\r\\n    console.log(id);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 26\\r\\n 30\\r\\n */\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和编号相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet store1 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 }\\r\\n];\\r\\nlet store2 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// 获取所有的在第一个数组从出现\\r\\n// 又在第二个数组中出现了的产品\\r\\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\\r\\n\\r\\nfor (let product of duplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果 9\\r\\n */\"\n};\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"0.1.js\": \"[1, 2, 3].join('|');\",\n\t\"1.1.js\": \"let xi = { name: \\\"习大大\\\" };\\r\\nlet wang = { name: \\\"王思聪\\\" };\\r\\nlet li = { name: \\\"李小龙\\\" };\\r\\n\\r\\nlet white = { name: \\\"小白\\\", owner: wang };\\r\\nlet boots = { name: \\\"机器人\\\", owner: wang };\\r\\nlet black = { name: \\\"黑蛋\\\", owner: li };\\r\\nlet cai = { name: \\\"旺财\\\", owner: xi };\\r\\n\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\n// 从主人序列与宠物序列及其关系中\\r\\n// 构建一个 主人-宠物 键值对的新序列\\r\\n// 新序列的每个元素包含宠物名称和宠物主人的姓名\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大 - 旺财\\r\\n 王思聪 - 小白\\r\\n 王思聪 - 机器人\\r\\n 李小龙 - 黑蛋\\r\\n */\"\n};\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet max = longs.asEnumerable().max();\\r\\n\\r\\nconsole.log(`最大的数字是${ max }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最大的数字是4294967296。\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\\r\\n\\r\\nconsole.log(`最大的年龄加名字长度是${ max }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最大的年龄加名字长度是10。\\r\\n */\"\n};\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet min = longs.asEnumerable().min();\\r\\n\\r\\nconsole.log(`最小的数字是${ min }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最小的数字是81125。\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet min = pets.asEnumerable().min(pet => pet.age);\\r\\n\\r\\nconsole.log(`年龄最小的宠物是${ min }岁。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄最小的宠物是1岁。\\r\\n */\"\n};\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1-2.1.19.js\": \"let fruits = [\\\"芒果\\\", \\\"橘子\\\", \\\"苹果\\\", 3.0, \\\"香蕉\\\"];\\r\\n\\r\\n// 对序列执行 ofType 方法\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"元素是 String 类型的有：\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains(\\\"果\\\", Enumerable.comparers.ignoreCase()));\\r\\n\\r\\nconsole.log(\\\"\\\\n下列字符串包含 “果”：\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 元素是 String 类型的有：\\r\\n// 芒果\\r\\n// 橘子\\r\\n// 苹果\\r\\n// 香蕉\\r\\n//\\r\\n// 下列字符串包含 “果”：\\r\\n// 芒果\\r\\n// 苹果\",\n\t\"1.js\": \"let fruits = [\\\"芒果\\\", \\\"橘子\\\", \\\"苹果\\\", 3.0, \\\"香蕉\\\"];\\r\\n\\r\\n// 对序列执行 ofType 方法\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"元素是 String 类型的有：\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains(\\\"果\\\"));\\r\\n\\r\\nconsole.log(\\\"\\\\n下列字符串包含 “果”：\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 元素是 String 类型的有：\\r\\n// 芒果\\r\\n// 橘子\\r\\n// 苹果\\r\\n// 香蕉\\r\\n//\\r\\n// 下列字符串包含 “果”：\\r\\n// 芒果\\r\\n// 苹果\"\n};\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(`${ pet.name } - ${ pet.age }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 旺财 - 1\\r\\n 机器人 - 4\\r\\n 小白 - 8\\r\\n*/\"\n};\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"const specialComparer = (d1, d2) => {\\r\\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\\r\\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\\r\\n    if (f1 === f2) {\\r\\n        return d1 - d2;\\r\\n    } else if (f1 > f2) {\\r\\n        return 1;\\r\\n    } else {\\r\\n        return -1;\\r\\n    }\\r\\n};\\r\\n\\r\\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\\r\\n\\r\\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\\r\\n\\r\\nfor (let num of query) {\\r\\n    console.log(num);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 9.7\\r\\n 0.5\\r\\n 8.3\\r\\n 6.3\\r\\n 1.3\\r\\n 6.2\\r\\n*/\"\n};\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let squares = Enumerable.range(1, 10).select(x => x * x);\\r\\n\\r\\nfor (let num of squares) {\\r\\n    console.log(num);\\r\\n}\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 1\\r\\n 4\\r\\n 9\\r\\n 16\\r\\n 25\\r\\n 36\\r\\n 49\\r\\n 64\\r\\n 81\\r\\n 100\\r\\n*/\",\n\t\"2.js\": \"let fruits = [ \\\"苹果\\\", \\\"海南香蕉\\\", \\\"芒果\\\", \\\"沙糖桔\\\", \\\"西番莲的果实\\\", \\\"长城干红葡萄酒\\\" ];\\r\\n\\r\\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n {\\\"index\\\":0,\\\"str\\\":\\\"\\\"}\\r\\n {\\\"index\\\":1,\\\"str\\\":\\\"海\\\"}\\r\\n {\\\"index\\\":2,\\\"str\\\":\\\"芒果\\\"}\\r\\n {\\\"index\\\":3,\\\"str\\\":\\\"沙糖桔\\\"}\\r\\n {\\\"index\\\":4,\\\"str\\\":\\\"西番莲的\\\"}\\r\\n {\\\"index\\\":5,\\\"str\\\":\\\"长城干红葡\\\"}\\r\\n*/\"\n};\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"旺财\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"花花\\\", \\\"狗带\\\" ] }\\r\\n];\\r\\n\\r\\n// 使用 selectMany() 查询。\\r\\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"使用 selectMany()：\\\");\\r\\n\\r\\n// 只需要一个循环来遍历这个结果序列，\\r\\n// 因为它已经是一个一维序列了。\\r\\nfor (let pet of query1) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// 下面的代码演示了如何使用 select()\\r\\n// 来代替 selectMany()。\\r\\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"\\\\n使用 select()：\\\");\\r\\n\\r\\n// 需要两层循环来遍历结果序列，\\r\\n// 因为它是一个元素为序列的序列。\\r\\nfor (let petList of query2) {\\r\\n    for (let pet of petList) {\\r\\n        console.log(pet);\\r\\n    }\\r\\n    console.log();\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 使用 selectMany()：:\\r\\n 小白\\r\\n 旺财\\r\\n 大黄\\r\\n 甜心\\r\\n 花花\\r\\n 狗带\\r\\n\\r\\n 使用 select()：:\\r\\n 小白\\r\\n 旺财\\r\\n\\r\\n 大黄\\r\\n 甜心\\r\\n\\r\\n 花花\\r\\n 狗带\\r\\n\\r\\n*/\",\n\t\"2.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"小石头\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"小甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"小花\\\", \\\"狗带\\\" ] },\\r\\n    { name: \\\"甄子丹\\\", pets: [ \\\"斑点\\\" ] }\\r\\n];\\r\\n\\r\\n// 使用宠物列表中的宠物名字\\r\\n// 追加在宠物主人的序号后的方式\\r\\n// 投影序列中的元素。\\r\\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\\r\\n        petOwner.pets.asEnumerable().select(pet => index + pet));\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 0小白\\r\\n// 0小石头\\r\\n// 1大黄\\r\\n// 1小甜心\\r\\n// 2小花\\r\\n// 2狗带\\r\\n// 3斑点\",\n\t\"3.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"小石头\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"小甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"小花\\\", \\\"狗带\\\" ] },\\r\\n    { name: \\\"甄子丹\\\", pets: [ \\\"斑点\\\" ] }\\r\\n];\\r\\n\\r\\n// 投影宠物主人的名称和宠物的名称。\\r\\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\\r\\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\\\"小\\\"))\\r\\n        .select(ownerAndPet => ({\\r\\n            owner: ownerAndPet.petOwner.name,\\r\\n            pet: ownerAndPet.petName\\r\\n        }));\\r\\n\\r\\n// 输出结果。\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// {\\\"owner\\\":\\\"李小龙\\\",\\\"pet\\\":\\\"小白\\\"}\\r\\n// {\\\"owner\\\":\\\"李小龙\\\",\\\"pet\\\":\\\"小石头\\\"}\\r\\n// {\\\"owner\\\":\\\"成龙\\\",\\\"pet\\\":\\\"小甜心\\\"}\\r\\n// {\\\"owner\\\":\\\"李连杰\\\",\\\"pet\\\":\\\"小花\\\"}\"\n};\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"config.as.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\",\n\t\"config.as.try.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\\r\\nconsole.log(enumerable);\",\n\t\"config.extends.js\": \"Enumerable.config.extends.array = true; //开启针对 Array 的扩展，使 Array 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（推荐开启）\\r\\nEnumerable.config.extends.string = true; //开启针对 String 的扩展，使 String 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）\\r\\nEnumerable.config.extends.object = true; //开启针对 Object 的扩展，使任何对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）\"\n};\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"asEnumerable.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nlet s = 'abc'.asEnumerable();\",\n\t\"asEnumerable.try.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nconsole.log(a);\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nconsole.log(o);\\r\\nlet s = 'abc'.asEnumerable();\\r\\nconsole.log(s);\",\n\t\"Enumerable.asEnumerable.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\",\n\t\"Enumerable.asEnumerable.try.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\\r\\nconsole.log(enumerable);\",\n\t\"Enumerable.js\": \"let enumerable = Enumerable([1, 2, 3]);\",\n\t\"Enumerable.try.js\": \"let enumerable = Enumerable([1, 2, 3]);\\r\\nconsole.log(enumerable);\"\n};\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"小黑\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"旺财\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\npets.asEnumerable().select(\\\"name\\\");\\r\\n//上述代码等价于以下代码\\r\\npets.asEnumerable().select(pet => pet.name);\",\n\t\"1.try.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"小黑\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"旺财\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\nconsole.log(pets.asEnumerable().select(\\\"name\\\"));\\r\\n//上述代码等价于以下代码\\r\\nconsole.log(pets.asEnumerable().select(pet => pet.name));\\r\\n\",\n\t\"2.js\": \"let arrays = [\\r\\n    [ 1, 2, 4, 8 ],\\r\\n    [ 1, 3, 9 ],\\r\\n    [ 1, 5 ]\\r\\n];\\r\\n\\r\\narrays.asEnumerable().select(1);\\r\\n//上述代码等价于以下代码\\r\\narrays.asEnumerable().select(array => array[1]);\"\n};\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"1.js\": \"let pets = [ { name: \\\"小白\\\", age: 8, vaccinated: true }, { name: \\\"大黄\\\", age: 4, vaccinated: false }, { name: \\\"旺财\\\", age: 1, vaccinated: false } ];\\r\\n\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`${ unvaccinated ? \\\"有\\\" : \\\"没有\\\" }超过一岁未接种疫苗的动物。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  有超过一岁未接种疫苗的动物。\",\n\t\"2.js\": \"let xi = { name: \\\"习大大\\\" }, wang = { name: \\\"王思聪\\\" }, li = { name: \\\"李小龙\\\" };\\r\\nlet white = { name: \\\"小白\\\", owner: wang }, boots = { name: \\\"机器人\\\", owner: wang }, black = { name: \\\"黑蛋\\\", owner: li }, cai = { name: \\\"旺财\\\", owner: xi };\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大 - 旺财\\r\\n 王思聪 - 小白\\r\\n 王思聪 - 机器人\\r\\n 李小龙 - 黑蛋\\r\\n */\"\n};\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"执行器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是执行器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"执行器是一个仅对输入值执行一系列计算的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"通常一个执行器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 执行一系列计算, 但无需返回任何数值\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"比较器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"比较器是一个反映两个输入值之间关系的函数\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"大小比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"大小比较器是一个反映两个输入值之间大小关系的比较器\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"相等比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"相等比较器是一个反映两个输入值是否相等的比较器\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"配置\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"配置获取 IEnumerable 对象的方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"默认的获取 IEnumerable 对象的方法名为 asEnumerable, 通过 config.as 属性可以修改此方法名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"config.as.js\",\n\t\t\t\t\t\t\"tryHref\": \"config.as.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"warning\",\n\t\t\t\t\t\"content\": \"修改后 asEnumerable 方法依然有效\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"配置内置对象的扩展\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"使用如下方式可以对javascript中原生的对象进行扩展\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"config.extends.js\",\n\t\t\t\t\t\t\"notTry\": true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"枚举器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是枚举器\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"扩展\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"为什么需要扩展\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"扩展对象\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"获取 IEnumerable 实例\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"通过 Enumerable 构造方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"可以通过 Enumerable 类的构造方法获取一个 IEnumerable 对象\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"Enumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"Enumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\"constructor\": true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"通过 Enumerable.asEnumerable 方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"Enumerable.asEnumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"Enumerable.asEnumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"通过 asEnumerable 方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"引入linq-js后, 任何对象都包含一个 asEnumerable 方法, 可以直接获取一个 IEnumerable 对象\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"asEnumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"asEnumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"迭代器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是迭代器\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"ES6中的迭代器\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"迭代器的 asEnumerable 方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"迭代器也存在 asEnumerable 方法, 同样返回一个 IEnumerable 对象. 由于遍历器的特殊性, 通过遍历器的 asEnumerable 方法获得的 IEnumerable 对象的元素只能被迭代一次, 或者其延迟执行的方法只能被执行一次\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"插件\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是插件\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"添加插件\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"移除插件\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"筛选器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是筛选器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"筛选器是一个判断输入参数是否满足条件的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"通常一个筛选器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 返回一个 boolean 值表示该参数或与其索引是否满足指定的条件\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"选择器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"选择器是一个将输入值映射到一个输出值的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"该函数接受一个或多个输入值, 有些情况下还接受输入值所在序列中的索引作为参数, 经过一系列自定义的运算, 最终返回一个对应的值, 返回值通常用来组成新的序列或进行其他运算\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"一元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"二元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"first\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"second\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"使用字符串/数字/符号代替一元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"可以使用字符串、数字或符号代替一元选择器，以下实例展示字符串或数字代替的一元选择器与一元选择器的等级关系\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"1.js\",\n\t\t\t\t\t\t\"tryHref\": \"1.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"2.js\",\n\t\t\t\t\t\t\"notTry\": true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"warning\",\n\t\t\t\t\t\"content\": \"自 2.1.19 版本后才开始接受数字/符号参数\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"title\": \"开始使用\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"可以使用 LINQ 中的一些方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"获取到 IEnumerable 对象后既可以使用 LINQ 中提供的一些方法\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"remark\",\n\t\t\t\t\t\"content\": \"以下例子中展示了一些常用的 LINQ 功能\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"IEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"可以使用原生 Array 的一些方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"获取到 IEnumerable 对象后除了可以使用 LINQ 提供的一些方法的同时还可以使用原生 Array 提供的一些方法\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"IEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"icon\": \"\",\n\t\"code\": \"install\",\n\t\"title\": \"安装\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"code\": \"addIn\",\n\t\t\t\"title\": \"添加至项目\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"runtime\": \"Node JS\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"bash\",\n\t\t\t\t\t\t\t\"script\": \"$ npm install --save linq-js\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"runtime\": \"Bower\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"bash\",\n\t\t\t\t\t\t\t\"script\": \"$ bower install js-linq\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"code\": \"require\",\n\t\t\t\"title\": \"引入\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\"script\": \"const Enumerable = require('linq-js');\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"说明:本module依赖于ES6,建议项目在中使用ES6,以下案例中将均使用ES6写法\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"code\": \"introduction\",\n\t\"title\": \"简介\",\n\t\"shields\": [\n\t\t{\n\t\t\t\"href\": \"https://github.com/wm123450405/linqjs\",\n\t\t\t\"image\": \"https://img.shields.io/github/release/wm123450405/linqjs.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\",\n\t\t\t\"image\": \"https://img.shields.io/npm/v/linq-js.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\",\n\t\t\t\"image\": \"https://img.shields.io/npm/dm/linq-js.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://travis-ci.org/wm123450405/linqjs\",\n\t\t\t\"image\": \"https://img.shields.io/travis/wm123450405/linqjs.svg\"\n\t\t}\n\t],\n\t\"contents\": [\n\t\t\"在javascript(ES6标准)中使用linq与lambda\",\n\t\t\"&nbsp;\",\n\t\t\"在1.0.0中使用了字符串的lambda表达式,过于繁琐,并且不支持延迟操作\",\n\t\t\"从2.1.0开始整体代码重新编写,使用全新的ES6的特性,性能更好,同时对数据的操作是延时操作,占用更少\",\n\t\t\"&nbsp;\",\n\t\t\"穷人,求捐赠: <a href=\\\"http://git.oschina.net/wm123450405/linqjs\\\">http://git.oschina.net/wm123450405/linqjs</a>\"\n\t]\n};\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"中文版\"\n};\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// 0.js","var map = {\n\t\"./en-us/apis/Enumerable.json\": 64,\n\t\"./en-us/apis/Enumerable/meta.json\": 65,\n\t\"./en-us/apis/Enumerable/methods/asEnumerable.json\": 66,\n\t\"./en-us/apis/Enumerable/methods/empty.json\": 67,\n\t\"./en-us/apis/Enumerable/properties/actions.json\": 68,\n\t\"./en-us/apis/Enumerable/properties/comparers.json\": 69,\n\t\"./en-us/apis/Enumerable/properties/config.json\": 70,\n\t\"./en-us/apis/Enumerable/properties/predicates.json\": 71,\n\t\"./en-us/apis/Enumerable/properties/selectors.json\": 72,\n\t\"./en-us/caption.json\": 73,\n\t\"./en-us/change.json\": 74,\n\t\"./en-us/directory.json\": 75,\n\t\"./en-us/directory.meta.json\": 76,\n\t\"./en-us/examples/IEnumerable.json\": 77,\n\t\"./en-us/examples/IEnumerable/methods/aggregate.json\": 78,\n\t\"./en-us/examples/IEnumerable/methods/all.json\": 79,\n\t\"./en-us/examples/IEnumerable/methods/any.json\": 80,\n\t\"./en-us/examples/IEnumerable/methods/average.json\": 81,\n\t\"./en-us/examples/IEnumerable/methods/concat.json\": 82,\n\t\"./en-us/examples/IEnumerable/methods/contains.json\": 83,\n\t\"./en-us/examples/IEnumerable/methods/count.json\": 84,\n\t\"./en-us/examples/IEnumerable/methods/defaultIfEmpty.json\": 85,\n\t\"./en-us/examples/IEnumerable/methods/distinct.json\": 86,\n\t\"./en-us/examples/IEnumerable/methods/elementAt.json\": 87,\n\t\"./en-us/examples/IEnumerable/methods/elementAtOrDefault.json\": 88,\n\t\"./en-us/examples/IEnumerable/methods/except.json\": 89,\n\t\"./en-us/examples/IEnumerable/methods/first.json\": 90,\n\t\"./en-us/examples/IEnumerable/methods/firstOrDefault.json\": 91,\n\t\"./en-us/examples/IEnumerable/methods/groupBy.json\": 92,\n\t\"./en-us/examples/IEnumerable/methods/groupJoin.json\": 93,\n\t\"./en-us/examples/IEnumerable/methods/intersect.json\": 94,\n\t\"./en-us/examples/IEnumerable/methods/join.json\": 95,\n\t\"./en-us/examples/IEnumerable/methods/max.json\": 96,\n\t\"./en-us/examples/IEnumerable/methods/min.json\": 97,\n\t\"./en-us/examples/IEnumerable/methods/ofType.json\": 98,\n\t\"./en-us/examples/IEnumerable/methods/orderBy.json\": 99,\n\t\"./en-us/examples/IEnumerable/methods/orderByDescending.json\": 100,\n\t\"./en-us/examples/IEnumerable/methods/select.json\": 101,\n\t\"./en-us/examples/IEnumerable/methods/selectMany.json\": 102,\n\t\"./en-us/examples/config.json\": 103,\n\t\"./en-us/examples/instance.json\": 104,\n\t\"./en-us/examples/selector.json\": 105,\n\t\"./en-us/examples/use.json\": 106,\n\t\"./en-us/guides/action.json\": 107,\n\t\"./en-us/guides/comparer.json\": 108,\n\t\"./en-us/guides/config.json\": 109,\n\t\"./en-us/guides/instance.json\": 110,\n\t\"./en-us/guides/predicate.json\": 111,\n\t\"./en-us/guides/selector.json\": 112,\n\t\"./en-us/guides/use.json\": 113,\n\t\"./en-us/install.json\": 114,\n\t\"./en-us/introduction.json\": 115,\n\t\"./en-us/meta.json\": 116,\n\t\"./lang.json\": 14,\n\t\"./versions.json\": 15,\n\t\"./zh-cn/about.json\": 117,\n\t\"./zh-cn/apis/Directory.json\": 118,\n\t\"./zh-cn/apis/Directory/meta.json\": 119,\n\t\"./zh-cn/apis/Directory/methods/delete.json\": 120,\n\t\"./zh-cn/apis/Directory/methods/get.json\": 121,\n\t\"./zh-cn/apis/Directory/methods/has.json\": 122,\n\t\"./zh-cn/apis/Directory/methods/set.json\": 123,\n\t\"./zh-cn/apis/Entry.json\": 124,\n\t\"./zh-cn/apis/Entry/meta.json\": 125,\n\t\"./zh-cn/apis/Entry/properties/key.json\": 126,\n\t\"./zh-cn/apis/Entry/properties/value.json\": 127,\n\t\"./zh-cn/apis/Enumerable.actions.json\": 128,\n\t\"./zh-cn/apis/Enumerable.actions/meta.json\": 129,\n\t\"./zh-cn/apis/Enumerable.actions/properties/default.json\": 130,\n\t\"./zh-cn/apis/Enumerable.comparers.json\": 131,\n\t\"./zh-cn/apis/Enumerable.comparers/meta.json\": 132,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/array.json\": 133,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/greater.json\": 134,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json\": 135,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/less.json\": 136,\n\t\"./zh-cn/apis/Enumerable.comparers/methods/predicate.json\": 137,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/default.json\": 138,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/equality.json\": 139,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/same.json\": 140,\n\t\"./zh-cn/apis/Enumerable.comparers/properties/strict.json\": 141,\n\t\"./zh-cn/apis/Enumerable.config.json\": 142,\n\t\"./zh-cn/apis/Enumerable.config/meta.json\": 143,\n\t\"./zh-cn/apis/Enumerable.config/properties/as.json\": 144,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.array.json\": 145,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.lazy.json\": 146,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.object.json\": 147,\n\t\"./zh-cn/apis/Enumerable.config/properties/extends.string.json\": 148,\n\t\"./zh-cn/apis/Enumerable.json\": 149,\n\t\"./zh-cn/apis/Enumerable.predicates.json\": 150,\n\t\"./zh-cn/apis/Enumerable.predicates/meta.json\": 151,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/equality.json\": 152,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/not.json\": 153,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/properties.json\": 154,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/regexp.json\": 155,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/same.json\": 156,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/selector.json\": 157,\n\t\"./zh-cn/apis/Enumerable.predicates/methods/strict.json\": 158,\n\t\"./zh-cn/apis/Enumerable.predicates/properties/default.json\": 159,\n\t\"./zh-cn/apis/Enumerable.predicates/properties/exists.json\": 160,\n\t\"./zh-cn/apis/Enumerable.selectors.json\": 161,\n\t\"./zh-cn/apis/Enumerable.selectors/meta.json\": 162,\n\t\"./zh-cn/apis/Enumerable.selectors/methods/property.json\": 163,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/children.json\": 164,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/default.json\": 165,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/join.json\": 166,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/key.json\": 167,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/parent.json\": 168,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/result.json\": 169,\n\t\"./zh-cn/apis/Enumerable.selectors/properties/value.json\": 170,\n\t\"./zh-cn/apis/Enumerable/meta.json\": 171,\n\t\"./zh-cn/apis/Enumerable/methods/asEnumerable.json\": 172,\n\t\"./zh-cn/apis/Enumerable/methods/between.json\": 173,\n\t\"./zh-cn/apis/Enumerable/methods/empty.json\": 174,\n\t\"./zh-cn/apis/Enumerable/methods/from.json\": 175,\n\t\"./zh-cn/apis/Enumerable/methods/generate.json\": 176,\n\t\"./zh-cn/apis/Enumerable/methods/noConflict.json\": 177,\n\t\"./zh-cn/apis/Enumerable/methods/range.json\": 178,\n\t\"./zh-cn/apis/Enumerable/methods/repeat.json\": 179,\n\t\"./zh-cn/apis/Enumerable/properties/actions.json\": 180,\n\t\"./zh-cn/apis/Enumerable/properties/comparers.json\": 181,\n\t\"./zh-cn/apis/Enumerable/properties/config.json\": 182,\n\t\"./zh-cn/apis/Enumerable/properties/predicates.json\": 183,\n\t\"./zh-cn/apis/Enumerable/properties/selectors.json\": 184,\n\t\"./zh-cn/apis/IChunk.json\": 185,\n\t\"./zh-cn/apis/IChunk/meta.json\": 186,\n\t\"./zh-cn/apis/IChunk/properties/index.json\": 187,\n\t\"./zh-cn/apis/IEnumerable.json\": 188,\n\t\"./zh-cn/apis/IEnumerable/meta.json\": 189,\n\t\"./zh-cn/apis/IEnumerable/methods/aggregate.json\": 190,\n\t\"./zh-cn/apis/IEnumerable/methods/all.json\": 191,\n\t\"./zh-cn/apis/IEnumerable/methods/any.json\": 192,\n\t\"./zh-cn/apis/IEnumerable/methods/asEnumerable.json\": 193,\n\t\"./zh-cn/apis/IEnumerable/methods/average.json\": 194,\n\t\"./zh-cn/apis/IEnumerable/methods/chunk.json\": 195,\n\t\"./zh-cn/apis/IEnumerable/methods/combine.json\": 196,\n\t\"./zh-cn/apis/IEnumerable/methods/concat.json\": 197,\n\t\"./zh-cn/apis/IEnumerable/methods/contains.json\": 198,\n\t\"./zh-cn/apis/IEnumerable/methods/copyWithin.json\": 199,\n\t\"./zh-cn/apis/IEnumerable/methods/count.json\": 200,\n\t\"./zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json\": 201,\n\t\"./zh-cn/apis/IEnumerable/methods/distinct.json\": 202,\n\t\"./zh-cn/apis/IEnumerable/methods/elementAt.json\": 203,\n\t\"./zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json\": 204,\n\t\"./zh-cn/apis/IEnumerable/methods/every.json\": 205,\n\t\"./zh-cn/apis/IEnumerable/methods/except.json\": 206,\n\t\"./zh-cn/apis/IEnumerable/methods/fill.json\": 207,\n\t\"./zh-cn/apis/IEnumerable/methods/filter.json\": 208,\n\t\"./zh-cn/apis/IEnumerable/methods/find.json\": 209,\n\t\"./zh-cn/apis/IEnumerable/methods/findIndex.json\": 210,\n\t\"./zh-cn/apis/IEnumerable/methods/findLast.json\": 211,\n\t\"./zh-cn/apis/IEnumerable/methods/findLastIndex.json\": 212,\n\t\"./zh-cn/apis/IEnumerable/methods/first.json\": 213,\n\t\"./zh-cn/apis/IEnumerable/methods/firstOrDefault.json\": 214,\n\t\"./zh-cn/apis/IEnumerable/methods/forEach.json\": 215,\n\t\"./zh-cn/apis/IEnumerable/methods/getEnumerator.json\": 216,\n\t\"./zh-cn/apis/IEnumerable/methods/groupBy.json\": 217,\n\t\"./zh-cn/apis/IEnumerable/methods/groupJoin.json\": 218,\n\t\"./zh-cn/apis/IEnumerable/methods/includes.json\": 219,\n\t\"./zh-cn/apis/IEnumerable/methods/indexOf.json\": 220,\n\t\"./zh-cn/apis/IEnumerable/methods/innerJoin.json\": 221,\n\t\"./zh-cn/apis/IEnumerable/methods/intersect.json\": 222,\n\t\"./zh-cn/apis/IEnumerable/methods/join.json\": 223,\n\t\"./zh-cn/apis/IEnumerable/methods/last.json\": 224,\n\t\"./zh-cn/apis/IEnumerable/methods/lastIndexOf.json\": 225,\n\t\"./zh-cn/apis/IEnumerable/methods/lastOrDefault.json\": 226,\n\t\"./zh-cn/apis/IEnumerable/methods/leftJoin.json\": 227,\n\t\"./zh-cn/apis/IEnumerable/methods/leftPad.json\": 228,\n\t\"./zh-cn/apis/IEnumerable/methods/map.json\": 229,\n\t\"./zh-cn/apis/IEnumerable/methods/max.json\": 230,\n\t\"./zh-cn/apis/IEnumerable/methods/min.json\": 231,\n\t\"./zh-cn/apis/IEnumerable/methods/nearBy.json\": 232,\n\t\"./zh-cn/apis/IEnumerable/methods/ofType.json\": 233,\n\t\"./zh-cn/apis/IEnumerable/methods/orderBy.json\": 234,\n\t\"./zh-cn/apis/IEnumerable/methods/orderByDescending.json\": 235,\n\t\"./zh-cn/apis/IEnumerable/methods/pop.json\": 236,\n\t\"./zh-cn/apis/IEnumerable/methods/product.json\": 237,\n\t\"./zh-cn/apis/IEnumerable/methods/push.json\": 238,\n\t\"./zh-cn/apis/IEnumerable/methods/rand.json\": 239,\n\t\"./zh-cn/apis/IEnumerable/methods/random.json\": 240,\n\t\"./zh-cn/apis/IEnumerable/methods/randomOrDefault.json\": 241,\n\t\"./zh-cn/apis/IEnumerable/methods/reduce.json\": 242,\n\t\"./zh-cn/apis/IEnumerable/methods/reduceRight.json\": 243,\n\t\"./zh-cn/apis/IEnumerable/methods/reverse.json\": 244,\n\t\"./zh-cn/apis/IEnumerable/methods/rightJoin.json\": 245,\n\t\"./zh-cn/apis/IEnumerable/methods/rightPad.json\": 246,\n\t\"./zh-cn/apis/IEnumerable/methods/select.json\": 247,\n\t\"./zh-cn/apis/IEnumerable/methods/selectMany.json\": 248,\n\t\"./zh-cn/apis/IEnumerable/methods/separate.json\": 249,\n\t\"./zh-cn/apis/IEnumerable/methods/sequenceEqual.json\": 250,\n\t\"./zh-cn/apis/IEnumerable/methods/shift.json\": 251,\n\t\"./zh-cn/apis/IEnumerable/methods/single.json\": 252,\n\t\"./zh-cn/apis/IEnumerable/methods/singleOrDefault.json\": 253,\n\t\"./zh-cn/apis/IEnumerable/methods/skip.json\": 254,\n\t\"./zh-cn/apis/IEnumerable/methods/skipWhile.json\": 255,\n\t\"./zh-cn/apis/IEnumerable/methods/slice.json\": 256,\n\t\"./zh-cn/apis/IEnumerable/methods/some.json\": 257,\n\t\"./zh-cn/apis/IEnumerable/methods/sort.json\": 258,\n\t\"./zh-cn/apis/IEnumerable/methods/splice.json\": 259,\n\t\"./zh-cn/apis/IEnumerable/methods/sum.json\": 260,\n\t\"./zh-cn/apis/IEnumerable/methods/take.json\": 261,\n\t\"./zh-cn/apis/IEnumerable/methods/takeWhile.json\": 262,\n\t\"./zh-cn/apis/IEnumerable/methods/toArray.json\": 263,\n\t\"./zh-cn/apis/IEnumerable/methods/toDirectory.json\": 264,\n\t\"./zh-cn/apis/IEnumerable/methods/toLookup.json\": 265,\n\t\"./zh-cn/apis/IEnumerable/methods/toObject.json\": 266,\n\t\"./zh-cn/apis/IEnumerable/methods/union.json\": 267,\n\t\"./zh-cn/apis/IEnumerable/methods/unshift.json\": 268,\n\t\"./zh-cn/apis/IEnumerable/methods/where.json\": 269,\n\t\"./zh-cn/apis/IEnumerable/methods/wipe.json\": 270,\n\t\"./zh-cn/apis/IEnumerable/methods/zip.json\": 271,\n\t\"./zh-cn/apis/IEnumerable/properties/length.json\": 272,\n\t\"./zh-cn/apis/IEnumerable/properties/size.json\": 273,\n\t\"./zh-cn/apis/IEnumerator.json\": 274,\n\t\"./zh-cn/apis/IEnumerator/meta.json\": 275,\n\t\"./zh-cn/apis/IEnumerator/methods/moveNext.json\": 276,\n\t\"./zh-cn/apis/IEnumerator/methods/reset.json\": 277,\n\t\"./zh-cn/apis/IEnumerator/properties/current.json\": 278,\n\t\"./zh-cn/apis/IGrouping.json\": 279,\n\t\"./zh-cn/apis/IGrouping/meta.json\": 280,\n\t\"./zh-cn/apis/IGrouping/properties/key.json\": 281,\n\t\"./zh-cn/apis/IMapEnumerable.json\": 282,\n\t\"./zh-cn/apis/IMapEnumerable/meta.json\": 283,\n\t\"./zh-cn/apis/IMapEnumerable/methods/forEach.json\": 284,\n\t\"./zh-cn/apis/IMapEnumerable/methods/toDirectory.json\": 285,\n\t\"./zh-cn/apis/IMapEnumerable/methods/toLookup.json\": 286,\n\t\"./zh-cn/apis/IOrderedEnumerable.json\": 287,\n\t\"./zh-cn/apis/IOrderedEnumerable/meta.json\": 288,\n\t\"./zh-cn/apis/IOrderedEnumerable/methods/thenBy.json\": 289,\n\t\"./zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json\": 290,\n\t\"./zh-cn/apis/Lookup.json\": 291,\n\t\"./zh-cn/apis/Lookup/meta.json\": 292,\n\t\"./zh-cn/apis/Lookup/methods/get.json\": 293,\n\t\"./zh-cn/apis/Lookup/methods/set.json\": 294,\n\t\"./zh-cn/apis/Plugin.json\": 295,\n\t\"./zh-cn/apis/Plugin/meta.json\": 296,\n\t\"./zh-cn/caption.json\": 297,\n\t\"./zh-cn/change.json\": 298,\n\t\"./zh-cn/change/2.1.15.json\": 299,\n\t\"./zh-cn/change/2.1.16.json\": 300,\n\t\"./zh-cn/change/2.1.17.json\": 301,\n\t\"./zh-cn/change/2.1.18.json\": 302,\n\t\"./zh-cn/change/2.1.19.json\": 303,\n\t\"./zh-cn/change/2.1.20.pre.json\": 304,\n\t\"./zh-cn/directory.json\": 305,\n\t\"./zh-cn/directory.meta.json\": 306,\n\t\"./zh-cn/examples/IEnumerable.json\": 307,\n\t\"./zh-cn/examples/IEnumerable/methods/aggregate.json\": 308,\n\t\"./zh-cn/examples/IEnumerable/methods/all.json\": 309,\n\t\"./zh-cn/examples/IEnumerable/methods/any.json\": 310,\n\t\"./zh-cn/examples/IEnumerable/methods/asEnumerable.json\": 311,\n\t\"./zh-cn/examples/IEnumerable/methods/average.json\": 312,\n\t\"./zh-cn/examples/IEnumerable/methods/chunk.json\": 313,\n\t\"./zh-cn/examples/IEnumerable/methods/concat.json\": 314,\n\t\"./zh-cn/examples/IEnumerable/methods/contains.json\": 315,\n\t\"./zh-cn/examples/IEnumerable/methods/copyWithin.json\": 316,\n\t\"./zh-cn/examples/IEnumerable/methods/count.json\": 317,\n\t\"./zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json\": 318,\n\t\"./zh-cn/examples/IEnumerable/methods/distinct.json\": 319,\n\t\"./zh-cn/examples/IEnumerable/methods/elementAt.json\": 320,\n\t\"./zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json\": 321,\n\t\"./zh-cn/examples/IEnumerable/methods/every.json\": 322,\n\t\"./zh-cn/examples/IEnumerable/methods/except.json\": 323,\n\t\"./zh-cn/examples/IEnumerable/methods/fill.json\": 324,\n\t\"./zh-cn/examples/IEnumerable/methods/filter.json\": 325,\n\t\"./zh-cn/examples/IEnumerable/methods/find.json\": 326,\n\t\"./zh-cn/examples/IEnumerable/methods/findIndex.json\": 327,\n\t\"./zh-cn/examples/IEnumerable/methods/findLast.json\": 328,\n\t\"./zh-cn/examples/IEnumerable/methods/findLastIndex.json\": 329,\n\t\"./zh-cn/examples/IEnumerable/methods/first.json\": 330,\n\t\"./zh-cn/examples/IEnumerable/methods/firstOrDefault.json\": 331,\n\t\"./zh-cn/examples/IEnumerable/methods/forEach.json\": 332,\n\t\"./zh-cn/examples/IEnumerable/methods/getEnumerator.json\": 333,\n\t\"./zh-cn/examples/IEnumerable/methods/groupBy.json\": 334,\n\t\"./zh-cn/examples/IEnumerable/methods/groupJoin.json\": 335,\n\t\"./zh-cn/examples/IEnumerable/methods/includes.json\": 336,\n\t\"./zh-cn/examples/IEnumerable/methods/indexOf.json\": 337,\n\t\"./zh-cn/examples/IEnumerable/methods/intersect.json\": 338,\n\t\"./zh-cn/examples/IEnumerable/methods/join.json\": 339,\n\t\"./zh-cn/examples/IEnumerable/methods/last.json\": 340,\n\t\"./zh-cn/examples/IEnumerable/methods/lastIndexOf.json\": 341,\n\t\"./zh-cn/examples/IEnumerable/methods/lastOrDefault.json\": 342,\n\t\"./zh-cn/examples/IEnumerable/methods/map.json\": 343,\n\t\"./zh-cn/examples/IEnumerable/methods/max.json\": 344,\n\t\"./zh-cn/examples/IEnumerable/methods/min.json\": 345,\n\t\"./zh-cn/examples/IEnumerable/methods/ofType.json\": 346,\n\t\"./zh-cn/examples/IEnumerable/methods/orderBy.json\": 347,\n\t\"./zh-cn/examples/IEnumerable/methods/orderByDescending.json\": 348,\n\t\"./zh-cn/examples/IEnumerable/methods/pop.json\": 349,\n\t\"./zh-cn/examples/IEnumerable/methods/product.json\": 350,\n\t\"./zh-cn/examples/IEnumerable/methods/push.json\": 351,\n\t\"./zh-cn/examples/IEnumerable/methods/rand.json\": 352,\n\t\"./zh-cn/examples/IEnumerable/methods/reduce.json\": 353,\n\t\"./zh-cn/examples/IEnumerable/methods/reduceRight.json\": 354,\n\t\"./zh-cn/examples/IEnumerable/methods/reserver.json\": 355,\n\t\"./zh-cn/examples/IEnumerable/methods/reverse.json\": 356,\n\t\"./zh-cn/examples/IEnumerable/methods/rightJoin.json\": 357,\n\t\"./zh-cn/examples/IEnumerable/methods/rightPad.json\": 358,\n\t\"./zh-cn/examples/IEnumerable/methods/select.json\": 359,\n\t\"./zh-cn/examples/IEnumerable/methods/selectMany.json\": 360,\n\t\"./zh-cn/examples/config.json\": 361,\n\t\"./zh-cn/examples/instance.json\": 362,\n\t\"./zh-cn/examples/selector.json\": 363,\n\t\"./zh-cn/examples/use.json\": 364,\n\t\"./zh-cn/guides/action.json\": 365,\n\t\"./zh-cn/guides/comparer.json\": 366,\n\t\"./zh-cn/guides/config.json\": 367,\n\t\"./zh-cn/guides/enumerator.json\": 368,\n\t\"./zh-cn/guides/extend.json\": 369,\n\t\"./zh-cn/guides/instance.json\": 370,\n\t\"./zh-cn/guides/iterator.json\": 371,\n\t\"./zh-cn/guides/plugin.json\": 372,\n\t\"./zh-cn/guides/predicate.json\": 373,\n\t\"./zh-cn/guides/selector.json\": 374,\n\t\"./zh-cn/guides/use.json\": 375,\n\t\"./zh-cn/install.json\": 376,\n\t\"./zh-cn/introduction.json\": 377,\n\t\"./zh-cn/meta.json\": 378\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources ^\\.\\/.*\\.json$\n// module id = 18\n// module chunks = 0","var map = {\n\t\"./resources/en-us/apis/Enumerable.json\": 64,\n\t\"./resources/en-us/apis/Enumerable/meta.json\": 65,\n\t\"./resources/en-us/apis/Enumerable/methods/asEnumerable.json\": 66,\n\t\"./resources/en-us/apis/Enumerable/methods/empty.json\": 67,\n\t\"./resources/en-us/apis/Enumerable/properties/actions.json\": 68,\n\t\"./resources/en-us/apis/Enumerable/properties/comparers.json\": 69,\n\t\"./resources/en-us/apis/Enumerable/properties/config.json\": 70,\n\t\"./resources/en-us/apis/Enumerable/properties/predicates.json\": 71,\n\t\"./resources/en-us/apis/Enumerable/properties/selectors.json\": 72,\n\t\"./resources/en-us/caption.json\": 73,\n\t\"./resources/en-us/change.json\": 74,\n\t\"./resources/en-us/directory.json\": 75,\n\t\"./resources/en-us/directory.meta.json\": 76,\n\t\"./resources/en-us/examples/IEnumerable.json\": 77,\n\t\"./resources/en-us/examples/IEnumerable/methods/aggregate.json\": 78,\n\t\"./resources/en-us/examples/IEnumerable/methods/all.json\": 79,\n\t\"./resources/en-us/examples/IEnumerable/methods/any.json\": 80,\n\t\"./resources/en-us/examples/IEnumerable/methods/average.json\": 81,\n\t\"./resources/en-us/examples/IEnumerable/methods/concat.json\": 82,\n\t\"./resources/en-us/examples/IEnumerable/methods/contains.json\": 83,\n\t\"./resources/en-us/examples/IEnumerable/methods/count.json\": 84,\n\t\"./resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json\": 85,\n\t\"./resources/en-us/examples/IEnumerable/methods/distinct.json\": 86,\n\t\"./resources/en-us/examples/IEnumerable/methods/elementAt.json\": 87,\n\t\"./resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json\": 88,\n\t\"./resources/en-us/examples/IEnumerable/methods/except.json\": 89,\n\t\"./resources/en-us/examples/IEnumerable/methods/first.json\": 90,\n\t\"./resources/en-us/examples/IEnumerable/methods/firstOrDefault.json\": 91,\n\t\"./resources/en-us/examples/IEnumerable/methods/groupBy.json\": 92,\n\t\"./resources/en-us/examples/IEnumerable/methods/groupJoin.json\": 93,\n\t\"./resources/en-us/examples/IEnumerable/methods/intersect.json\": 94,\n\t\"./resources/en-us/examples/IEnumerable/methods/join.json\": 95,\n\t\"./resources/en-us/examples/IEnumerable/methods/max.json\": 96,\n\t\"./resources/en-us/examples/IEnumerable/methods/min.json\": 97,\n\t\"./resources/en-us/examples/IEnumerable/methods/ofType.json\": 98,\n\t\"./resources/en-us/examples/IEnumerable/methods/orderBy.json\": 99,\n\t\"./resources/en-us/examples/IEnumerable/methods/orderByDescending.json\": 100,\n\t\"./resources/en-us/examples/IEnumerable/methods/select.json\": 101,\n\t\"./resources/en-us/examples/IEnumerable/methods/selectMany.json\": 102,\n\t\"./resources/en-us/examples/config.json\": 103,\n\t\"./resources/en-us/examples/instance.json\": 104,\n\t\"./resources/en-us/examples/selector.json\": 105,\n\t\"./resources/en-us/examples/use.json\": 106,\n\t\"./resources/en-us/guides/action.json\": 107,\n\t\"./resources/en-us/guides/comparer.json\": 108,\n\t\"./resources/en-us/guides/config.json\": 109,\n\t\"./resources/en-us/guides/instance.json\": 110,\n\t\"./resources/en-us/guides/predicate.json\": 111,\n\t\"./resources/en-us/guides/selector.json\": 112,\n\t\"./resources/en-us/guides/use.json\": 113,\n\t\"./resources/en-us/install.json\": 114,\n\t\"./resources/en-us/introduction.json\": 115,\n\t\"./resources/en-us/meta.json\": 116,\n\t\"./resources/lang.json\": 14,\n\t\"./resources/versions.json\": 15,\n\t\"./resources/zh-cn/about.json\": 117,\n\t\"./resources/zh-cn/apis/Directory.json\": 118,\n\t\"./resources/zh-cn/apis/Directory/meta.json\": 119,\n\t\"./resources/zh-cn/apis/Directory/methods/delete.json\": 120,\n\t\"./resources/zh-cn/apis/Directory/methods/get.json\": 121,\n\t\"./resources/zh-cn/apis/Directory/methods/has.json\": 122,\n\t\"./resources/zh-cn/apis/Directory/methods/set.json\": 123,\n\t\"./resources/zh-cn/apis/Entry.json\": 124,\n\t\"./resources/zh-cn/apis/Entry/meta.json\": 125,\n\t\"./resources/zh-cn/apis/Entry/properties/key.json\": 126,\n\t\"./resources/zh-cn/apis/Entry/properties/value.json\": 127,\n\t\"./resources/zh-cn/apis/Enumerable.actions.json\": 128,\n\t\"./resources/zh-cn/apis/Enumerable.actions/meta.json\": 129,\n\t\"./resources/zh-cn/apis/Enumerable.actions/properties/default.json\": 130,\n\t\"./resources/zh-cn/apis/Enumerable.comparers.json\": 131,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/meta.json\": 132,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/array.json\": 133,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/greater.json\": 134,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json\": 135,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/less.json\": 136,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json\": 137,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/default.json\": 138,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/equality.json\": 139,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/same.json\": 140,\n\t\"./resources/zh-cn/apis/Enumerable.comparers/properties/strict.json\": 141,\n\t\"./resources/zh-cn/apis/Enumerable.config.json\": 142,\n\t\"./resources/zh-cn/apis/Enumerable.config/meta.json\": 143,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/as.json\": 144,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.array.json\": 145,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json\": 146,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.object.json\": 147,\n\t\"./resources/zh-cn/apis/Enumerable.config/properties/extends.string.json\": 148,\n\t\"./resources/zh-cn/apis/Enumerable.json\": 149,\n\t\"./resources/zh-cn/apis/Enumerable.predicates.json\": 150,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/meta.json\": 151,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/equality.json\": 152,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/not.json\": 153,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/properties.json\": 154,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json\": 155,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/same.json\": 156,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/selector.json\": 157,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/methods/strict.json\": 158,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/properties/default.json\": 159,\n\t\"./resources/zh-cn/apis/Enumerable.predicates/properties/exists.json\": 160,\n\t\"./resources/zh-cn/apis/Enumerable.selectors.json\": 161,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/meta.json\": 162,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/methods/property.json\": 163,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/children.json\": 164,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/default.json\": 165,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/join.json\": 166,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/key.json\": 167,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/parent.json\": 168,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/result.json\": 169,\n\t\"./resources/zh-cn/apis/Enumerable.selectors/properties/value.json\": 170,\n\t\"./resources/zh-cn/apis/Enumerable/meta.json\": 171,\n\t\"./resources/zh-cn/apis/Enumerable/methods/asEnumerable.json\": 172,\n\t\"./resources/zh-cn/apis/Enumerable/methods/between.json\": 173,\n\t\"./resources/zh-cn/apis/Enumerable/methods/empty.json\": 174,\n\t\"./resources/zh-cn/apis/Enumerable/methods/from.json\": 175,\n\t\"./resources/zh-cn/apis/Enumerable/methods/generate.json\": 176,\n\t\"./resources/zh-cn/apis/Enumerable/methods/noConflict.json\": 177,\n\t\"./resources/zh-cn/apis/Enumerable/methods/range.json\": 178,\n\t\"./resources/zh-cn/apis/Enumerable/methods/repeat.json\": 179,\n\t\"./resources/zh-cn/apis/Enumerable/properties/actions.json\": 180,\n\t\"./resources/zh-cn/apis/Enumerable/properties/comparers.json\": 181,\n\t\"./resources/zh-cn/apis/Enumerable/properties/config.json\": 182,\n\t\"./resources/zh-cn/apis/Enumerable/properties/predicates.json\": 183,\n\t\"./resources/zh-cn/apis/Enumerable/properties/selectors.json\": 184,\n\t\"./resources/zh-cn/apis/IChunk.json\": 185,\n\t\"./resources/zh-cn/apis/IChunk/meta.json\": 186,\n\t\"./resources/zh-cn/apis/IChunk/properties/index.json\": 187,\n\t\"./resources/zh-cn/apis/IEnumerable.json\": 188,\n\t\"./resources/zh-cn/apis/IEnumerable/meta.json\": 189,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/aggregate.json\": 190,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/all.json\": 191,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/any.json\": 192,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json\": 193,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/average.json\": 194,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/chunk.json\": 195,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/combine.json\": 196,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/concat.json\": 197,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/contains.json\": 198,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/copyWithin.json\": 199,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/count.json\": 200,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json\": 201,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/distinct.json\": 202,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/elementAt.json\": 203,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json\": 204,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/every.json\": 205,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/except.json\": 206,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/fill.json\": 207,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/filter.json\": 208,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/find.json\": 209,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findIndex.json\": 210,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findLast.json\": 211,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json\": 212,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/first.json\": 213,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json\": 214,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/forEach.json\": 215,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json\": 216,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/groupBy.json\": 217,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/groupJoin.json\": 218,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/includes.json\": 219,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/indexOf.json\": 220,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/innerJoin.json\": 221,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/intersect.json\": 222,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/join.json\": 223,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/last.json\": 224,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json\": 225,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json\": 226,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/leftJoin.json\": 227,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/leftPad.json\": 228,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/map.json\": 229,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/max.json\": 230,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/min.json\": 231,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/nearBy.json\": 232,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/ofType.json\": 233,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/orderBy.json\": 234,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json\": 235,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/pop.json\": 236,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/product.json\": 237,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/push.json\": 238,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rand.json\": 239,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/random.json\": 240,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json\": 241,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reduce.json\": 242,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reduceRight.json\": 243,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/reverse.json\": 244,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rightJoin.json\": 245,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/rightPad.json\": 246,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/select.json\": 247,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/selectMany.json\": 248,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/separate.json\": 249,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json\": 250,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/shift.json\": 251,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/single.json\": 252,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json\": 253,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/skip.json\": 254,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/skipWhile.json\": 255,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/slice.json\": 256,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/some.json\": 257,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sort.json\": 258,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/splice.json\": 259,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/sum.json\": 260,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/take.json\": 261,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/takeWhile.json\": 262,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toArray.json\": 263,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toDirectory.json\": 264,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toLookup.json\": 265,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/toObject.json\": 266,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/union.json\": 267,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/unshift.json\": 268,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/where.json\": 269,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/wipe.json\": 270,\n\t\"./resources/zh-cn/apis/IEnumerable/methods/zip.json\": 271,\n\t\"./resources/zh-cn/apis/IEnumerable/properties/length.json\": 272,\n\t\"./resources/zh-cn/apis/IEnumerable/properties/size.json\": 273,\n\t\"./resources/zh-cn/apis/IEnumerator.json\": 274,\n\t\"./resources/zh-cn/apis/IEnumerator/meta.json\": 275,\n\t\"./resources/zh-cn/apis/IEnumerator/methods/moveNext.json\": 276,\n\t\"./resources/zh-cn/apis/IEnumerator/methods/reset.json\": 277,\n\t\"./resources/zh-cn/apis/IEnumerator/properties/current.json\": 278,\n\t\"./resources/zh-cn/apis/IGrouping.json\": 279,\n\t\"./resources/zh-cn/apis/IGrouping/meta.json\": 280,\n\t\"./resources/zh-cn/apis/IGrouping/properties/key.json\": 281,\n\t\"./resources/zh-cn/apis/IMapEnumerable.json\": 282,\n\t\"./resources/zh-cn/apis/IMapEnumerable/meta.json\": 283,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/forEach.json\": 284,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json\": 285,\n\t\"./resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json\": 286,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable.json\": 287,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/meta.json\": 288,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json\": 289,\n\t\"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json\": 290,\n\t\"./resources/zh-cn/apis/Lookup.json\": 291,\n\t\"./resources/zh-cn/apis/Lookup/meta.json\": 292,\n\t\"./resources/zh-cn/apis/Lookup/methods/get.json\": 293,\n\t\"./resources/zh-cn/apis/Lookup/methods/set.json\": 294,\n\t\"./resources/zh-cn/apis/Plugin.json\": 295,\n\t\"./resources/zh-cn/apis/Plugin/meta.json\": 296,\n\t\"./resources/zh-cn/caption.json\": 297,\n\t\"./resources/zh-cn/change.json\": 298,\n\t\"./resources/zh-cn/change/2.1.15.json\": 299,\n\t\"./resources/zh-cn/change/2.1.16.json\": 300,\n\t\"./resources/zh-cn/change/2.1.17.json\": 301,\n\t\"./resources/zh-cn/change/2.1.18.json\": 302,\n\t\"./resources/zh-cn/change/2.1.19.json\": 303,\n\t\"./resources/zh-cn/change/2.1.20.pre.json\": 304,\n\t\"./resources/zh-cn/directory.json\": 305,\n\t\"./resources/zh-cn/directory.meta.json\": 306,\n\t\"./resources/zh-cn/examples/IEnumerable.json\": 307,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/aggregate.json\": 308,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/all.json\": 309,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/any.json\": 310,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json\": 311,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/average.json\": 312,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/chunk.json\": 313,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/concat.json\": 314,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/contains.json\": 315,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/copyWithin.json\": 316,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/count.json\": 317,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json\": 318,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/distinct.json\": 319,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/elementAt.json\": 320,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json\": 321,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/every.json\": 322,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/except.json\": 323,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/fill.json\": 324,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/filter.json\": 325,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/find.json\": 326,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findIndex.json\": 327,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findLast.json\": 328,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json\": 329,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/first.json\": 330,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json\": 331,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/forEach.json\": 332,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json\": 333,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/groupBy.json\": 334,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/groupJoin.json\": 335,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/includes.json\": 336,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/indexOf.json\": 337,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/intersect.json\": 338,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/join.json\": 339,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/last.json\": 340,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json\": 341,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json\": 342,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/map.json\": 343,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/max.json\": 344,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/min.json\": 345,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/ofType.json\": 346,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/orderBy.json\": 347,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json\": 348,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/pop.json\": 349,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/product.json\": 350,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/push.json\": 351,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rand.json\": 352,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reduce.json\": 353,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reduceRight.json\": 354,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reserver.json\": 355,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/reverse.json\": 356,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rightJoin.json\": 357,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/rightPad.json\": 358,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/select.json\": 359,\n\t\"./resources/zh-cn/examples/IEnumerable/methods/selectMany.json\": 360,\n\t\"./resources/zh-cn/examples/config.json\": 361,\n\t\"./resources/zh-cn/examples/instance.json\": 362,\n\t\"./resources/zh-cn/examples/selector.json\": 363,\n\t\"./resources/zh-cn/examples/use.json\": 364,\n\t\"./resources/zh-cn/guides/action.json\": 365,\n\t\"./resources/zh-cn/guides/comparer.json\": 366,\n\t\"./resources/zh-cn/guides/config.json\": 367,\n\t\"./resources/zh-cn/guides/enumerator.json\": 368,\n\t\"./resources/zh-cn/guides/extend.json\": 369,\n\t\"./resources/zh-cn/guides/instance.json\": 370,\n\t\"./resources/zh-cn/guides/iterator.json\": 371,\n\t\"./resources/zh-cn/guides/plugin.json\": 372,\n\t\"./resources/zh-cn/guides/predicate.json\": 373,\n\t\"./resources/zh-cn/guides/selector.json\": 374,\n\t\"./resources/zh-cn/guides/use.json\": 375,\n\t\"./resources/zh-cn/install.json\": 376,\n\t\"./resources/zh-cn/introduction.json\": 377,\n\t\"./resources/zh-cn/meta.json\": 378\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src ^\\.\\/resources.*\\.json$\n// module id = 62\n// module chunks = 0","module.exports = {\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"name\": \"Enumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"actions\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful actions\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"comparers\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful comparers\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"config\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"Global config\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicates\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful predicates\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectors\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"An object contains same useful selectors\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"empty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"Create an empty IEnumerable object\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable.json\n// module id = 64\n// module chunks = 0","module.exports = {\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/meta.json\n// module id = 65\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Create an object of type IEnumerable from source\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/methods/asEnumerable.json\n// module id = 66\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Create an empty IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/methods/empty.json\n// module id = 67\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful actions\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/properties/actions.json\n// module id = 68\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful comparers\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/properties/comparers.json\n// module id = 69\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"Global config\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/properties/config.json\n// module id = 70\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful predicates\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/properties/predicates.json\n// module id = 71\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"description\": \"An object contains same useful selectors\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/apis/Enumerable/properties/selectors.json\n// module id = 72\n// module chunks = 0","module.exports = {\n\t\"class\": \"class\",\n\t\"interface\": \"interface\",\n\t\"object\": \"object\",\n\t\"constructor\": \"constructor\",\n\t\"constructors\": \"constructors\",\n\t\"property\": \"property\",\n\t\"properties\": \"properties\",\n\t\"method\": \"method\",\n\t\"methods\": \"methods\",\n\t\"since\": \"since\",\n\t\"deprecated\": \"deprecated\",\n\t\"details\": \"details\",\n\t\"description\": \"description\",\n\t\"summary\": \"summary\",\n\t\"warning\": \"warning\",\n\t\"warnings\": \"warnings\",\n\t\"remark\": \"remark\",\n\t\"remarks\": \"remarks\",\n\t\"example\": \"example\",\n\t\"examples\": \"examples\",\n\t\"static\": \"static\",\n\t\"see\": \"see\",\n\t\"declare\": \"declare\",\n\t\"parameters\": \"parameters\",\n\t\"parameter\": \"parameter\",\n\t\"returns\": \"return value\",\n\t\"generics\": \"type parameters\",\n\t\"apis\": \"APIs\",\n\t\"guide\": \"Guide\",\n\t\"publish\": \"publish\",\n\t\"time\": \"time\",\n\t\"date\": \"date\",\n\t\"prepublish\": \"prepublish\",\n\t\"version\": \"version\",\n\t\"author\": \"author\",\n\t\"email\": \"email\",\n\t\"project\": \"project\",\n\t\"default\": \"default\",\n\t\"value\": \"value\",\n\t\"defaultValue\": \"default value\",\n\t\"readonly\": \"readonly\",\n\t\"lazy\": \"deferred execution\",\n\t\"try\": \"try it\",\n\t\"run\": \"run\",\n\t\"clear\": \"clear\",\n\t\"close\": \"close\",\n\t\"loadRuntime\": \"loading runtime\",\n\t\"executing\": \"executing\",\n\t\"enableExtend\": \"enable extends of Array\",\n\t\"newInstance\": {\n\t\t\"only\": \"can only use new operator\",\n\t\t\"both\": \"can use new operator or not\",\n\t\t\"cannot\": \"can not use new operator\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/caption.json\n// module id = 73\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"publish\": \"2017-03-27\",\n\t\t\"contents\": [\n\t\t\t\"优化了部分代码结构\",\n\t\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t\t],\n\t\t\"version\": \"2.1.15\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-05\",\n\t\t\"contents\": [\n\t\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t\t],\n\t\t\"version\": \"2.1.16\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-12\",\n\t\t\"contents\": [\n\t\t\t\"新增 findLast 方法\",\n\t\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t\t],\n\t\t\"version\": \"2.1.17\"\n\t},\n\t{\n\t\t\"publish\": \"2017-08-30\",\n\t\t\"contents\": [\n\t\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\t\"\",\n\t\t\t\"Bugs\",\n\t\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t\t],\n\t\t\"version\": \"2.1.18\"\n\t},\n\t{\n\t\t\"publish\": \"2017-09-08\",\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t\t],\n\t\t\"version\": \"2.1.19\"\n\t},\n\t{\n\t\t\"prepublish\": true,\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\t\"2. 优化 defaultValueSelector\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t\t],\n\t\t\"version\": \"2.1.20.pre\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/change.json\n// module id = 74\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"Introduction\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"Install\"\n\t},\n\t{\n\t\t\"code\": \"guides\",\n\t\t\"title\": \"Guide\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"instance\",\n\t\t\t\t\"title\": \"Get IEnumerable instance\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"use\",\n\t\t\t\t\"title\": \"Start use\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"config\",\n\t\t\t\t\"title\": \"Configuration\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"selector\",\n\t\t\t\t\"title\": \"Selector\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"predicate\",\n\t\t\t\t\"title\": \"Predicate\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"comparer\",\n\t\t\t\t\"title\": \"Comparer\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"action\",\n\t\t\t\t\"title\": \"Action\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"iterator\",\n\t\t\t\t\"title\": \"迭代器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"enumerator\",\n\t\t\t\t\"title\": \"枚举器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"extend\",\n\t\t\t\t\"title\": \"扩展\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"plugin\",\n\t\t\t\t\"title\": \"插件\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"apis\",\n\t\t\"title\": \"APIs\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"Directory\",\n\t\t\t\t\"title\": \"Directory Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Entry\",\n\t\t\t\t\"title\": \"Entry Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable\",\n\t\t\t\t\"title\": \"Enumerable Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.actions\",\n\t\t\t\t\"title\": \"Enumerable.actions Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.comparers\",\n\t\t\t\t\"title\": \"Enumerable.comparers Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.config\",\n\t\t\t\t\"title\": \"Enumerable.config Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.predicates\",\n\t\t\t\t\"title\": \"Enumerable.predicates Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.selectors\",\n\t\t\t\t\"title\": \"Enumerable.selectors Object\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IChunk\",\n\t\t\t\t\"title\": \"IChunk Interface\",\n\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerable\",\n\t\t\t\t\"title\": \"IEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerator\",\n\t\t\t\t\"title\": \"IEnumerator Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IGrouping\",\n\t\t\t\t\"title\": \"IGrouping Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IMapEnumerable\",\n\t\t\t\t\"title\": \"IMapEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IOrderedEnumerable\",\n\t\t\t\t\"title\": \"IOrderedEnumerable Interface\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Lookup\",\n\t\t\t\t\"title\": \"Lookup Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Plugin\",\n\t\t\t\t\"title\": \"Plugin Class\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"Change List\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"About\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/directory.json\n// module id = 75\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"Introduction\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"Install\"\n\t},\n\t\"guides\",\n\t\"apis\",\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"Change List\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"About\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/directory.meta.json\n// module id = 76\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable.json\n// module id = 77\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\n// Determine whether any string in the array is longer than \\\"banana\\\".\\r\\nlet longestName =\\r\\n    fruits.asEnumerable().aggregate(\\\"banana\\\",\\r\\n        (longest, next) =>\\r\\n            next.length > longest.length ? next : longest,\\r\\n        // Return the final result as an upper case string.\\r\\n        fruit => fruit.toUpperCase());\\r\\n\\r\\nconsole.log(`The fruit with the longest name is ${ longestName }`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The fruit with the longest name is PASSIONFRUIT.\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/aggregate.json\n// module id = 78\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// Create an array of Pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 10 },\\r\\n    { name: \\\"Boots\\\", age: 14 },\\r\\n    { name: \\\"Whiskers\\\", age: 6 }\\r\\n];\\r\\n\\r\\n// Determine whether all pet names\\r\\n// in the array start with 'B'.\\r\\nlet allStartWithB = pets.asEnumerable().all(pet => pet.name.startsWith(\\\"B\\\"));\\r\\n\\r\\nconsole.log(`${ allStartWithB ? \\\"All\\\" : \\\"Not all\\\" } pet names start with 'B'.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  Not all pet names start with 'B'.\",\n\t\"2.js\": \"let people = [\\r\\n    {\\r\\n        lastName: \\\"Haas\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Barley\\\", age: 10 },\\r\\n            { name: \\\"Boots\\\", age: 14 },\\r\\n            { name: \\\"Whiskers\\\", age: 6 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Fakhouri\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Snowball\\\", age: 1 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Antebi\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Belle\\\", age: 8 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"Philips\\\",\\r\\n        pets: [\\r\\n            { name: \\\"Sweetie\\\", age: 2 },\\r\\n            { name: \\\"Rover\\\", age: 13 }\\r\\n        ]\\r\\n    }\\r\\n];\\r\\n\\r\\n// Determine which people have pets that are all older than 5.\\r\\nlet names = people.asEnumerable().where(person => person.pets.all(pet => pet.age > 5)).select(person => person.lastName);\\r\\n\\r\\nfor (let name of names) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n/* This code produces the following output:\\r\\n *\\r\\n * Haas\\r\\n * Antebi\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/all.json\n// module id = 79\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// Create an array of Pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 8, vaccinated: true },\\r\\n    { name: \\\"Boots\\\", age: 4, vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", age: 1, vaccinated: false }\\r\\n];\\r\\n\\r\\n// Determine whether any pets over age 1 are also unvaccinated.\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There ${ unvaccinated ? \\\"are\\\" : \\\"are not any\\\" } unvaccinated animals over age one.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  There are unvaccinated animals over age one.\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/any.json\n// module id = 80\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [ \\\"10007\\\", \\\"37\\\", 299846234235 ];\\r\\n\\r\\nlet average = numbers.asEnumerable().average();\\r\\n\\r\\nconsole.log(`The average is ${ average }.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The average is 99948748093.\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/average.json\n// module id = 81\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let cats = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet dogs = [\\r\\n    { name: \\\"Bounder\\\", age: 3 },\\r\\n    { name: \\\"Snoopy\\\", age: 14 },\\r\\n    { name: \\\"Fido\\\", age: 9 }\\r\\n];\\r\\n\\r\\nlet query = cats.asEnumerable().select(cat => cat.name)\\r\\n    .concat(dogs.asEnumerable().select(dog => dog.name));\\r\\n\\r\\nfor (let name of query) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Barley\\r\\n// Boots\\r\\n// Whiskers\\r\\n// Bounder\\r\\n// Snoopy\\r\\n// Fido\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/concat.json\n// module id = 82\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet fruit = \\\"mango\\\";\\r\\n\\r\\nlet hasMango = fruits.asEnumerable().contains(fruit);\\r\\n\\r\\nconsole.log(`The array ${ hasMango ? \\\"does\\\" : \\\"does not\\\" } contain '${ fruit }'.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// The array does contain 'mango'.\",\n\t\"2.js\": \"// Custom comparer for contains\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Fruits are equal if their names and product numbers are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet apple = { name: \\\"apple\\\", code: 9 };\\r\\nlet kiwi = { name: \\\"kiwi\\\", code: 8 };\\r\\n\\r\\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\\r\\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\\r\\n\\r\\nconsole.log(\\\"Apple? \\\" + hasApple);\\r\\nconsole.log(\\\"Kiwi? \\\" + hasKiwi);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Apple? true\\r\\n Kiwi? false\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/contains.json\n// module id = 83\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet numberOfFruits = fruits.asEnumerable().count();\\r\\n\\r\\nconsole.log(`There are ${ numberOfFruits } fruits in the collection.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 6 fruits in the collection.\\r\\n\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", vaccinated: true },\\r\\n    { name: \\\"Boots\\\", vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 2 unvaccinated animals.\",\n\t\"3.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", vaccinated: true },\\r\\n    { name: \\\"Boots\\\", vaccinated: false },\\r\\n    { name: \\\"Whiskers\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\\r\\n\\r\\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// There are 2 unvaccinated animals.\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/count.json\n// module id = 84\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let defaultPet = { name: \\\"Default Pet Name\\\", age: 0 };\\r\\n\\r\\nlet pets1 = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`Name: ${ pet.name }`);\\r\\n}\\r\\n\\r\\nconsole.log();\\r\\n\\r\\nlet pets2 = [];\\r\\n\\r\\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`Name: ${ pet.name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Name: Barley\\r\\n Name: Boots\\r\\n Name: Whiskers\\r\\n\\r\\n Name: Default Pet Name\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json\n// module id = 85\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\\r\\n\\r\\nlet distinctAges = ages.asEnumerable().distinct();\\r\\n\\r\\nconsole.log(\\\"Distinct ages:\\\");\\r\\n\\r\\nfor (let age of distinctAges) {\\r\\n    console.log(age);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Distinct ages:\\r\\n 21\\r\\n 46\\r\\n 55\\r\\n 17\\r\\n */\\r\\n\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet products = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// Exclude duplicates.\\r\\nlet noduplicates = products.distinct(productComparer);\\r\\n\\r\\nfor (let product of noduplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n apple 9\\r\\n orange 4\\r\\n lemon 12\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/distinct.json\n// module id = 86\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\", \\\"Andersen, Henriette Thaulow\\\", \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet name = names.asEnumerable().elementAt(4);\\r\\n\\r\\nconsole.log(`The name is '${ name }'.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The name is 'Ito, Shu'.\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/elementAt.json\n// module id = 87\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\", \\\"Andersen, Henriette Thaulow\\\", \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet index = 20;\\r\\n\\r\\nlet name = names.asEnumerable().elementAtOrDefault(index, \\\"[no name at this index]\\\");\\r\\n\\r\\nconsole.log(`The name chosen at index ${ index } is '${ name }'.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The name chosen at index 20 is '[no name at this index]'.\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json\n// module id = 88\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\\r\\nlet numbers2 = [ 2.2 ];\\r\\n\\r\\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\\r\\n\\r\\nfor (let number of onlyInFirstSet) {\\r\\n    console.log(number);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 2\\r\\n 2.1\\r\\n 2.3\\r\\n 2.4\\r\\n 2.5\\r\\n */\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits1 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet fruits2 = [ { name: \\\"apple\\\", code: 9 } ];\\r\\n\\r\\n//Get all the elements from the first array\\r\\n//except for the elements from the second array.\\r\\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\\r\\n\\r\\nfor (let product of except) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n orange 4\\r\\n lemon 12\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/except.json\n// module id = 89\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first();\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 9\\r\\n */\",\n\t\"2.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first(number => number > 80);\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 92\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/first.json\n// module id = 90\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [];\\r\\nlet first = numbers.asEnumerable().firstOrDefault(0);\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 0\\r\\n */\",\n\t\"2.js\": \"let names = [ \\\"Hartono, Tommy\\\", \\\"Adams, Terry\\\",\\r\\n    \\\"Andersen, Henriette Thaulow\\\",\\r\\n    \\\"Hedlund, Magnus\\\", \\\"Ito, Shu\\\" ];\\r\\n\\r\\nlet firstLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 20);\\r\\n\\r\\nconsole.log(`The first long name is ${ firstLongName }.`);\\r\\n\\r\\nlet firstVeryLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 30);\\r\\n\\r\\nconsole.log(`There is ${ firstVeryLongName === \\\"\\\" ? \\\"not a\\\" : \\\"a\\\" } name longer than 30 characters.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The first long name is 'Andersen, Henriette Thaulow'.\\r\\n There is not a name longer than 30 characters.\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/firstOrDefault.json\n// module id = 91\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// Create a list of pets.\\r\\nlet pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 },\\r\\n    { name: \\\"Daisy\\\", age: 4 }\\r\\n];\\r\\n\\r\\n// Group the pets using Age as the key value\\r\\n// and selecting only the pet's Name for each value.\\r\\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\\r\\n\\r\\n// Iterate over each IGrouping in the collection.\\r\\nfor (let petGroup of query) {\\r\\n    // Print the key value of the IGrouping.\\r\\n    console.log(petGroup.key);\\r\\n    // Iterate over each value in the\\r\\n    // IGrouping and print the value.\\r\\n    for (let name of petGroup)\\r\\n        console.log(`  ${ name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 8\\r\\n   Barley\\r\\n 4\\r\\n   Boots\\r\\n   Daisy\\r\\n 1\\r\\n   Whiskers\\r\\n */\",\n\t\"2-2.1.19.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count(),\\r\\n        min: pets.min(pet => pet.age),\\r\\n        max: pets.max(pet => pet.age)\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n    console.log(\\\"Minimum age: \\\" + result.min);\\r\\n    console.log(\\\"Maximum age: \\\" + result.max);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 8.3\\r\\n Maximum age: 8.3\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n Minimum age: 4.3\\r\\n Maximum age: 4.9\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 1.5\\r\\n Maximum age: 1.5\\r\\n */\",\n\t\"2.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's elements.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n */\",\n\t\"3-2.1.19.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count(),\\r\\n        min: ages.min(),\\r\\n        max: ages.max()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count);\\r\\n    console.log(\\\"Minimum age: \\\" + result.min);\\r\\n    console.log(\\\"Maximum age: \\\" + result.max);\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 8.3\\r\\n Maximum age: 8.3\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n Minimum age: 4.3\\r\\n Maximum age: 4.9\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n Minimum age: 1.5\\r\\n Maximum age: 1.5\\r\\n */\",\n\t\"3.js\": \"// Create a list of pets.\\r\\nlet petsList = [\\r\\n    { name: \\\"Barley\\\", age: 8.3 },\\r\\n    { name: \\\"Boots\\\", age: 4.9 },\\r\\n    { name: \\\"Whiskers\\\", age: 1.5 },\\r\\n    { name: \\\"Daisy\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// Group Pet objects by the Math.Floor of their age.\\r\\n// Then project an anonymous type from each group\\r\\n// that consists of the key, the count of the group's\\r\\n// elements, and the minimum and maximum age in the group.\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count()\\r\\n    }));\\r\\n\\r\\n// Iterate over each anonymous type.\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\nAge group: \\\" + result.key);\\r\\n    console.log(\\\"Number of pets in this age group: \\\" + result.count)\\r\\n}\\r\\n\\r\\n/*  This code produces the following output:\\r\\n\\r\\n Age group: 8\\r\\n Number of pets in this age group: 1\\r\\n\\r\\n Age group: 4\\r\\n Number of pets in this age group: 2\\r\\n\\r\\n Age group: 1\\r\\n Number of pets in this age group: 1\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/groupBy.json\n// module id = 92\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" };\\r\\nlet terry = { name: \\\"Adams, Terry\\\" };\\r\\nlet charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\n\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry };\\r\\nlet boots = { name: \\\"Boots\\\", owner: terry };\\r\\nlet whiskers = { name: \\\"Whiskers\\\", owner: charlotte };\\r\\nlet daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\n\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\n// Create a list where each element is an anonymous\\r\\n// type that contains a person's name and\\r\\n// a collection of names of the pets they own.\\r\\nlet query = people.asEnumerable().groupJoin(pets,\\r\\n    (person, petCollection) => ({\\r\\n        ownerName: person.name,\\r\\n        pets: petCollection.select(pet => pet.name)\\r\\n    }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    // Output the owner's name.\\r\\n    console.log(`${ obj.ownerName }:`);\\r\\n    // Output each of the owner's pet's names.\\r\\n    for (let pet of obj.pets) {\\r\\n        console.log(`  ${ pet }`);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus:\\r\\n   Daisy\\r\\n Adams, Terry:\\r\\n   Barley\\r\\n   Boots\\r\\n Weiss, Charlotte:\\r\\n   Whiskers\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/groupJoin.json\n// module id = 93\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let id1 = [ 44, 26, 92, 30, 71, 38 ];\\r\\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\\r\\n\\r\\nlet both = id1.asEnumerable().intersect(id2);\\r\\n\\r\\nfor (let id of both) {\\r\\n    console.log(id);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 26\\r\\n 30\\r\\n */\",\n\t\"2.js\": \"// Custom comparer for distinct\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // Check whether the products' properties are equal.\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet store1 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"orange\\\", code: 4 }\\r\\n];\\r\\nlet store2 = [\\r\\n    { name: \\\"apple\\\", code: 9 },\\r\\n    { name: \\\"lemon\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// Get the products from the first array\\r\\n// that have duplicates in the second array.\\r\\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\\r\\n\\r\\nfor (let product of duplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n apple 9\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/intersect.json\n// module id = 94\n// module chunks = 0","module.exports = {\n\t\"1.1.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" };\\r\\nlet terry = { name: \\\"Adams, Terry\\\" };\\r\\nlet charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\n\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry };\\r\\nlet boots = { name: \\\"Boots\\\", owner: terry };\\r\\nlet whiskers = { name: \\\"Whiskers\\\", owner: charlotte };\\r\\nlet daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\n\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\n// Create a list of Person-Pet pairs where\\r\\n// each element is an anonymous type that contains a\\r\\n// Pet's name and the name of the Person that owns the Pet.\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus - Daisy\\r\\n Adams, Terry - Barley\\r\\n Adams, Terry - Boots\\r\\n Weiss, Charlotte - Whiskers\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/join.json\n// module id = 95\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet max = longs.asEnumerable().max();\\r\\n\\r\\nconsole.log(`The largest number is ${ max }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The largest number is 4294967296.\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\\r\\n\\r\\nconsole.log(`The maximum pet age plus name length is ${ max }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The maximum pet age plus name length is 14.\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/max.json\n// module id = 96\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet min = longs.asEnumerable().min();\\r\\n\\r\\nconsole.log(`The smallest number is ${ min }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The smallest number is 81125.\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet min = pets.asEnumerable().min(pet => pet.age);\\r\\n\\r\\nconsole.log(`The youngest animal is age ${ min }.`);\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n The youngest animal is age 5.\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/min.json\n// module id = 97\n// module chunks = 0","module.exports = {\n\t\"1-2.1.19.js\": \"let fruits = [\\\"Mango\\\", \\\"Orange\\\", \\\"Apple\\\", 3.0, \\\"Banana\\\"];\\r\\n\\r\\n// Apply ofType() to the Array\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"Elements of type 'String' are:\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// The following query shows that the standard query operators such as\\r\\n// where() can be applied to the Array type after calling ofType().\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains(\\\"n\\\", Enumerable.comparers.ignoreCase()));\\r\\n\\r\\nconsole.log(\\\"\\\\nThe following strings contain 'n':\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Elements of type 'string' are:\\r\\n// Mango\\r\\n// Orange\\r\\n// Apple\\r\\n// Banana\\r\\n//\\r\\n// The following strings contain 'n':\\r\\n// Mango\\r\\n// Orange\\r\\n// Banana\",\n\t\"1.js\": \"let fruits = [\\\"Mango\\\", \\\"Orange\\\", \\\"Apple\\\", 3.0, \\\"Banana\\\"];\\r\\n\\r\\n// Apply ofType() to the Array\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"Elements of type 'String' are:\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// The following query shows that the standard query operators such as\\r\\n// where() can be applied to the Array type after calling ofType().\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains(\\\"n\\\"));\\r\\n\\r\\nconsole.log(\\\"\\\\nThe following strings contain 'n':\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// Elements of type 'string' are:\\r\\n// Mango\\r\\n// Orange\\r\\n// Apple\\r\\n// Banana\\r\\n//\\r\\n// The following strings contain 'n':\\r\\n// Mango\\r\\n// Orange\\r\\n// Banana\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/ofType.json\n// module id = 98\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", age: 8 },\\r\\n    { name: \\\"Boots\\\", age: 4 },\\r\\n    { name: \\\"Whiskers\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(`${ pet.name } - ${ pet.age }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Whiskers - 1\\r\\n Boots - 4\\r\\n Barley - 8\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/orderBy.json\n// module id = 99\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"const specialComparer = (d1, d2) => {\\r\\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\\r\\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\\r\\n    if (f1 === f2) {\\r\\n        return d1 - d2;\\r\\n    } else if (f1 > f2) {\\r\\n        return 1;\\r\\n    } else {\\r\\n        return -1;\\r\\n    }\\r\\n};\\r\\n\\r\\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\\r\\n\\r\\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\\r\\n\\r\\nfor (let num of query) {\\r\\n    console.log(num);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 9.7\\r\\n 0.5\\r\\n 8.3\\r\\n 6.3\\r\\n 1.3\\r\\n 6.2\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/orderByDescending.json\n// module id = 100\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let squares = Enumerable.range(1, 10).select(x => x * x);\\r\\n\\r\\nfor (let num of squares) {\\r\\n    console.log(num);\\r\\n}\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n 1\\r\\n 4\\r\\n 9\\r\\n 16\\r\\n 25\\r\\n 36\\r\\n 49\\r\\n 64\\r\\n 81\\r\\n 100\\r\\n*/\",\n\t\"2.js\": \"let fruits = [ \\\"apple\\\", \\\"banana\\\", \\\"mango\\\", \\\"orange\\\", \\\"passionfruit\\\", \\\"grape\\\" ];\\r\\n\\r\\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n {\\\"index\\\":0,\\\"str\\\":\\\"\\\"}\\r\\n {\\\"index\\\":1,\\\"str\\\":\\\"b\\\"}\\r\\n {\\\"index\\\":2,\\\"str\\\":\\\"ma\\\"}\\r\\n {\\\"index\\\":3,\\\"str\\\":\\\"ora\\\"}\\r\\n {\\\"index\\\":4,\\\"str\\\":\\\"pass\\\"}\\r\\n {\\\"index\\\":5,\\\"str\\\":\\\"grape\\\"}\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/select.json\n// module id = 101\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] }\\r\\n];\\r\\n\\r\\n// Query using selectMany().\\r\\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"Using selectMany():\\\");\\r\\n\\r\\n// Only one foreach loop is required to iterate\\r\\n// through the results since it is a\\r\\n// one-dimensional collection.\\r\\nfor (let pet of query1) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// This code shows how to use select()\\r\\n// instead of selectMany().\\r\\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"\\\\nUsing select():\\\");\\r\\n\\r\\n// Notice that two foreach loops are required to\\r\\n// iterate through the results\\r\\n// because the query returns a collection of arrays.\\r\\nfor (let petList of query2) {\\r\\n    for (let pet of petList) {\\r\\n        console.log(pet);\\r\\n    }\\r\\n    console.log();\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Using selectMany():\\r\\n Scruffy\\r\\n Sam\\r\\n Walker\\r\\n Sugar\\r\\n Scratches\\r\\n Diesel\\r\\n\\r\\n Using select():\\r\\n Scruffy\\r\\n Sam\\r\\n\\r\\n Walker\\r\\n Sugar\\r\\n\\r\\n Scratches\\r\\n Diesel\\r\\n\\r\\n*/\",\n\t\"2.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] },\\r\\n    { name: \\\"Hines, Patrick\\\", pets: [ \\\"Dusty\\\" ] }\\r\\n];\\r\\n\\r\\n// Project the items in the array by appending the index\\r\\n// of each PetOwner to each pet's name in that petOwner's\\r\\n// array of pets.\\r\\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\\r\\n        petOwner.pets.asEnumerable().select(pet => index + pet));\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// 0Scruffy\\r\\n// 0Sam\\r\\n// 1Walker\\r\\n// 1Sugar\\r\\n// 2Scratches\\r\\n// 2Diesel\\r\\n// 3Dusty\",\n\t\"3.js\": \"let petOwners = [\\r\\n    { name: \\\"Higa, Sidney\\\", pets: [ \\\"Scruffy\\\", \\\"Sam\\\" ] },\\r\\n    { name: \\\"Ashkenazi, Ronen\\\", pets: [ \\\"Walker\\\", \\\"Sugar\\\" ] },\\r\\n    { name: \\\"Price, Vernette\\\", pets: [ \\\"Scratches\\\", \\\"Diesel\\\" ] },\\r\\n    { name: \\\"Hines, Patrick\\\", pets: [ \\\"Dusty\\\" ] }\\r\\n];\\r\\n\\r\\n// Project the pet owner's name and the pet's name.\\r\\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\\r\\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\\\"S\\\"))\\r\\n        .select(ownerAndPet => ({\\r\\n            owner: ownerAndPet.petOwner.name,\\r\\n            pet: ownerAndPet.petName\\r\\n        }));\\r\\n\\r\\n// Print the results.\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n// {\\\"owner\\\":\\\"Higa\\\",\\\"pet\\\":\\\"Scruffy\\\"}\\r\\n// {\\\"owner\\\":\\\"Higa\\\",\\\"pet\\\":\\\"Sam\\\"}\\r\\n// {\\\"owner\\\":\\\"Ashkenazi\\\",\\\"pet\\\":\\\"Sugar\\\"}\\r\\n// {\\\"owner\\\":\\\"Price\\\",\\\"pet\\\":\\\"Scratches\\\"}\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/IEnumerable/methods/selectMany.json\n// module id = 102\n// module chunks = 0","module.exports = {\n\t\"config.as.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\",\n\t\"config.extends.js\": \"Enumerable.config.extends.array = true; //Open extends for Array. After open this, Array will have all the features of LINQ and you can use methods of LINQ for Array. (Suggest)\\r\\nEnumerable.config.extends.string = true; //Open extends for String. After open this, String will have all the features of LINQ and you can use methods of LINQ for String.(Not suggest)\\r\\nEnumerable.config.extends.object = true; //Open extends for Object. After open this, each object will have all the features of LINQ and you can use methods of LINQ for every object.(Not suggest)\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/config.json\n// module id = 103\n// module chunks = 0","module.exports = {\n\t\"asEnumerable.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nlet s = 'abc'.asEnumerable();\",\n\t\"Enumerable.asEnumerable.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\",\n\t\"Enumerable.js\": \"let enumerable = Enumerable([1, 2, 3]);\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/instance.json\n// module id = 104\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"Boots\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"Whiskers\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\npets.asEnumerable().select(\\\"name\\\");\\r\\n//the above code and the following code are same feature.\\r\\npets.asEnumerable().select(pet => pet.name);\",\n\t\"1.try.js\": \"let pets = [\\r\\n    { name: \\\"Barley\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"Boots\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"Whiskers\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\nconsole.log(pets.asEnumerable().select(\\\"name\\\"));\\r\\n//the above code and the following code are same feature.\\r\\nconsole.log(pets.asEnumerable().select(pet => pet.name));\",\n\t\"2.js\": \"let arrays = [\\r\\n    [ 1, 2, 4, 8 ],\\r\\n    [ 1, 3, 9 ],\\r\\n    [ 1, 5 ]\\r\\n];\\r\\n\\r\\narrays.asEnumerable().select(1);\\r\\n//the above code and the following code are same feature.\\r\\narrays.asEnumerable().select(array => array[1]);\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/selector.json\n// module id = 105\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [ { name: \\\"Barley\\\", age: 8, vaccinated: true }, { name: \\\"Boots\\\", age: 4, vaccinated: false }, { name: \\\"Whiskers\\\", age: 1, vaccinated: false } ];\\r\\n\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`There ${ unvaccinated ? \\\"are\\\" : \\\"are not any\\\" } unvaccinated animals over age one.`);\\r\\n\\r\\n// This code produces the following output:\\r\\n//\\r\\n//  There are unvaccinated animals over age one.\",\n\t\"2.js\": \"let magnus = { name: \\\"Hedlund, Magnus\\\" }, terry = { name: \\\"Adams, Terry\\\" }, charlotte = { name: \\\"Weiss, Charlotte\\\" };\\r\\nlet barley = { name: \\\"Barley\\\", owner: terry }, boots = { name: \\\"Boots\\\", owner: terry }, whiskers = { name: \\\"Whiskers\\\", owner: charlotte }, daisy = { name: \\\"Daisy\\\", owner: magnus };\\r\\nlet people = [ magnus, terry, charlotte ];\\r\\nlet pets = [ barley, boots, whiskers, daisy ];\\r\\n\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n This code produces the following output:\\r\\n\\r\\n Hedlund, Magnus - Daisy\\r\\n Adams, Terry - Barley\\r\\n Adams, Terry - Boots\\r\\n Weiss, Charlotte - Whiskers\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/examples/use.json\n// module id = 106\n// module chunks = 0","module.exports = {\n\t\"title\": \"Action\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"What's the Action\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"Action is a function which is only execute some calculation for the parameters\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The Action function accept one parameter, or accept another parameter which is the index of the first parameter in the enumerable as the second parameter, then execute some calculation but return nothing\"\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/action.json\n// module id = 107\n// module chunks = 0","module.exports = {\n\t\"title\": \"Comparer\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/comparer.json\n// module id = 108\n// module chunks = 0","module.exports = {\n\t\"title\": \"Configuration\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/config.json\n// module id = 109\n// module chunks = 0","module.exports = {\n\t\"title\": \"Get IEnumerable instance\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"Use constructor of Enumerable class\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"You can use constructor of Enumerable class for get an IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use Enumerable.asEnumerable method\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use asEnumerable method\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"After require linq-js, asEnumerable method war included by any object, you can use asEnumerable of any object for get an IEnumerable object\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/instance.json\n// module id = 110\n// module chunks = 0","module.exports = {\n\t\"title\": \"Predicate\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/predicate.json\n// module id = 111\n// module chunks = 0","module.exports = {\n\t\"title\": \"Selector\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"What's the Selector\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The Selector is a function which mapping an input value to an output value.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"The function accept one or more arguments, sometimes, it also accept index of the collection as argument.\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Unary Selector\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Binary Selector\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Use string/number/symbol value to replace the Selector\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"content\": \"You can use a string or a number or a symbol value to replace an Unary Selector, the examples following will show you how to use string or number value to replace the Selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/selector.json\n// module id = 112\n// module chunks = 0","module.exports = {\n\t\"title\": \"Start use\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/guides/use.json\n// module id = 113\n// module chunks = 0","module.exports = {\n\t\"title\": \"Install\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"Add to project\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Require\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"description:This module require ES6. I suggest you to use this with ES6. The following examples is already use ES6.\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/install.json\n// module id = 114\n// module chunks = 0","module.exports = {\n\t\"title\": \"Introduction\",\n\t\"contents\": [\n\t\t\"use linq and lambda in javascript for es6\",\n\t\t\"&nbsp;\",\n\t\t\"\",\n\t\t\"Since 2.1.0, I rewrite all to use new features of ES6. The performance be better, memory is used less and using deferred execution.\",\n\t\t\"&nbsp;\",\n\t\t\"My English is poor!\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/introduction.json\n// module id = 115\n// module chunks = 0","module.exports = {\n\t\"name\": \"English\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/en-us/meta.json\n// module id = 116\n// module chunks = 0","module.exports = {\n\t\"author\": \"散漫的水元素\",\n\t\"emails\": [\n\t\t\"491029934@qq.com\",\n\t\t\"wm123450405@hotmail.com\"\n\t],\n\t\"projects\": [\n\t\t{\n\t\t\t\"name\": \"github\",\n\t\t\t\"href\": \"https://github.com/wm123450405/linqjs\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"oschina\",\n\t\t\t\"href\": \"http://git.oschina.net/wm123450405/linqjs\"\n\t\t}\n\t],\n\t\"publishs\": [\n\t\t{\n\t\t\t\"name\": \"node\",\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/about.json\n// module id = 117\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"IMapEnumerable\"\n\t],\n\t\"name\": \"Directory\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"delete\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器从 Directory 中移除指定的键\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"has\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器判断 Directory 中是否包含指定的键\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"set\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory.json\n// module id = 118\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"IMapEnumerable\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory/meta.json\n// module id = 119\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回是否包含指定的键\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器从 Directory 中移除指定的键\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory/methods/delete.json\n// module id = 120\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"键所对应的值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory/methods/get.json\n// module id = 121\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回是否包含指定的键\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器判断 Directory 中是否包含指定的键\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory/methods/has.json\n// module id = 122\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要设置的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回 Directory 对象本身\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Directory/methods/set.json\n// module id = 123\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"Entry\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"此entry的key\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"value\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"此entry的value\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Entry.json\n// module id = 124\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Entry/meta.json\n// module id = 125\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此entry的key\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Entry/properties/key.json\n// module id = 126\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此entry的value\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Entry/properties/value.json\n// module id = 127\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.actions\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的执行器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.actions.json\n// module id = 128\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.actions/meta.json\n// module id = 129\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的执行器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该执行器接受一个元素和该元素所在序列的索引作为参数, 但是不做任何处理, 通常表示为 defaultAction\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"action\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.actions/properties/default.json\n// module id = 130\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.comparers\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的大小比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"equality\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的相等比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"same\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的相同比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"strict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的全等比较器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"array\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"array\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"array\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"greater\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"greaterThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"greaterThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"ignoreCase\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"less\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"lessThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"lessThen\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicateArray\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"last\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers.json\n// module id = 131\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/meta.json\n// module id = 132\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"array\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"last\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"false\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该比较器按照指定的 array 值的循序(作为从小到大的方式)判别待比较的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/methods/array.json\n// module id = 133\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"greaterThen\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个大于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 greaterThen 函数后返回 true 时该函数返回 1 表示传入的第一个参数值大于第二个参数值, 否则返回 -1 表示传入的第一个参数值小于第二个参数值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"method\": \"less\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/methods/greater.json\n// module id = 134\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个键选择器生成一个忽略大小写的相等比较器\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json\n// module id = 135\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"lessThen\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过一个小于判断函数与一个相等比较器生成一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 lessThen 函数后返回 true 时该函数返回 -1 表示传入的第一个参数值小于第二个参数值, 否则返回 1 表示传入的第一个参数值大于第二个参数值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"method\": \"greater\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/methods/less.json\n// module id = 136\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicateArray\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"last\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"false\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个大小比较器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个大小比较器函数, 该比较器按照指定的 predicateArray 中的函数的匹配循序(作为从小到大的方式)判别待比较的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json\n// module id = 137\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的大小比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该比较器是一个大小比较器, 它接受两个用于比较的元素作为参数, 返回一个number表示大小, 通常表示为 defaultComparer\",\n\t\t\t\t\"如果返回值大于0, 则表示第一个参数大于第二个参数. 如果返回值小于0, 则表示第一个参数小于第二个参数. 如果返回值等于0, 则表示两个参数相等\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/properties/default.json\n// module id = 138\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的相等比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultEqualityComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/properties/equality.json\n// module id = 139\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的相同比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultSameComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/properties/same.json\n// module id = 140\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的全等比较器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"defaultStrictEqualityComparer\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"comparer\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.comparers/properties/strict.json\n// module id = 141\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.config\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"as\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"设置 asEnumerable 方法的别名\",\n\t\t\t\t\t\"default\": \"asEnumerable\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.array\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 Array 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.lazy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭调用原生对象的原生方法时使用延迟执行功能\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.object\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 Object 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extends.string\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"开启或关闭对原生 String 对象的扩展\",\n\t\t\t\t\t\"default\": false\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config.json\n// module id = 142\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/meta.json\n// module id = 143\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"string\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"设置 asEnumerable 方法的别名\",\n\t\t\t\"default\": \"asEnumerable\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"为所有对象的 asEnumerable 方法设置一个别名\"\n\t\t\t],\n\t\t\t\"warnings\": [\n\t\t\t\t\"设置此别名后 asEnumerable 方法依然有效\"\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/properties/as.json\n// module id = 144\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 Array 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/properties/extends.array.json\n// module id = 145\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"description\": \"开启或关闭调用原生对象的原生方法时使用延迟执行功能\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json\n// module id = 146\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 Object 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/properties/extends.object.json\n// module id = 147\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"开启或关闭对原生 String 对象的扩展\",\n\t\t\t\"default\": false,\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"extend\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.config/properties/extends.string.json\n// module id = 148\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"newInstance\": \"cannot\",\n\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"name\": \"Enumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"actions\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用执行器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"comparers\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用比较器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"config\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"全局配置\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"predicates\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用筛选器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectors\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"description\": \"一个包含了一些常用选择器的对象\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.19\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"between\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"step\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"empty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成一个空序列\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"from\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"source\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"generate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"将使用生成器生成一个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"generate\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"noConflict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"释放当前的全局 Enumerable 对象, 解决冲突\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"range\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.19\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"step\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"repeat\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\t\t\"description\": \"将生成一个序列, 其中包含指定数量个重复的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.json\n// module id = 149\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.predicates\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的筛选器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"exists\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"非空筛选器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"equality\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"not\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"properties\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"properties\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"properties\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"regexp\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"regexp\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"regexp\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"same\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个相同筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selector\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"strict\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个全等筛选器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates.json\n// module id = 150\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/meta.json\n// module id = 151\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个相等筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 通过指定的相等比较器比较参数是否与指定的值相等\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/equality.json\n// module id = 152\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultExistsPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个否定筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 如果 predicate 返回 true, 这该函数返回 false, 反之亦然\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"exists\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/not.json\n// module id = 153\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"array\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个属性筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 该筛选器通过深度对比 properties 所描述的键值对关系来判断传入参数是否符合条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/properties.json\n// module id = 154\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"regexp\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"RegExp\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个正则筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较通过指定的 selector 映射传入的参数值后的值是否与匹配指定的正则表达式\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json\n// module id = 155\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个相同筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较参数是否与指定的值相同\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/same.json\n// module id = 156\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultExistsPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个映射筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 该筛选器通过判断由 selector 映射传入的参数值后的值是否符合指定的 predicate 条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"exists\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/selector.json\n// module id = 157\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个全等筛选器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个筛选器函数, 比较参数是否与指定的值全等\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/methods/strict.json\n// module id = 158\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的筛选器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该筛选器接受一个元素和该元素所在序列的索引作为参数, 在任何时候都返回 true, 表示满足条件, 通常表示为 defaultPredicate\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/properties/default.json\n// module id = 159\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"非空筛选器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该筛选器接受一个元素和该元素所在序列的索引作为参数, 在参数值不为空( undefined, null )的时候返回 true, 表示满足条件, 通常表示为 defaultExistsPredicate\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.predicates/properties/exists.json\n// module id = 160\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\",\n\t\"name\": \"Enumerable.selectors\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"children\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的子节点集选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"default\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"join\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的联接选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的键选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"parent\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的父节点键选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"result\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的结果选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"value\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"默认的值选择器\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"property\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors.json\n// module id = 161\n// module chunks = 0","module.exports = {\n\t\"type\": \"object\",\n\t\"since\": \"2.1.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/meta.json\n// module id = 162\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"property\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个属性选择器\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"返回一个一元选择器函数, 该选择器返回输入对象的指定属性值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/methods/property.json\n// module id = 163\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的子节点集选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值包含 children 属性, 将返回输入值的 children 属性值, 否则返回输入的值本身. 通常表示为 defaultChildrenSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/children.json\n// module id = 164\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 并返回输入的值本身. 通常表示为 defaultSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/default.json\n// module id = 165\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的联接选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个二元选择器, 它接受两个输入值, 返回一个对象, 该对象的 outer 属性对应第一个参数值, inner 属性对应第二个参数值\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/join.json\n// module id = 166\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的键选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 key 属性值, 否则返回输入的值本身. 通常表示为 defaultKeySelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/key.json\n// module id = 167\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的父节点键选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 返回输入值的 parent 属性值. 通常表示为 defaultParentSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/parent.json\n// module id = 168\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的结果选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个二元选择器, 它接受两个输入值, 并返回第二个参数值. 通常表示为 defaultResultSelector\",\n\t\t\t\t\"通常情况下, 此函数的第一个参数为源序列的元素, 第二个参数为需要与第一个序列关联操作的第二个序列的元素或者是一个通过计算得来的与第一个参数有一定联系的数值\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/result.json\n// module id = 169\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"function\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"默认的值选择器\",\n\t\t\t\"remarks\": [\n\t\t\t\t\"该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 value 属性值, 否则返回输入的值本身. 通常表示为 defaultValueSelector\"\n\t\t\t],\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable.selectors/properties/value.json\n// module id = 170\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"constructors\": {\n\t\t\"histroys\": [\n\t\t\t{\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"overloads\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"newInstance\": \"cannot\",\n\t\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/meta.json\n// module id = 171\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\"method\": \"from\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/asEnumerable.json\n// module id = 172\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中第一个整数的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中最后一个整数的最大值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"step\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 1,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"步长\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含范围内连续的整数序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"一般的, 生成的新序列中包含 start 与 end.\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/between.json\n// module id = 173\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个不包含任何元素的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成一个空序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/empty.json\n// module id = 174\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的 source 创建一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/from.json\n// module id = 175\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"generate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于生成每个元素的函数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"在生成序列中元素的数目\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个使用指定的生成器生成了所有元素的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将使用生成器生成一个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/generate.json\n// module id = 176\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"boolean\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": false,\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Enumerable\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"class\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"class\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"释放当前的全局 Enumerable 对象, 解决冲突\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/noConflict.json\n// module id = 177\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列中第一个整数的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要生成的连续整数的数目\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含范围内连续的整数序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成指定范围内的整数序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"step\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 1,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"步长\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/range.json\n// module id = 178\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"static\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要重复的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"在生成序列中重复该值的次数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含指定数量重复值的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将生成一个序列, 其中包含指定数量个重复的值\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/methods/repeat.json\n// module id = 179\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用执行器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.actions\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/properties/actions.json\n// module id = 180\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用比较器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.comparers\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/properties/comparers.json\n// module id = 181\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"全局配置\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.config\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/properties/config.json\n// module id = 182\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用筛选器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.predicates\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/properties/predicates.json\n// module id = 183\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"object\",\n\t\t\t\"static\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"一个包含了一些常用选择器的对象\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"Enumerable.selectors\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Enumerable/properties/selectors.json\n// module id = 184\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.18\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IChunk\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"index\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"description\": \"此分块的索引\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IChunk.json\n// module id = 185\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.18\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IChunk/meta.json\n// module id = 186\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"description\": \"此分块的索引\"\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IChunk/properties/index.json\n// module id = 187\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"array\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IEnumerable\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"length\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"size\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"aggregate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"seed\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"func\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"seed\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"func\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"all\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"any\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"asEnumerable\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取一个 IEnumerable 对象\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"average\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"chunk\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"chunk\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"offset\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"combine\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"parentSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"concat\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"连接两个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"contains\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"copyWithin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"target\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"count\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"defaultIfEmpty\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"distinct\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"elementAt\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"elementAtOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"index\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"every\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"except\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"fill\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个数组的所有元素从开始索引填充到具有静态值的结束索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"filter\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"find\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findIndex\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findLast\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"findLastIndex\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"first\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"firstOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"forEach\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"action\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"getEnumerator\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"获取序列的枚举器\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"groupBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"groupJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.17\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"includes\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"用来判断当前数组是否包含某指定的值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"indexOf\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"innerJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"intersect\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"join\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.17\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"split\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"last\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lastIndexOf\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lastOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"leftJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"leftPad\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"length\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"map\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"max\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"min\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"nearBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"elementSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"ofType\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"orderBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"orderByDescending\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pop\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"从数组中删除最后一个元素, 并返回该元素的值\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"product\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"push\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的末尾, 并返回数组的新长度\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rand\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"随机获取序列中的指定数量的元素,组成新的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"random\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中随机的一个元素\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"randomOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reduce\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"initialValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reduceRight\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"initialValue\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reverse\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"反转序列中元素的顺序\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rightJoin\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"inner\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"outerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"innerKeySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"rightPad\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"length\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"selectMany\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.16\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"collectionSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"collectionSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"separate\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将一个递归结构的序列的展开为一个一维解构的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"childrenSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sequenceEqual\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"shift\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"从数组中删除第一个元素, 并返回该元素的值\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"single\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"singleOrDefault\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"defaultValue\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"skip\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过指定的数量的序列中的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"skipWhile\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"slice\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"end\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"some\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"callback\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sort\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"splice\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过删除现有元素和/或添加新元素来更改数组的内容\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"start\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sum\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"take\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从序列的开头返回指定的数量的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"takeWhile\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toArray\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"使用源序列创建一个数组\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toDirectory\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toLookup\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toObject\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"union\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"unshift\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的开头, 并返回新数组的长度\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"values\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"where\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.16\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.17\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"wipe\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.20\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过筛选器剔除序列中满足条件的一定数量的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"predicate\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"count\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"zip\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"通过依次合并元素的方式合并两个序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"other\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"resultSelector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable.json\n// module id = 188\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"array\"\n\t],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/meta.json\n// module id = 189\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"累加器的初始值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"func\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要对每个元素调用的累加器函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"将累加器的最终值转换为结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"result\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"已转换的累加器最终值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法可以很容易地通过一系列值执行计算. 此方法的原理是使用 source 中的每一个元素依次调用一次 func, 每次 func 调用时此方法将传递聚合的值(作为第一个参数传递给 func)与该序列中的元素. 参数 seed 的值作为聚合的初始值来使用. func 执行的结果替换之前的聚合的值. 最后一次 func 执行的结果传递给 resultSelector 得到此方法要获取的最终结果。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"min\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"max\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"average\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548744(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 aggregate 应用累加器函数和结果选择器\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/aggregate.json\n// module id = 190\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列中的每一个元素都在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定是否对序列中的所有元素都满足条件\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"在循环过程中, 当可以确定的结果时, 循环就会立即停止。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法不会返回序列中任何元素, 它只会确认集合中的所有元素是否满足条件\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548541(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 all 以确定是否在序列中的所有元素都满足条件\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/all.json\n// module id = 191\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列中的有任何元素能在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定序列中是否存在满足条件的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"在循环过程中, 当可以确定的结果时, 循环就会立即停止。\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法不会返回序列中任何元素, 它只会确认集合中是否存在满足条件的元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"all\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"contains\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534972(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 any 以确定在序列中是否存在满足条件的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/any.json\n// module id = 192\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个 IEnumerable 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取一个 IEnumerable 对象\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"因为本身已经是 IEnumerable 对象, 所以此方法将返回对象本身\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json\n// module id = 193\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的平均值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"aggregate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549067(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 average 计算平均值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/average.json\n// module id = 194\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"chunk\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于表示分块后每块的数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"offset\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于表示起始分块的位移\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"分块后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"由于受参数 offset 与原序列总长度的影响, 分块后的首个序列与末尾序列的长度可能不等于参数 chunk 的值\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IChunk\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/chunk.json\n// module id = 195\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"parentSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的父节点键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultParentSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"聚合后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"所有父节点键未被匹配的元素将成为新序列的顶层元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"separate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"parent\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/combine.json\n// module id = 196\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列连接的另一个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个将两个序列所有元素的串联产生的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"连接两个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"此方法不用 union 方法因为此方法返回输入序列中的所有原始元素, 而 union 方法只返回唯一元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb302894(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 concat 可串联两个序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/concat.json\n// module id = 197\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要在序列中定位的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"一个对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列包含具有指定的值的元素, 则返回true, 否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定使用指定的相等比较器时, 序列是否包含指定的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"只要找到匹配的元素, 将停止循环比较的过程\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 contains 确定数组是否包含特定元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的示例演示如何实现可在 contains 方法中使用的相等比较器，与使用此比较器确定数组是否包含特定元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/contains.json\n// module id = 198\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"target\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/copyWithin.json\n// module id = 199\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个数字，表示序列中满足函数条件的元素数量\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回一个数字来表示多少个元素指定序列中的满足条件\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"property\": \"length\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"property\": \"size\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535181(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组中的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组中满足条件的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 count 对数组与指定值相符的元素进行计数。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/count.json\n// module id = 200\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"序列为空时要返回的序列所包含的值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果源序列为空, 返回包含单一 defaultValue 元素的新序列, 否则返回源序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"此方法可以用于与 groupJoin 方法结合使用, 生成一个左外部联接\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb355419(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 defaultIfEmpty 方法并指定默认值。 第一个序列不为空，且第二个序列为空。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json\n// module id = 201\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含源序列中所有非重复元素的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取包含源序列中所有非重复元素的新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"此方法的结果可能是无序的\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb338049(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 distinct 要返回的整数序列中非重复元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 distinct 中可用的相等比较器，并在实现此比较器后对一系列数据使用 distinct 方法返回去除重复数据后的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/distinct.json\n// module id = 202\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要检索的从零开始的元素索引\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"源序列中指定位置处的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果 index 超出范围, 此方法将引发异常. 如果希望 index 超出范围时返回默认值, 请使用 elementAtOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"elementAtOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb299233(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 elementAt 以返回特定位置处的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/elementAt.json\n// module id = 203\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要检索的从零开始的元素索引\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"如果 index 超出范围时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果索引超出源序列中的界限返回 defaultValue, 否则返回源序列中的指定位置处的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"elementAt\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb494386(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 elementAtOrDefault 获取一个索引超出数组界限的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json\n// module id = 204\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"测试数组的所有元素是否都通过了指定函数的测试\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/every\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/every.json\n// module id = 205\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要在返回序列中移除存在于源序列中的元素序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的差集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的差集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"intersect\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb336390(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 except 方法来比较两个数字序列并将其返回仅在第一个序列中出现的元素组成的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 except 中可用的相等比较器，并在实现此比较器后对连个序列中的元素使用此比较器比较后返回仅在第一个序列中出现的元素组成的新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/except.json\n// module id = 206\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个数组的所有元素从开始索引填充到具有静态值的结束索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/fill.json\n// module id = 207\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/filter.json\n// module id = 208\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/find\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/find.json\n// module id = 209\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的第一个元素的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/findIndex.json\n// module id = 210\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/findLast.json\n// module id = 211\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回数组中满足提供的测试函数的最后一个元素的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json\n// module id = 212\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的第一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的第一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 firstOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"firstOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535050(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 first 返回数组的第一个元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 first 返回数组中满足条件的第一个元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/first.json\n// module id = 213\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的第一个元素. 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"first\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549039(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何对空数组使用 firstOrDefault 。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何通过传入一个筛选器使用 firstOrDefault 。 在第二个调用到方法中，在满足条件的数组中没有任何元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json\n// module id = 214\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"action\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"循环的执行体\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultAction\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.actions\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/forEach.json\n// module id = 215\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerator\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"获取序列的枚举器\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerator\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json\n// module id = 216\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"elementSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源元素映射到组中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个组中创建结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"对一组及其键的投影的结果的集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535049(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 对序列的元素进行分组。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 分组一系列元素并对结果进行映射。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupBy 对要投影的一系列元素进行分组并对结果进行映射。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"2-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"3-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/groupBy.json\n// module id = 217\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的元素和联接序列的匹配元素集合中创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行分组的联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 groupJoin 来对两个序列执行分组的联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/groupJoin.json\n// module id = 218\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"用来判断当前数组是否包含某指定的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/includes.json\n// module id = 219\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultStrictEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回在数组中可以找到给定元素的第一个索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/indexOf.json\n// module id = 220\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"join\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 innerJoin 来执行基于对一个公共键的两个序列的内部联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/innerJoin.json\n// module id = 221\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要在返回序列中返回存在于源序列中的元素序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的交集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的交集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"except\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb355408(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 intersect 获取在两个整数的序列中都存在的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何实现在 intersect 中可用的相等比较器，并在实现此比较器后对两个序列使用 intersect 方法返回由每个原序列中都存在的元素组成新序列。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/intersect.json\n// module id = 222\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"split\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/join\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"0.1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 join 来执行基于对一个公共键的两个序列的内部联接。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"innerJoin\",\n\t\t\t\t\t\t\t\"property\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"join\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/join.json\n// module id = 223\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的最后一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的最后一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 lastOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"lastOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549138(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/last.json\n// module id = 224\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultStrictEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"法返回指定元素在数组中的最后一个的索引\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"strict\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json\n// module id = 225\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的最后一个元素, 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"last\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548915(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json\n// module id = 226\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\",\n\t\t\t\t\t\t\t\t\"其中参数 other 的值可能为 undefined\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部左联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/leftJoin.json\n// module id = 227\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"length\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充后的总长度\",\n\t\t\t\t\t\t\t\t\"必须为正整数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充的元素\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"补充了指定内容后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"rightPad\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/leftPad.json\n// module id = 228\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/map\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/map.json\n// module id = 229\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"generics\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"TResult\",\n\t\t\t\t\t\t\t\"wheres\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"IComparable\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于计算的最大值的可比较的结果类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"TResult\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于比较每个元素大小的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"TResult\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的最大值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"min\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548659(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 max 来确定序列中的最大值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 max 来确定序列中投影值的最大值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/max.json\n// module id = 230\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"generics\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"TResult\",\n\t\t\t\t\t\t\t\"wheres\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"IComparable\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于计算的最小值的可比较的结果类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"TResult\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于比较每个元素大小的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"TResult\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"TResult\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的最小值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"max\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548779(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 min 来确定序列中的最小值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 min 来确定序列中投影值的最小值。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/min.json\n// module id = 231\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"elementSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源元素映射到组中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个组中创建结果值的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"grouping\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IGrouping\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"对一组及其键的投影的结果的集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/nearBy.json\n// module id = 232\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"class\",\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"筛选序列元素所根据的类型\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中的元素类型为指定类型的所有元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的类型筛选出的新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb360913(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 ofType 来筛选序列中的元素。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"href\": \"1-2.1.19.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/ofType.json\n// module id = 233\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行升序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"按使用指定的比较器按升序对序列的元素进行排序\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderByDescending\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IOrderedEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549422(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 orderBy 序列的元素进行排序。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/orderBy.json\n// module id = 234\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行降序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"按使用指定的比较器按降序对序列的元素进行排序\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IOrderedEnumerable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548916(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 orderByDescending 对序列中使用转换函数和自定义比较器按降序对元素进行排序。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json\n// module id = 235\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从数组中删除最后一个元素, 并返回该元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/pop.json\n// module id = 236\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的乘积\",\n\t\t\t\t\t\t\t\"如果值序列不包含任何元素,返回NaN\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"sum\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/product.json\n// module id = 237\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的末尾, 并返回数组的新长度\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/push\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/push.json\n// module id = 238\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"新序列的长度\",\n\t\t\t\t\t\t\t\t\"必须是正整数\",\n\t\t\t\t\t\t\t\t\"为 0 时新序列包含原序列的全部元素\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"随机排序后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"随机获取序列中的指定数量的元素,组成新的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/rand.json\n// module id = 239\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中随机的一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中随机的一个元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列不包含任何元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 randomOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"randomOrDefault\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/random.json\n// module id = 240\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中随机的一个元素. 如果未找到元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"random\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json\n// module id = 241\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"initialValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/reduce.json\n// module id = 242\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"seed\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"initialValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/reduceRight.json\n// module id = 243\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个序列，其元素以相反顺序对应于输入序列的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"反转序列中元素的顺序\",\n\t\t\t\t\t\"warnings\": [\n\t\t\t\t\t\t\"如果开启对 Array 的扩展, 则 Array 对象原生的 reverse 方法也将返回 IEnumerable 对象, 而不只是 Array 对象\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358497(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/reverse.json\n// module id = 244\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"inner\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要与源序列联接的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从两个匹配元素创建结果元素的函数\",\n\t\t\t\t\t\t\t\t\"其中参数 element 的值可能为 undefined\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"outerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从源序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"innerKeySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从联接序列的每个元素提取联接键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"通过对两个序列执行内部右联接获得的结果集合\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"join\",\n\t\t\t\t\t\t\t\"index\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftJoin\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultJoinSelector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/rightJoin.json\n// module id = 245\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.18\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"length\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充后的总长度\",\n\t\t\t\t\t\t\t\t\"必须为正整数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"补充的元素\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"补充了指定内容后的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"leftPad\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/rightPad.json\n// module id = 246\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个序列，其元素以相反顺序对应于输入序列的元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将序列中的每个元素投影到新序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534869(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 select 对序列中的每个元素进行投影。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 select 对一系列值进行投影，并使用每个元素的索引。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/select.json\n// module id = 247\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.16\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"collectionSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要应用于输入序列中的每个元素转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要应用于中间序列的每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultResultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"sourceElement\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"collectionElement\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一对多转换函数对输入序列中的每个元素调用的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"select\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"groupBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"method\": \"result\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534732(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"examples\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并使用每个外部元素的索引。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并且使用结果选择器函数来保持结果元素与源序列的对应关系。\",\n\t\t\t\t\t\t\t\"script\": {\n\t\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\t\"href\": \"3.js\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/selectMany.json\n// module id = 248\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"childrenSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的子节点集合的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultChildrenSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于将每个源节点映射到结果序列中的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"展开后的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个递归结构的序列的展开为一个一维解构的序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"selectMany\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"combine\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"children\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/separate.json\n// module id = 249\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对值进行比较的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果两个源序列的长度相等, 并且其相应元素根据 comparer 比较器比较的结果都为相等, 则返回true, 否则返回 false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb342073(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json\n// module id = 250\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从数组中删除第一个元素, 并返回该元素的值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/shift.json\n// module id = 251\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的唯一个元素\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 singleOrDefault 方法\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"singleOrDefault\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb535118(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/single.json\n// module id = 252\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"defaultValue\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"找不到匹配元素时返回的默认值\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultPredicate\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"序列中通过指定函数检测的唯一元素. 如果未找到匹配元素, 则返回 defaultValue\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"single\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.predicates\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549274(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json\n// module id = 253\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"返回剩余元素前要跳过的元素数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中的指定索引后出现的所有元素的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"跳过指定的数量的序列中的元素，然后返回剩余元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中元素的个数少于count个, 则返回空序列\",\n\t\t\t\t\t\t\"如果count小于或等于0, 则返回包含全部源序列元素的新序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skipWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"take\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358985(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/skip.json\n// module id = 254\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"跳过从源序列第一个元素开始, 连续的所有执行 predicate 检测返回 true 的元素, 后剩余的元素组成的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"跳过序列中指定条件为 true 的元素，然后返回剩余元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中所有元素执行 predicate 检测时都返回 true, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skip\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"takeWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549288(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/skipWhile.json\n// module id = 255\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"0\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"end\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/slice.json\n// module id = 256\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"callback\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"测试数组中的某些元素是否通过了指定函数的测试\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/some\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/some.json\n// module id = 257\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"在适当的位置对数组的元素进行排序, 并返回数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/sort.json\n// module id = 258\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"start\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"infinity\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过删除现有元素和/或添加新元素来更改数组的内容\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/splice.json\n// module id = 259\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"selector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"应用于每个元素的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"值序列的和值\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"average\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549046(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/sum.json\n// module id = 260\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要返回的元素数量\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含从输入序列的起始位置开始, 指定的数量的连续元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从序列的开头返回指定的数量的连续元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中元素的个数少于count个, 则返回包含全部源序列元素的新序列\",\n\t\t\t\t\t\t\"如果count小于或等于0, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skip\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"takeWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb503062(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/take.json\n// module id = 261\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中出现检测不能够通过在元素之前的所有元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"返回序列中从起始位置开始指定的条件为 true 的连续元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\",\n\t\t\t\t\t\t\"如果源序列中第一个元素执行 predicate 检测时返回 false, 则返回空序列\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"skipWhile\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"take\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/takeWhile.json\n// module id = 262\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"一个包含输入序列中的所有元素的数组\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"使用源序列创建一个数组\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb298736(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/toArray.json\n// module id = 263\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Directory\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toObject\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Directory\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/toDirectory.json\n// module id = 264\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Lookup\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Lookup\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/toLookup.json\n// module id = 265\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"提取出的 Object 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"从 IEnumerable 中获取一个对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toDirectory\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/toObject.json\n// module id = 266\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"构成并集的第二个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于判定两个序列元素的值是否相等的相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultEqualityComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含这两个序列的元素的并集的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"生成两个序列的并集\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"union\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"intersect\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb358407(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/union.json\n// module id = 267\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"params\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将一个或多个元素添加到数组的开头, 并返回新数组的长度\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\",\n\t\t\t\t\t\t\t\"title\": \"Mozilla MDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/unshift.json\n// module id = 268\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含输入序列中所有满足条件的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过筛选器筛选值序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb549418(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.17\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/where.json\n// module id = 269\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.20\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"predicate\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于检测每个元素是否满足条件的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": 0,\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"需要剔除的数量, 默认全部剔除\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"剔除输入序列中满足条件的指定数量的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过筛选器剔除序列中满足条件的一定数量的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"predicate\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/wipe.json\n// module id = 270\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要合并的第二个序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"resultSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"一个指定如何合并来自两个序列的元素的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"包含合并的两个输入序列的元素组成的新序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过依次合并元素的方式合并两个序列\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"guide\": \"selector\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/methods/zip.json\n// module id = 271\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"override\": true,\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"property\": \"size\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/properties/length.json\n// module id = 272\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"number\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"所包含的元素个数\",\n\t\t\t\"sees\": [\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"property\": \"length\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\"method\": \"count\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerable/properties/size.json\n// module id = 273\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"IEnumerator\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"current\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"description\": \"当前游标所指向的元素\",\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"moveNext\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"将游标移动到下一个元素, 并返回状态\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"reset\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"重置 IEnumerator 对象, 将游标重置为指向第一个元素\",\n\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerator.json\n// module id = 274\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerator/meta.json\n// module id = 275\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"如果游标成功移动至下一个元素, 则返回true, 否则返回false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"将游标移动到下一个元素, 并返回状态\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerator/methods/moveNext.json\n// module id = 276\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"重置 IEnumerator 对象, 将游标重置为指向第一个元素\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerator/methods/reset.json\n// module id = 277\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"readonly\": true,\n\t\t\t\"description\": \"当前游标所指向的元素\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IEnumerator/properties/current.json\n// module id = 278\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IGrouping\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"name\": \"key\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"description\": \"此分组的key\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"readonly\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IGrouping.json\n// module id = 279\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IGrouping/meta.json\n// module id = 280\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"type\": \"any\",\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"description\": \"此分组的key\"\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"readonly\": true\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IGrouping/properties/key.json\n// module id = 281\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IMapEnumerable\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"forEach\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"action\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"thisArg\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toDirectory\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toLookup\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"valueSelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IMapEnumerable.json\n// module id = 282\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IMapEnumerable/meta.json\n// module id = 283\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"action\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"循环的执行体\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultAction\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"IEnumerable\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"thisArg\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"遍历序列中的每个元素, 使用元素执行指定的操作\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"forEach\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.actions\",\n\t\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IMapEnumerable/methods/forEach.json\n// module id = 284\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Directory\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toDirectory\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json\n// module id = 285\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于提取每个元素的键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultKeySelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"valueSelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从每个元素产生结果元素值的转换函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultValueSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"Lookup\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"toLookup\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\t\"property\": \"value\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json\n// module id = 286\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": [],\n\t\"name\": \"IOrderedEnumerable\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"thenBy\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"thenByDescending\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": \"2.1.18\",\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.19\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"keySelector\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IOrderedEnumerable.json\n// module id = 287\n// module chunks = 0","module.exports = {\n\t\"type\": \"interface\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [\n\t\t\"IEnumerable\"\n\t],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IOrderedEnumerable/meta.json\n// module id = 288\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行升序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按升序对序列的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderBy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534500(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json\n// module id = 289\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"lazy\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"keySelector\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于从元素中提取键的函数\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSelector\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"键进行大小比较的大小比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultComparer\",\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IOrderedEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"元素根据某个键进行降序排序后的结果序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"执行后续排序中使用指定的比较器按降序对序列的元素\",\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"此方法通过延迟执行的方式实现\"\n\t\t\t\t\t],\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"IEnumerable\",\n\t\t\t\t\t\t\t\"method\": \"orderByDescending\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"href\": \"https://msdn.microsoft.com/{language}/library/bb534489(v=vs.110).aspx\",\n\t\t\t\t\t\t\t\"title\": \"Microsoft MSDN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"since\": \"2.1.19\",\n\t\t\t\"ref\": true,\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json\n// module id = 290\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"Directory\"\n\t],\n\t\"name\": \"Lookup\",\n\t\"properties\": [],\n\t\"methods\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"set\",\n\t\t\t\"histroys\": [\n\t\t\t\t{\n\t\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\t\"deprecated\": 0,\n\t\t\t\t\t\"overloads\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的序列\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"key\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"comparer\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Lookup.json\n// module id = 291\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [\n\t\t\"Directory\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Lookup/meta.json\n// module id = 292\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"IEnumerable\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"键所对应的序列\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器查找指定键对应的序列\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Lookup/methods/get.json\n// module id = 293\n// module chunks = 0","module.exports = {\n\t\"histroys\": [\n\t\t{\n\t\t\t\"since\": \"2.1.15\",\n\t\t\t\"overloads\": [\n\t\t\t\t{\n\t\t\t\t\t\"override\": true,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于查找的键\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"IEnumerable\",\n\t\t\t\t\t\t\t\t\"Iterator\",\n\t\t\t\t\t\t\t\t\"array\",\n\t\t\t\t\t\t\t\t\"object\",\n\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"要设置的序列\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"comparer\",\n\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"symbol\",\n\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"defaultValue\": \"defaultSameComparer\",\n\t\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\t\"用于对键进行比较相等比较器\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"declare\": {\n\t\t\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\"descriptions\": [\n\t\t\t\t\t\t\t\"返回 Directory 对象本身\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"description\": \"通过指定的相等比较器为指定键设置对应的序列\",\n\t\t\t\t\t\"sees\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\t\"property\": \"same\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Lookup/methods/set.json\n// module id = 294\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": [],\n\t\"name\": \"Plugin\",\n\t\"properties\": [],\n\t\"methods\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Plugin.json\n// module id = 295\n// module chunks = 0","module.exports = {\n\t\"type\": \"class\",\n\t\"since\": \"2.1.15\",\n\t\"extends\": [],\n\t\"implements\": []\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/apis/Plugin/meta.json\n// module id = 296\n// module chunks = 0","module.exports = {\n\t\"class\": \"类\",\n\t\"interface\": \"接口\",\n\t\"object\": \"对象\",\n\t\"constructor\": \"构造方法\",\n\t\"constructors\": \"构造方法\",\n\t\"property\": \"属性\",\n\t\"properties\": \"属性\",\n\t\"method\": \"方法\",\n\t\"methods\": \"方法\",\n\t\"since\": \"最低版本\",\n\t\"deprecated\": \"最高版本\",\n\t\"override\": \"重写\",\n\t\"details\": \"详情\",\n\t\"description\": \"描述\",\n\t\"summary\": \"摘要\",\n\t\"warning\": \"注意\",\n\t\"warnings\": \"注意\",\n\t\"remark\": \"备注\",\n\t\"remarks\": \"备注\",\n\t\"example\": \"示例\",\n\t\"examples\": \"示例\",\n\t\"static\": \"静态的\",\n\t\"see\": \"参考\",\n\t\"declare\": \"声明\",\n\t\"parameters\": \"参数\",\n\t\"parameter\": \"参数\",\n\t\"returns\": \"返回值\",\n\t\"generics\": \"类型参数\",\n\t\"apis\": \"API文档\",\n\t\"guide\": \"教程\",\n\t\"publish\": \"发布\",\n\t\"time\": \"时间\",\n\t\"date\": \"日期\",\n\t\"prepublish\": \"预发布\",\n\t\"version\": \"版本\",\n\t\"author\": \"作者\",\n\t\"email\": \"邮箱\",\n\t\"project\": \"项目\",\n\t\"default\": \"默认\",\n\t\"value\": \"值\",\n\t\"defaultValue\": \"默认值\",\n\t\"readonly\": \"只读\",\n\t\"lazy\": \"延迟执行\",\n\t\"try\": \"试一试\",\n\t\"run\": \"运行\",\n\t\"clear\": \"清空\",\n\t\"close\": \"收起\",\n\t\"loadRuntime\": \"载入运行时\",\n\t\"executing\": \"执行中\",\n\t\"enableExtend\": \"启用 Array 扩展\",\n\t\"newInstance\": {\n\t\t\"only\": \"只能使用new运算符\",\n\t\t\"both\": \"可以使用new运算符,也可以直接调用\",\n\t\t\"cannot\": \"不能使用new运算符\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/caption.json\n// module id = 297\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"publish\": \"2017-03-27\",\n\t\t\"contents\": [\n\t\t\t\"优化了部分代码结构\",\n\t\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t\t],\n\t\t\"version\": \"2.1.15\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-05\",\n\t\t\"contents\": [\n\t\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t\t],\n\t\t\"version\": \"2.1.16\"\n\t},\n\t{\n\t\t\"publish\": \"2017-04-12\",\n\t\t\"contents\": [\n\t\t\t\"新增 findLast 方法\",\n\t\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t\t],\n\t\t\"version\": \"2.1.17\"\n\t},\n\t{\n\t\t\"publish\": \"2017-08-30\",\n\t\t\"contents\": [\n\t\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\t\"\",\n\t\t\t\"Bugs\",\n\t\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t\t],\n\t\t\"version\": \"2.1.18\"\n\t},\n\t{\n\t\t\"publish\": \"2017-09-08\",\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t\t],\n\t\t\"version\": \"2.1.19\"\n\t},\n\t{\n\t\t\"prepublish\": true,\n\t\t\"contents\": [\n\t\t\t\"新增(New):\",\n\t\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\t\"\",\n\t\t\t\"优化(Optimization):\",\n\t\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\t\"2. 优化 defaultValueSelector\",\n\t\t\t\"\",\n\t\t\t\"修复(Fixed):\",\n\t\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t\t],\n\t\t\"version\": \"2.1.20.pre\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change.json\n// module id = 298\n// module chunks = 0","module.exports = {\n\t\"publish\": \"2017-03-27\",\n\t\"contents\": [\n\t\t\"优化了部分代码结构\",\n\t\t\"新增 对 arrayComparer 的默认支持\",\n\t\t\"新增了 对绝大部分 selector, predicate, comparer 参数校验\",\n\t\t\"新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能\",\n\t\t\"新增 Enumerable.predicates.exists 属性, 表示非空筛选器\",\n\t\t\"新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器\",\n\t\t\"新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器\",\n\t\t\"新增 Enumerable.predicates.selector 方法, 生成选择筛选器\",\n\t\t\"新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.15.json\n// module id = 299\n// module chunks = 0","module.exports = {\n\t\"publish\": \"2017-04-05\",\n\t\"contents\": [\n\t\t\"优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug\",\n\t\t\"修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result\",\n\t\t\"修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致\",\n\t\t\"增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.16.json\n// module id = 300\n// module chunks = 0","module.exports = {\n\t\"publish\": \"2017-04-12\",\n\t\"contents\": [\n\t\t\"新增 findLast 方法\",\n\t\t\"新增 Enumerable.comparers.greater 方法\",\n\t\t\"新增 Enumerable.comparers.less 方法\",\n\t\t\"新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器\",\n\t\t\"新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器\",\n\t\t\"优化 comparer / predicate / selector 类型的参数 转化过程的效率\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.17.json\n// module id = 301\n// module chunks = 0","module.exports = {\n\t\"publish\": \"2017-08-30\",\n\t\"contents\": [\n\t\t\"新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型\",\n\t\t\"新增 Enumerable.types 对象,包含各参考类型的常量值\",\n\t\t\"Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用\",\n\t\t\"新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器\",\n\t\t\"新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接\",\n\t\t\"修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug\",\n\t\t\"移除过时的功能 arrayComparer、predicateComparer\",\n\t\t\"新增 Enumerable.extends.lazy 配置选项\",\n\t\t\"修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题\",\n\t\t\"新增 IEnumerable.prototype.chunk 方法用来对序列进行分块\",\n\t\t\"新增 IEnumerable.prototype.product 方法用来计算乘积\",\n\t\t\"新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法\",\n\t\t\"新增 IEnumerable.prototype.rand 方法\",\n\t\t\"\",\n\t\t\"Bugs\",\n\t\t\"调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.18.json\n// module id = 302\n// module chunks = 0","module.exports = {\n\t\"publish\": \"2017-09-08\",\n\t\"contents\": [\n\t\t\"新增(New):\",\n\t\t\"1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持\",\n\t\t\"2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector\",\n\t\t\"3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑\",\n\t\t\"4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题\",\n\t\t\"\",\n\t\t\"优化(Optimization):\",\n\t\t\"1. 优化了 join 方法的处理逻辑\",\n\t\t\"2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读\",\n\t\t\"3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值\",\n\t\t\"4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法\",\n\t\t\"\",\n\t\t\"修复(Fixed):\",\n\t\t\"1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题\",\n\t\t\"2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题\",\n\t\t\"3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.19.json\n// module id = 303\n// module chunks = 0","module.exports = {\n\t\"prepublish\": true,\n\t\"contents\": [\n\t\t\"新增(New):\",\n\t\t\"1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素\",\n\t\t\"2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素\",\n\t\t\"3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组\",\n\t\t\"4. 新增 Enumerable.between 方法, 生成范围内的整数序列\",\n\t\t\"5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致\",\n\t\t\"6. 为 Enumerable.range 方法新增第三个参数, 设置步长\",\n\t\t\"7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列\",\n\t\t\"8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并\",\n\t\t\"\",\n\t\t\"优化(Optimization):\",\n\t\t\"1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑\",\n\t\t\"2. 优化 defaultValueSelector\",\n\t\t\"\",\n\t\t\"修复(Fixed):\",\n\t\t\"1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/change/2.1.20.pre.json\n// module id = 304\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"简介\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"安装\"\n\t},\n\t{\n\t\t\"code\": \"guides\",\n\t\t\"title\": \"教程\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"instance\",\n\t\t\t\t\"title\": \"获取 IEnumerable 实例\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"use\",\n\t\t\t\t\"title\": \"开始使用\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"config\",\n\t\t\t\t\"title\": \"配置\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"selector\",\n\t\t\t\t\"title\": \"选择器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"predicate\",\n\t\t\t\t\"title\": \"筛选器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"comparer\",\n\t\t\t\t\"title\": \"比较器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"action\",\n\t\t\t\t\"title\": \"执行器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"iterator\",\n\t\t\t\t\"title\": \"迭代器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"enumerator\",\n\t\t\t\t\"title\": \"枚举器\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"extend\",\n\t\t\t\t\"title\": \"扩展\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"plugin\",\n\t\t\t\t\"title\": \"插件\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"apis\",\n\t\t\"title\": \"API文档\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"code\": \"Directory\",\n\t\t\t\t\"title\": \"Directory 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Entry\",\n\t\t\t\t\"title\": \"Entry 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable\",\n\t\t\t\t\"title\": \"Enumerable 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.actions\",\n\t\t\t\t\"title\": \"Enumerable.actions 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.comparers\",\n\t\t\t\t\"title\": \"Enumerable.comparers 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.config\",\n\t\t\t\t\"title\": \"Enumerable.config 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.predicates\",\n\t\t\t\t\"title\": \"Enumerable.predicates 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Enumerable.selectors\",\n\t\t\t\t\"title\": \"Enumerable.selectors 对象\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IChunk\",\n\t\t\t\t\"title\": \"IChunk 接口\",\n\t\t\t\t\"since\": \"2.1.18\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerable\",\n\t\t\t\t\"title\": \"IEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IEnumerator\",\n\t\t\t\t\"title\": \"IEnumerator 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IGrouping\",\n\t\t\t\t\"title\": \"IGrouping 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IMapEnumerable\",\n\t\t\t\t\"title\": \"IMapEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"IOrderedEnumerable\",\n\t\t\t\t\"title\": \"IOrderedEnumerable 接口\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Lookup\",\n\t\t\t\t\"title\": \"Lookup 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"code\": \"Plugin\",\n\t\t\t\t\"title\": \"Plugin 类\",\n\t\t\t\t\"since\": \"2.1.15\",\n\t\t\t\t\"deprecated\": \"2.1.20.pre\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"更新日志\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"关于\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/directory.json\n// module id = 305\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"code\": \"introduction\",\n\t\t\"title\": \"简介\"\n\t},\n\t{\n\t\t\"code\": \"install\",\n\t\t\"title\": \"安装\"\n\t},\n\t\"guides\",\n\t\"apis\",\n\t{\n\t\t\"code\": \"change\",\n\t\t\"title\": \"更新日志\"\n\t},\n\t{\n\t\t\"code\": \"about\",\n\t\t\"title\": \"关于\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/directory.meta.json\n// module id = 306\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable.json\n// module id = 307\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\n// 确定数组中比 “香蕉” 更长的字符串\\r\\nlet longestName = fruits.asEnumerable().aggregate(\\\"香蕉\\\",\\r\\n\\t\\t(longest, next) => next.length > longest.length ? next : longest,\\r\\n\\t\\t// 返回最终结果\\r\\n\\t\\tfruit => `水果 “${ fruit }”`);\\r\\n\\r\\nconsole.log(`最长的字符串是${ longestName }`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 最长的字符串是水果 “百香果”\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/aggregate.json\n// module id = 308\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// 创建一个宠物的数组。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 10 },\\r\\n    { name: \\\"小黑\\\", age: 14 },\\r\\n    { name: \\\"旺财\\\", age: 6 }\\r\\n];\\r\\n\\r\\n// 确实是否所有的宠物名称\\r\\n// 都是“小”字开头的。\\r\\nlet allStartWithXiao = pets.asEnumerable().all(pet => pet.name.startsWith(\\\"小\\\"));\\r\\n\\r\\nconsole.log(`${ allStartWithXiao ? \\\"所有\\\" : \\\"不是所有\\\" }宠物的名字都是以“小”字开头的。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  不是所有宠物的名字都是以“小”字开头的。\",\n\t\"2.js\": \"let people = [\\r\\n    {\\r\\n        lastName: \\\"老王\\\",\\r\\n        pets: [\\r\\n            { name: \\\"小白\\\", age: 10 },\\r\\n            { name: \\\"机器人\\\", age: 14 },\\r\\n            { name: \\\"旺财\\\", age: 6 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老郑\\\",\\r\\n        pets: [\\r\\n            { name: \\\"雪诺\\\", age: 1 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老吴\\\",\\r\\n        pets: [\\r\\n            { name: \\\"贝贝\\\", age: 8 }\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        lastName: \\\"老周\\\",\\r\\n        pets: [\\r\\n            { name: \\\"甜心\\\", age: 2 },\\r\\n            { name: \\\"大河\\\", age: 13 }\\r\\n        ]\\r\\n    }\\r\\n];\\r\\n\\r\\n// 确定谁的宠物都是大于5岁的。\\r\\nlet names = people.asEnumerable()\\r\\n        .where(person => person.pets.all(pet => pet.age > 5))\\r\\n        .select(person => person.lastName);\\r\\n\\r\\nfor (let name of names) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n/* 这段代码的输出结果如下：\\r\\n *\\r\\n * 老王\\r\\n * 老吴\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/all.json\n// module id = 309\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// 创建一个宠物的数组。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 8, vaccinated: true },\\r\\n    { name: \\\"机器人\\\", age: 4, vaccinated: false },\\r\\n    { name: \\\"旺财\\\", age: 1, vaccinated: false }\\r\\n];\\r\\n\\r\\n// 确定是否存在年龄大于1岁且没有接种疫苗的宠物\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`${ unvaccinated ? \\\"有\\\" : \\\"没有\\\" }超过一岁未接种疫苗的动物。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  有超过一岁未接种疫苗的动物。\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/any.json\n// module id = 310\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json\n// module id = 311\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [ \\\"10007\\\", \\\"37\\\", 299846234235 ];\\r\\n\\r\\nlet average = numbers.asEnumerable().average();\\r\\n\\r\\nconsole.log(`平均数是${ average }。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 平均数是99948748093。\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/average.json\n// module id = 312\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/chunk.json\n// module id = 313\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let cats = [\\r\\n    { name: \\\"花斑虎\\\", age: 3 },\\r\\n    { name: \\\"汤姆\\\", age: 14 },\\r\\n    { name: \\\"懒猫\\\", age: 9 }\\r\\n];\\r\\n\\r\\nlet dogs = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = cats.asEnumerable().select(cat => cat.name)\\r\\n        .concat(dogs.asEnumerable().select(dog => dog.name));\\r\\n\\r\\nfor (let name of query) {\\r\\n    console.log(name);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 花斑虎\\r\\n// 汤姆\\r\\n// 懒猫\\r\\n// 小白\\r\\n// 机器人\\r\\n// 旺财\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/concat.json\n// module id = 314\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"香蕉\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\nlet fruit = \\\"芒果\\\";\\r\\n\\r\\nlet hasMango = fruits.asEnumerable().contains(fruit);\\r\\n\\r\\nconsole.log(`数组中${ hasMango ? \\\"含\\\" : \\\"不含\\\" }有“${ fruit }”。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 数组中含有“芒果”。\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果水果的名称和数目相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet apple = { name: \\\"苹果\\\", code: 9 };\\r\\nlet kiwi = { name: \\\"奇异果\\\", code: 8 };\\r\\n\\r\\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\\r\\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\\r\\n\\r\\nconsole.log(\\\"苹果? \\\" + hasApple);\\r\\nconsole.log(\\\"奇异果? \\\" + hasKiwi);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果? true\\r\\n 奇异果? false\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/contains.json\n// module id = 315\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/copyWithin.json\n// module id = 316\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let fruits = [ \\\"苹果\\\", \\\"香蕉\\\", \\\"芒果\\\", \\\"橘子\\\", \\\"百香果\\\", \\\"葡萄\\\" ];\\r\\n\\r\\nlet numberOfFruits = fruits.asEnumerable().count();\\r\\n\\r\\nconsole.log(`数组中有${ numberOfFruits }种水果。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 数组中有6种水果。\\r\\n\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", vaccinated: true },\\r\\n    { name: \\\"机器人\\\", vaccinated: false },\\r\\n    { name: \\\"旺财\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\\r\\n\\r\\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 有2个动物没有接种疫苗。\",\n\t\"3.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", vaccinated: true },\\r\\n    { name: \\\"机器人\\\", vaccinated: false },\\r\\n    { name: \\\"旺财\\\", vaccinated: false }\\r\\n];\\r\\n\\r\\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\\r\\n\\r\\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 有2个动物没有接种疫苗。\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/count.json\n// module id = 317\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let defaultPet = { name: \\\"默认宠物名称\\\", age: 0 };\\r\\n\\r\\nlet pets1 = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`宠物名称是：${ pet.name }`);\\r\\n}\\r\\n\\r\\nconsole.log();\\r\\n\\r\\nlet pets2 = [];\\r\\n\\r\\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\\r\\n    console.log(`宠物名称是：${ pet.name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 宠物名称是：小白\\r\\n 宠物名称是：机器人\\r\\n 宠物名称是：旺财\\r\\n\\r\\n 宠物名称是：默认宠物名称\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json\n// module id = 318\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\\r\\n\\r\\nlet distinctAges = ages.asEnumerable().distinct();\\r\\n\\r\\nconsole.log(\\\"不重复的年龄有：\\\");\\r\\n\\r\\nfor (let age of distinctAges) {\\r\\n    console.log(age);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 不重复的年龄有：\\r\\n 21\\r\\n 46\\r\\n 55\\r\\n 17\\r\\n */\\r\\n\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和编号相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet products = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// 去除重复\\r\\nlet noduplicates = products.asEnumerable().distinct(productComparer);\\r\\n\\r\\nfor (let product of noduplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果 9\\r\\n 橘子 4\\r\\n 柠檬 12\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/distinct.json\n// module id = 319\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet name = names.asEnumerable().elementAt(4);\\r\\n\\r\\nconsole.log(`名字是“${ name }”。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 名字是“洪金宝”。\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/elementAt.json\n// module id = 320\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet index = 20;\\r\\n\\r\\nlet name = names.asEnumerable().elementAtOrDefault(index, \\\"【这个位置上没有人】\\\");\\r\\n\\r\\nconsole.log(`在位置${ index }上的名字是“${ name }”。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 在位置20上的名字是“【这个位置上没有人】”。\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json\n// module id = 321\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/every.json\n// module id = 322\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\\r\\nlet numbers2 = [ 2.2 ];\\r\\n\\r\\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\\r\\n\\r\\nfor (let number of onlyInFirstSet) {\\r\\n    console.log(number);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 2\\r\\n 2.1\\r\\n 2.3\\r\\n 2.4\\r\\n 2.5\\r\\n */\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和数目相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet fruits1 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\nlet fruits2 = [ { name: \\\"苹果\\\", code: 9 } ];\\r\\n\\r\\n//获取第一个数组中的全部元素\\r\\n//除了出现在第二个数组中的元素。\\r\\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\\r\\n\\r\\nfor (let product of except) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 橘子 4\\r\\n 柠檬 12\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/except.json\n// module id = 323\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/fill.json\n// module id = 324\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/filter.json\n// module id = 325\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/find.json\n// module id = 326\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/findIndex.json\n// module id = 327\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/findLast.json\n// module id = 328\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json\n// module id = 329\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first();\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 9\\r\\n */\",\n\t\"2.js\": \"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\\r\\n\\r\\nlet first = numbers.asEnumerable().first(number => number > 80);\\r\\n\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 92\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/first.json\n// module id = 330\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let numbers = [];\\r\\nlet first = numbers.asEnumerable().firstOrDefault(0);\\r\\nconsole.log(first);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 0\\r\\n */\",\n\t\"2.js\": \"let names = [ \\\"李小龙\\\", \\\"李连杰\\\", \\\"六小龄童\\\", \\\"甄子丹\\\", \\\"成龙\\\", \\\"洪金宝\\\" ];\\r\\n\\r\\nlet firstLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 3);\\r\\n\\r\\nconsole.log(`第一个最长的名字是：“${ firstLongName }”。`);\\r\\n\\r\\nlet firstVeryLongName = names.asEnumerable().firstOrDefault(\\\"\\\", name => name.length > 4);\\r\\n\\r\\nconsole.log(`${ firstVeryLongName === \\\"\\\" ? \\\"没有\\\" : \\\"有\\\" }名字的长度多于4个字。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 第一个最长的名字是：“六小龄童”。\\r\\n 没有名字的长度多于4个字。\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json\n// module id = 331\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/forEach.json\n// module id = 332\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json\n// module id = 333\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"// 创建一个宠物的序列。\\r\\nlet pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 },\\r\\n    { name: \\\"小黑\\\", age: 4 }\\r\\n];\\r\\n\\r\\n// 使用年龄作为分组的键同时\\r\\n// 使用宠物的名字作为每个分组中的元素。\\r\\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let petGroup of query) {\\r\\n    // 输出该组的键。\\r\\n    console.log(petGroup.key);\\r\\n    // 循环每个结果的内容。\\r\\n    for (let name of petGroup)\\r\\n        // 输出 IGrouping 中的值。\\r\\n        console.log(`  ${ name }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 8\\r\\n   小白\\r\\n 4\\r\\n   机器人\\r\\n   小黑\\r\\n 1\\r\\n   旺财\\r\\n */\\r\\n\",\n\t\"2-2.1.19.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count(),\\r\\n        min: pets.min(pet => pet.age),\\r\\n        max: pets.max(pet => pet.age)\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n    console.log(\\\"该组的最小年龄：\\\" + result.min);\\r\\n    console.log(\\\"该组的最大年龄：\\\" + result.max);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：8.3\\r\\n 该组的最大年龄：8.3\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n 该组的最小年龄：4.3\\r\\n 该组的最大年龄：4.9\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：1.5\\r\\n 该组的最大年龄：1.5\\r\\n */\",\n\t\"2.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键与数量的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet,\\r\\n    (age, pets) => ({\\r\\n        key: age,\\r\\n        count: pets.count()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n */\",\n\t\"3-2.1.19.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count(),\\r\\n        min: ages.min(),\\r\\n        max: ages.max()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n    console.log(\\\"该组的最小年龄：\\\" + result.min);\\r\\n    console.log(\\\"该组的最大年龄：\\\" + result.max);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：8.3\\r\\n 该组的最大年龄：8.3\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n 该组的最小年龄：4.3\\r\\n 该组的最大年龄：4.9\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n 该组的最小年龄：1.5\\r\\n 该组的最大年龄：1.5\\r\\n */\",\n\t\"3.js\": \"// 创建一个宠物的序列。\\r\\nlet petsList = [\\r\\n    { name: \\\"小白\\\", age: 8.3 },\\r\\n    { name: \\\"机器人\\\", age: 4.9 },\\r\\n    { name: \\\"旺财\\\", age: 1.5 },\\r\\n    { name: \\\"小黑\\\", age: 4.3 }\\r\\n];\\r\\n\\r\\n// 按照整数年龄进行分组\\r\\n// 然后按每个分组生成\\r\\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\\r\\nlet query = petsList.asEnumerable().groupBy(\\r\\n    pet => Math.floor(pet.age),\\r\\n    pet => pet.age,\\r\\n    (age, ages) => ({\\r\\n        key: age,\\r\\n        count: ages.count()\\r\\n    }));\\r\\n\\r\\n// 循环每个组的结果。\\r\\nfor (let result of query) {\\r\\n    console.log(\\\"\\\\n年龄组：\\\" + result.key);\\r\\n    console.log(\\\"该组包含的宠物数量：\\\" + result.count);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄组：8\\r\\n 该组包含的宠物数量：1\\r\\n\\r\\n 年龄组：4\\r\\n 该组包含的宠物数量：2\\r\\n\\r\\n 年龄组：1\\r\\n 该组包含的宠物数量：1\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/groupBy.json\n// module id = 334\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let xi = { name: \\\"习大大\\\" };\\r\\nlet wang = { name: \\\"王思聪\\\" };\\r\\nlet li = { name: \\\"李小龙\\\" };\\r\\n\\r\\nlet white = { name: \\\"小白\\\", owner: wang };\\r\\nlet boots = { name: \\\"机器人\\\", owner: wang };\\r\\nlet black = { name: \\\"黑蛋\\\", owner: li };\\r\\nlet cai = { name: \\\"旺财\\\", owner: xi };\\r\\n\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\n// 生成一个每个元素都包含\\r\\n// 主人名字和其所有宠物名字列表\\r\\n// 的新序列\\r\\nlet query = people.asEnumerable().groupJoin(pets,\\r\\n    (person, petCollection) => ({\\r\\n        ownerName: person.name,\\r\\n        pets: petCollection.select(pet => pet.name)\\r\\n    }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    // 输入该主人姓名。\\r\\n    console.log(`${ obj.ownerName }：`);\\r\\n    // 输入该主人所有宠物的名字。\\r\\n    for (let pet of obj.pets) {\\r\\n        console.log(`  ${ pet }`);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大：\\r\\n   旺财\\r\\n 王思聪：\\r\\n   小白\\r\\n   机器人\\r\\n 李小龙：\\r\\n   黑蛋\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/groupJoin.json\n// module id = 335\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/includes.json\n// module id = 336\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/indexOf.json\n// module id = 337\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let id1 = [ 44, 26, 92, 30, 71, 38 ];\\r\\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\\r\\n\\r\\nlet both = id1.asEnumerable().intersect(id2);\\r\\n\\r\\nfor (let id of both) {\\r\\n    console.log(id);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 26\\r\\n 30\\r\\n */\",\n\t\"2.js\": \"// 一个自定义的比较器。\\r\\nlet productComparer = (x, y) => {\\r\\n    if (x === y) return true;\\r\\n    if (!x || !y) return false;\\r\\n    // 如果产品的名称和编号相等，则表示是相同的产品。\\r\\n    return x.code === y.code && x.name === y.name;\\r\\n};\\r\\n\\r\\nlet store1 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"橘子\\\", code: 4 }\\r\\n];\\r\\nlet store2 = [\\r\\n    { name: \\\"苹果\\\", code: 9 },\\r\\n    { name: \\\"柠檬\\\", code: 12 }\\r\\n];\\r\\n\\r\\n// 获取所有的在第一个数组从出现\\r\\n// 又在第二个数组中出现了的产品\\r\\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\\r\\n\\r\\nfor (let product of duplicates) {\\r\\n    console.log(product.name + \\\" \\\" + product.code);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 苹果 9\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/intersect.json\n// module id = 338\n// module chunks = 0","module.exports = {\n\t\"0.1.js\": \"[1, 2, 3].join('|');\",\n\t\"1.1.js\": \"let xi = { name: \\\"习大大\\\" };\\r\\nlet wang = { name: \\\"王思聪\\\" };\\r\\nlet li = { name: \\\"李小龙\\\" };\\r\\n\\r\\nlet white = { name: \\\"小白\\\", owner: wang };\\r\\nlet boots = { name: \\\"机器人\\\", owner: wang };\\r\\nlet black = { name: \\\"黑蛋\\\", owner: li };\\r\\nlet cai = { name: \\\"旺财\\\", owner: xi };\\r\\n\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\n// 从主人序列与宠物序列及其关系中\\r\\n// 构建一个 主人-宠物 键值对的新序列\\r\\n// 新序列的每个元素包含宠物名称和宠物主人的姓名\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大 - 旺财\\r\\n 王思聪 - 小白\\r\\n 王思聪 - 机器人\\r\\n 李小龙 - 黑蛋\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/join.json\n// module id = 339\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/last.json\n// module id = 340\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json\n// module id = 341\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json\n// module id = 342\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/map.json\n// module id = 343\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet max = longs.asEnumerable().max();\\r\\n\\r\\nconsole.log(`最大的数字是${ max }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最大的数字是4294967296。\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\\r\\n\\r\\nconsole.log(`最大的年龄加名字长度是${ max }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最大的年龄加名字长度是10。\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/max.json\n// module id = 344\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let longs = [ 4294967296, 466855135, 81125 ];\\r\\n\\r\\nlet min = longs.asEnumerable().min();\\r\\n\\r\\nconsole.log(`最小的数字是${ min }。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 最小的数字是81125。\\r\\n */\",\n\t\"2.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet min = pets.asEnumerable().min(pet => pet.age);\\r\\n\\r\\nconsole.log(`年龄最小的宠物是${ min }岁。`);\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 年龄最小的宠物是1岁。\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/min.json\n// module id = 345\n// module chunks = 0","module.exports = {\n\t\"1-2.1.19.js\": \"let fruits = [\\\"芒果\\\", \\\"橘子\\\", \\\"苹果\\\", 3.0, \\\"香蕉\\\"];\\r\\n\\r\\n// 对序列执行 ofType 方法\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"元素是 String 类型的有：\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains(\\\"果\\\", Enumerable.comparers.ignoreCase()));\\r\\n\\r\\nconsole.log(\\\"\\\\n下列字符串包含 “果”：\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 元素是 String 类型的有：\\r\\n// 芒果\\r\\n// 橘子\\r\\n// 苹果\\r\\n// 香蕉\\r\\n//\\r\\n// 下列字符串包含 “果”：\\r\\n// 芒果\\r\\n// 苹果\",\n\t\"1.js\": \"let fruits = [\\\"芒果\\\", \\\"橘子\\\", \\\"苹果\\\", 3.0, \\\"香蕉\\\"];\\r\\n\\r\\n// 对序列执行 ofType 方法\\r\\nlet query1 = fruits.asEnumerable().ofType(String);\\r\\n\\r\\nconsole.log(\\\"元素是 String 类型的有：\\\");\\r\\nfor (let fruit of query1) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\\r\\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains(\\\"果\\\"));\\r\\n\\r\\nconsole.log(\\\"\\\\n下列字符串包含 “果”：\\\");\\r\\nfor (let fruit of query2) {\\r\\n    console.log(fruit);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 元素是 String 类型的有：\\r\\n// 芒果\\r\\n// 橘子\\r\\n// 苹果\\r\\n// 香蕉\\r\\n//\\r\\n// 下列字符串包含 “果”：\\r\\n// 芒果\\r\\n// 苹果\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/ofType.json\n// module id = 346\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", age: 8 },\\r\\n    { name: \\\"机器人\\\", age: 4 },\\r\\n    { name: \\\"旺财\\\", age: 1 }\\r\\n];\\r\\n\\r\\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(`${ pet.name } - ${ pet.age }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 旺财 - 1\\r\\n 机器人 - 4\\r\\n 小白 - 8\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/orderBy.json\n// module id = 347\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"const specialComparer = (d1, d2) => {\\r\\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\\r\\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\\r\\n    if (f1 === f2) {\\r\\n        return d1 - d2;\\r\\n    } else if (f1 > f2) {\\r\\n        return 1;\\r\\n    } else {\\r\\n        return -1;\\r\\n    }\\r\\n};\\r\\n\\r\\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\\r\\n\\r\\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\\r\\n\\r\\nfor (let num of query) {\\r\\n    console.log(num);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 9.7\\r\\n 0.5\\r\\n 8.3\\r\\n 6.3\\r\\n 1.3\\r\\n 6.2\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json\n// module id = 348\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/pop.json\n// module id = 349\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/product.json\n// module id = 350\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/push.json\n// module id = 351\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/rand.json\n// module id = 352\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/reduce.json\n// module id = 353\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/reduceRight.json\n// module id = 354\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/reserver.json\n// module id = 355\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/reverse.json\n// module id = 356\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/rightJoin.json\n// module id = 357\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/rightPad.json\n// module id = 358\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let squares = Enumerable.range(1, 10).select(x => x * x);\\r\\n\\r\\nfor (let num of squares) {\\r\\n    console.log(num);\\r\\n}\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 1\\r\\n 4\\r\\n 9\\r\\n 16\\r\\n 25\\r\\n 36\\r\\n 49\\r\\n 64\\r\\n 81\\r\\n 100\\r\\n*/\",\n\t\"2.js\": \"let fruits = [ \\\"苹果\\\", \\\"海南香蕉\\\", \\\"芒果\\\", \\\"沙糖桔\\\", \\\"西番莲的果实\\\", \\\"长城干红葡萄酒\\\" ];\\r\\n\\r\\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n {\\\"index\\\":0,\\\"str\\\":\\\"\\\"}\\r\\n {\\\"index\\\":1,\\\"str\\\":\\\"海\\\"}\\r\\n {\\\"index\\\":2,\\\"str\\\":\\\"芒果\\\"}\\r\\n {\\\"index\\\":3,\\\"str\\\":\\\"沙糖桔\\\"}\\r\\n {\\\"index\\\":4,\\\"str\\\":\\\"西番莲的\\\"}\\r\\n {\\\"index\\\":5,\\\"str\\\":\\\"长城干红葡\\\"}\\r\\n*/\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/select.json\n// module id = 359\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"旺财\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"花花\\\", \\\"狗带\\\" ] }\\r\\n];\\r\\n\\r\\n// 使用 selectMany() 查询。\\r\\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"使用 selectMany()：\\\");\\r\\n\\r\\n// 只需要一个循环来遍历这个结果序列，\\r\\n// 因为它已经是一个一维序列了。\\r\\nfor (let pet of query1) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// 下面的代码演示了如何使用 select()\\r\\n// 来代替 selectMany()。\\r\\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\\r\\n\\r\\nconsole.log(\\\"\\\\n使用 select()：\\\");\\r\\n\\r\\n// 需要两层循环来遍历结果序列，\\r\\n// 因为它是一个元素为序列的序列。\\r\\nfor (let petList of query2) {\\r\\n    for (let pet of petList) {\\r\\n        console.log(pet);\\r\\n    }\\r\\n    console.log();\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 使用 selectMany()：:\\r\\n 小白\\r\\n 旺财\\r\\n 大黄\\r\\n 甜心\\r\\n 花花\\r\\n 狗带\\r\\n\\r\\n 使用 select()：:\\r\\n 小白\\r\\n 旺财\\r\\n\\r\\n 大黄\\r\\n 甜心\\r\\n\\r\\n 花花\\r\\n 狗带\\r\\n\\r\\n*/\",\n\t\"2.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"小石头\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"小甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"小花\\\", \\\"狗带\\\" ] },\\r\\n    { name: \\\"甄子丹\\\", pets: [ \\\"斑点\\\" ] }\\r\\n];\\r\\n\\r\\n// 使用宠物列表中的宠物名字\\r\\n// 追加在宠物主人的序号后的方式\\r\\n// 投影序列中的元素。\\r\\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\\r\\n        petOwner.pets.asEnumerable().select(pet => index + pet));\\r\\n\\r\\nfor (let pet of query) {\\r\\n    console.log(pet);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// 0小白\\r\\n// 0小石头\\r\\n// 1大黄\\r\\n// 1小甜心\\r\\n// 2小花\\r\\n// 2狗带\\r\\n// 3斑点\",\n\t\"3.js\": \"let petOwners = [\\r\\n    { name: \\\"李小龙\\\", pets: [ \\\"小白\\\", \\\"小石头\\\" ] },\\r\\n    { name: \\\"成龙\\\", pets: [ \\\"大黄\\\", \\\"小甜心\\\" ] },\\r\\n    { name: \\\"李连杰\\\", pets: [ \\\"小花\\\", \\\"狗带\\\" ] },\\r\\n    { name: \\\"甄子丹\\\", pets: [ \\\"斑点\\\" ] }\\r\\n];\\r\\n\\r\\n// 投影宠物主人的名称和宠物的名称。\\r\\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\\r\\n        .where(ownerAndPet => ownerAndPet.petName.startsWith(\\\"小\\\"))\\r\\n        .select(ownerAndPet => ({\\r\\n            owner: ownerAndPet.petOwner.name,\\r\\n            pet: ownerAndPet.petName\\r\\n        }));\\r\\n\\r\\n// 输出结果。\\r\\nfor (let obj of query) {\\r\\n    console.log(obj);\\r\\n}\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n// {\\\"owner\\\":\\\"李小龙\\\",\\\"pet\\\":\\\"小白\\\"}\\r\\n// {\\\"owner\\\":\\\"李小龙\\\",\\\"pet\\\":\\\"小石头\\\"}\\r\\n// {\\\"owner\\\":\\\"成龙\\\",\\\"pet\\\":\\\"小甜心\\\"}\\r\\n// {\\\"owner\\\":\\\"李连杰\\\",\\\"pet\\\":\\\"小花\\\"}\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/IEnumerable/methods/selectMany.json\n// module id = 360\n// module chunks = 0","module.exports = {\n\t\"config.as.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\",\n\t\"config.as.try.js\": \"Enumerable.config.as = 'em';\\r\\nlet enumerable = [1, 2, 3].em();\\r\\nconsole.log(enumerable);\",\n\t\"config.extends.js\": \"Enumerable.config.extends.array = true; //开启针对 Array 的扩展，使 Array 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（推荐开启）\\r\\nEnumerable.config.extends.string = true; //开启针对 String 的扩展，使 String 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）\\r\\nEnumerable.config.extends.object = true; //开启针对 Object 的扩展，使任何对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/config.json\n// module id = 361\n// module chunks = 0","module.exports = {\n\t\"asEnumerable.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nlet s = 'abc'.asEnumerable();\",\n\t\"asEnumerable.try.js\": \"let a = [1, 2, 3].asEnumerable();\\r\\nconsole.log(a);\\r\\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\\r\\nconsole.log(o);\\r\\nlet s = 'abc'.asEnumerable();\\r\\nconsole.log(s);\",\n\t\"Enumerable.asEnumerable.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\",\n\t\"Enumerable.asEnumerable.try.js\": \"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\\r\\nconsole.log(enumerable);\",\n\t\"Enumerable.js\": \"let enumerable = Enumerable([1, 2, 3]);\",\n\t\"Enumerable.try.js\": \"let enumerable = Enumerable([1, 2, 3]);\\r\\nconsole.log(enumerable);\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/instance.json\n// module id = 362\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"小黑\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"旺财\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\npets.asEnumerable().select(\\\"name\\\");\\r\\n//上述代码等价于以下代码\\r\\npets.asEnumerable().select(pet => pet.name);\",\n\t\"1.try.js\": \"let pets = [\\r\\n    { name: \\\"小白\\\", props: { age: 10, weight: 59 } },\\r\\n    { name: \\\"小黑\\\", props: { age: 14, weight: 50 } },\\r\\n    { name: \\\"旺财\\\", props: { age: 6, weight: 36 } }\\r\\n];\\r\\n\\r\\nconsole.log(pets.asEnumerable().select(\\\"name\\\"));\\r\\n//上述代码等价于以下代码\\r\\nconsole.log(pets.asEnumerable().select(pet => pet.name));\\r\\n\",\n\t\"2.js\": \"let arrays = [\\r\\n    [ 1, 2, 4, 8 ],\\r\\n    [ 1, 3, 9 ],\\r\\n    [ 1, 5 ]\\r\\n];\\r\\n\\r\\narrays.asEnumerable().select(1);\\r\\n//上述代码等价于以下代码\\r\\narrays.asEnumerable().select(array => array[1]);\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/selector.json\n// module id = 363\n// module chunks = 0","module.exports = {\n\t\"1.js\": \"let pets = [ { name: \\\"小白\\\", age: 8, vaccinated: true }, { name: \\\"大黄\\\", age: 4, vaccinated: false }, { name: \\\"旺财\\\", age: 1, vaccinated: false } ];\\r\\n\\r\\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\\r\\n\\r\\nconsole.log(`${ unvaccinated ? \\\"有\\\" : \\\"没有\\\" }超过一岁未接种疫苗的动物。`);\\r\\n\\r\\n// 这段代码的输出结果如下：\\r\\n//\\r\\n//  有超过一岁未接种疫苗的动物。\",\n\t\"2.js\": \"let xi = { name: \\\"习大大\\\" }, wang = { name: \\\"王思聪\\\" }, li = { name: \\\"李小龙\\\" };\\r\\nlet white = { name: \\\"小白\\\", owner: wang }, boots = { name: \\\"机器人\\\", owner: wang }, black = { name: \\\"黑蛋\\\", owner: li }, cai = { name: \\\"旺财\\\", owner: xi };\\r\\nlet people = [ xi, wang, li ];\\r\\nlet pets = [ white, boots, black, cai ];\\r\\n\\r\\nlet query = people.asEnumerable().join(pets,\\r\\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\\r\\n    person => person,\\r\\n    pet => pet.owner);\\r\\n\\r\\nfor (let obj of query) {\\r\\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\\r\\n}\\r\\n\\r\\n/*\\r\\n 这段代码的输出结果如下：\\r\\n\\r\\n 习大大 - 旺财\\r\\n 王思聪 - 小白\\r\\n 王思聪 - 机器人\\r\\n 李小龙 - 黑蛋\\r\\n */\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/examples/use.json\n// module id = 364\n// module chunks = 0","module.exports = {\n\t\"title\": \"执行器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是执行器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"执行器是一个仅对输入值执行一系列计算的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"通常一个执行器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 执行一系列计算, 但无需返回任何数值\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"void\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/action.json\n// module id = 365\n// module chunks = 0","module.exports = {\n\t\"title\": \"比较器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"比较器是一个反映两个输入值之间关系的函数\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"大小比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"大小比较器是一个反映两个输入值之间大小关系的比较器\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"相等比较器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"相等比较器是一个反映两个输入值是否相等的比较器\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"other\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.comparers\",\n\t\t\t\t\t\t\"property\": \"equality\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/comparer.json\n// module id = 366\n// module chunks = 0","module.exports = {\n\t\"title\": \"配置\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"配置获取 IEnumerable 对象的方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"默认的获取 IEnumerable 对象的方法名为 asEnumerable, 通过 config.as 属性可以修改此方法名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"config.as.js\",\n\t\t\t\t\t\t\"tryHref\": \"config.as.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"warning\",\n\t\t\t\t\t\"content\": \"修改后 asEnumerable 方法依然有效\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"配置内置对象的扩展\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"使用如下方式可以对javascript中原生的对象进行扩展\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"config.extends.js\",\n\t\t\t\t\t\t\"notTry\": true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/config.json\n// module id = 367\n// module chunks = 0","module.exports = {\n\t\"title\": \"枚举器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是枚举器\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/enumerator.json\n// module id = 368\n// module chunks = 0","module.exports = {\n\t\"title\": \"扩展\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"为什么需要扩展\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"扩展对象\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/extend.json\n// module id = 369\n// module chunks = 0","module.exports = {\n\t\"title\": \"获取 IEnumerable 实例\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"通过 Enumerable 构造方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"可以通过 Enumerable 类的构造方法获取一个 IEnumerable 对象\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"Enumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"Enumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\"constructor\": true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"通过 Enumerable.asEnumerable 方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"Enumerable.asEnumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"Enumerable.asEnumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable\",\n\t\t\t\t\t\t\"method\": \"asEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"通过 asEnumerable 方法获取\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"引入linq-js后, 任何对象都包含一个 asEnumerable 方法, 可以直接获取一个 IEnumerable 对象\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"asEnumerable.js\",\n\t\t\t\t\t\t\"tryHref\": \"asEnumerable.try.js\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/instance.json\n// module id = 370\n// module chunks = 0","module.exports = {\n\t\"title\": \"迭代器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是迭代器\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"ES6中的迭代器\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"迭代器的 asEnumerable 方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"迭代器也存在 asEnumerable 方法, 同样返回一个 IEnumerable 对象. 由于遍历器的特殊性, 通过遍历器的 asEnumerable 方法获得的 IEnumerable 对象的元素只能被迭代一次, 或者其延迟执行的方法只能被执行一次\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/iterator.json\n// module id = 371\n// module chunks = 0","module.exports = {\n\t\"title\": \"插件\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是插件\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"添加插件\",\n\t\t\t\"descriptions\": []\n\t\t},\n\t\t{\n\t\t\t\"title\": \"移除插件\",\n\t\t\t\"descriptions\": []\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/plugin.json\n// module id = 372\n// module chunks = 0","module.exports = {\n\t\"title\": \"筛选器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是筛选器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"筛选器是一个判断输入参数是否满足条件的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"通常一个筛选器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 返回一个 boolean 值表示该参数或与其索引是否满足指定的条件\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"element\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/predicate.json\n// module id = 373\n// module chunks = 0","module.exports = {\n\t\"title\": \"选择器\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"什么是选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"选择器是一个将输入值映射到一个输出值的函数\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"该函数接受一个或多个输入值, 有些情况下还接受输入值所在序列中的索引作为参数, 经过一系列自定义的运算, 最终返回一个对应的值, 返回值通常用来组成新的序列或进行其他运算\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"一元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"element\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"Enumerable.selectors\",\n\t\t\t\t\t\t\"property\": \"default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"二元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"function\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"returns\": {\n\t\t\t\t\t\t\t\"type\": \"any\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"first\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"any\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"second\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"types\": [\n\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\t\t\t\"optional\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"使用字符串/数字/符号代替一元选择器\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"可以使用字符串、数字或符号代替一元选择器，以下实例展示字符串或数字代替的一元选择器与一元选择器的等级关系\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"1.js\",\n\t\t\t\t\t\t\"tryHref\": \"1.try.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"2.js\",\n\t\t\t\t\t\t\"notTry\": true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"warning\",\n\t\t\t\t\t\"content\": \"自 2.1.19 版本后才开始接受数字/符号参数\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/selector.json\n// module id = 374\n// module chunks = 0","module.exports = {\n\t\"title\": \"开始使用\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"title\": \"可以使用 LINQ 中的一些方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"获取到 IEnumerable 对象后既可以使用 LINQ 中提供的一些方法\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"remark\",\n\t\t\t\t\t\"content\": \"以下例子中展示了一些常用的 LINQ 功能\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"1.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\"href\": \"2.js\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"IEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"可以使用原生 Array 的一些方法\",\n\t\t\t\"descriptions\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"description\",\n\t\t\t\t\t\"content\": \"获取到 IEnumerable 对象后除了可以使用 LINQ 提供的一些方法的同时还可以使用原生 Array 提供的一些方法\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"see\",\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"apis\": \"IEnumerable\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/guides/use.json\n// module id = 375\n// module chunks = 0","module.exports = {\n\t\"icon\": \"\",\n\t\"code\": \"install\",\n\t\"title\": \"安装\",\n\t\"contents\": [\n\t\t{\n\t\t\t\"code\": \"addIn\",\n\t\t\t\"title\": \"添加至项目\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"runtime\": \"Node JS\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"bash\",\n\t\t\t\t\t\t\t\"script\": \"$ npm install --save linq-js\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"runtime\": \"Bower\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"bash\",\n\t\t\t\t\t\t\t\"script\": \"$ bower install js-linq\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"code\": \"require\",\n\t\t\t\"title\": \"引入\",\n\t\t\t\"details\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"example\",\n\t\t\t\t\t\"scripts\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"javascript\",\n\t\t\t\t\t\t\t\"script\": \"const Enumerable = require('linq-js');\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"remarks\": [\n\t\t\t\t\t\t\"说明:本module依赖于ES6,建议项目在中使用ES6,以下案例中将均使用ES6写法\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/install.json\n// module id = 376\n// module chunks = 0","module.exports = {\n\t\"code\": \"introduction\",\n\t\"title\": \"简介\",\n\t\"shields\": [\n\t\t{\n\t\t\t\"href\": \"https://github.com/wm123450405/linqjs\",\n\t\t\t\"image\": \"https://img.shields.io/github/release/wm123450405/linqjs.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\",\n\t\t\t\"image\": \"https://img.shields.io/npm/v/linq-js.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://www.npmjs.com/package/linq-js\",\n\t\t\t\"image\": \"https://img.shields.io/npm/dm/linq-js.svg\"\n\t\t},\n\t\t{\n\t\t\t\"href\": \"https://travis-ci.org/wm123450405/linqjs\",\n\t\t\t\"image\": \"https://img.shields.io/travis/wm123450405/linqjs.svg\"\n\t\t}\n\t],\n\t\"contents\": [\n\t\t\"在javascript(ES6标准)中使用linq与lambda\",\n\t\t\"&nbsp;\",\n\t\t\"在1.0.0中使用了字符串的lambda表达式,过于繁琐,并且不支持延迟操作\",\n\t\t\"从2.1.0开始整体代码重新编写,使用全新的ES6的特性,性能更好,同时对数据的操作是延时操作,占用更少\",\n\t\t\"&nbsp;\",\n\t\t\"穷人,求捐赠: <a href=\\\"http://git.oschina.net/wm123450405/linqjs\\\">http://git.oschina.net/wm123450405/linqjs</a>\"\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/introduction.json\n// module id = 377\n// module chunks = 0","module.exports = {\n\t\"name\": \"中文版\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/resources/zh-cn/meta.json\n// module id = 378\n// module chunks = 0"],"sourceRoot":""}